{
	"contractName": "freelancer",
	"abi": [
	  {
		"inputs": [],
		"stateMutability": "nonpayable",
		"type": "constructor"
	  },
	  {
		"anonymous": false,
		"inputs": [
		  {
			"indexed": false,
			"internalType": "int256",
			"name": "scheduleID",
			"type": "int256"
		  },
		  {
			"indexed": false,
			"internalType": "uint256",
			"name": "valueReleased",
			"type": "uint256"
		  }
		],
		"name": "fundsReleased",
		"type": "event"
	  },
	  {
		"anonymous": false,
		"inputs": [
		  {
			"indexed": false,
			"internalType": "address",
			"name": "clientAddress",
			"type": "address"
		  }
		],
		"name": "projectAccepted",
		"type": "event"
	  },
	  {
		"anonymous": false,
		"inputs": [],
		"name": "projectEnded",
		"type": "event"
	  },
	  {
		"anonymous": false,
		"inputs": [
		  {
			"indexed": false,
			"internalType": "string",
			"name": "shortCode",
			"type": "string"
		  }
		],
		"name": "scheduleAdded",
		"type": "event"
	  },
	  {
		"anonymous": false,
		"inputs": [
		  {
			"indexed": false,
			"internalType": "int256",
			"name": "scheduleID",
			"type": "int256"
		  }
		],
		"name": "taskApproved",
		"type": "event"
	  },
	  {
		"anonymous": false,
		"inputs": [
		  {
			"indexed": false,
			"internalType": "int256",
			"name": "scheduleID",
			"type": "int256"
		  }
		],
		"name": "taskFunded",
		"type": "event"
	  },
	  {
		"anonymous": false,
		"inputs": [
		  {
			"indexed": false,
			"internalType": "int256",
			"name": "scheduleID",
			"type": "int256"
		  }
		],
		"name": "taskStarted",
		"type": "event"
	  },
	  {
		"inputs": [],
		"name": "clientAddress",
		"outputs": [
		  {
			"internalType": "address",
			"name": "",
			"type": "address"
		  }
		],
		"stateMutability": "view",
		"type": "function"
	  },
	  {
		"inputs": [],
		"name": "freelancerAddress",
		"outputs": [
		  {
			"internalType": "address payable",
			"name": "",
			"type": "address"
		  }
		],
		"stateMutability": "view",
		"type": "function"
	  },
	  {
		"inputs": [],
		"name": "projectState",
		"outputs": [
		  {
			"internalType": "enum freelancer.ProjectState",
			"name": "",
			"type": "uint8"
		  }
		],
		"stateMutability": "view",
		"type": "function"
	  },
	  {
		"inputs": [
		  {
			"internalType": "int256",
			"name": "",
			"type": "int256"
		  }
		],
		"name": "scheduleRegister",
		"outputs": [
		  {
			"internalType": "string",
			"name": "shortCode",
			"type": "string"
		  },
		  {
			"internalType": "string",
			"name": "description",
			"type": "string"
		  },
		  {
			"internalType": "uint256",
			"name": "value",
			"type": "uint256"
		  },
		  {
			"internalType": "enum freelancer.ScheduleState",
			"name": "scheduleState",
			"type": "uint8"
		  }
		],
		"stateMutability": "view",
		"type": "function"
	  },
	  {
		"inputs": [],
		"name": "totalSchedules",
		"outputs": [
		  {
			"internalType": "int256",
			"name": "",
			"type": "int256"
		  }
		],
		"stateMutability": "view",
		"type": "function"
	  },
	  {
		"inputs": [
		  {
			"internalType": "string",
			"name": "_shortCode",
			"type": "string"
		  },
		  {
			"internalType": "string",
			"name": "_description",
			"type": "string"
		  },
		  {
			"internalType": "uint256",
			"name": "_value",
			"type": "uint256"
		  }
		],
		"name": "addSchedule",
		"outputs": [],
		"stateMutability": "nonpayable",
		"type": "function"
	  },
	  {
		"inputs": [],
		"name": "acceptProject",
		"outputs": [],
		"stateMutability": "nonpayable",
		"type": "function"
	  },
	  {
		"inputs": [
		  {
			"internalType": "int256",
			"name": "_scheduleID",
			"type": "int256"
		  }
		],
		"name": "fundTask",
		"outputs": [],
		"stateMutability": "payable",
		"type": "function"
	  },
	  {
		"inputs": [
		  {
			"internalType": "int256",
			"name": "_scheduleID",
			"type": "int256"
		  }
		],
		"name": "startTask",
		"outputs": [],
		"stateMutability": "nonpayable",
		"type": "function"
	  },
	  {
		"inputs": [
		  {
			"internalType": "int256",
			"name": "_scheduleID",
			"type": "int256"
		  }
		],
		"name": "approveTask",
		"outputs": [],
		"stateMutability": "nonpayable",
		"type": "function"
	  },
	  {
		"inputs": [
		  {
			"internalType": "int256",
			"name": "_scheduleID",
			"type": "int256"
		  }
		],
		"name": "releaseFunds",
		"outputs": [],
		"stateMutability": "payable",
		"type": "function"
	  },
	  {
		"inputs": [],
		"name": "endProject",
		"outputs": [],
		"stateMutability": "nonpayable",
		"type": "function"
	  },
	  {
		"inputs": [],
		"name": "getBalance",
		"outputs": [
		  {
			"internalType": "uint256",
			"name": "balance",
			"type": "uint256"
		  }
		],
		"stateMutability": "view",
		"type": "function"
	  }
	],
	"metadata": "{\"compiler\":{\"version\":\"0.8.0+commit.c7dfd78e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"scheduleID\",\"type\":\"int256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"valueReleased\",\"type\":\"uint256\"}],\"name\":\"fundsReleased\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"clientAddress\",\"type\":\"address\"}],\"name\":\"projectAccepted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"projectEnded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"shortCode\",\"type\":\"string\"}],\"name\":\"scheduleAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"scheduleID\",\"type\":\"int256\"}],\"name\":\"taskApproved\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"scheduleID\",\"type\":\"int256\"}],\"name\":\"taskFunded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"scheduleID\",\"type\":\"int256\"}],\"name\":\"taskStarted\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"acceptProject\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_shortCode\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_description\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"addSchedule\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"_scheduleID\",\"type\":\"int256\"}],\"name\":\"approveTask\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"clientAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"endProject\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"freelancerAddress\",\"outputs\":[{\"internalType\":\"address payable\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"_scheduleID\",\"type\":\"int256\"}],\"name\":\"fundTask\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"projectState\",\"outputs\":[{\"internalType\":\"enum freelancer.ProjectState\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"_scheduleID\",\"type\":\"int256\"}],\"name\":\"releaseFunds\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"\",\"type\":\"int256\"}],\"name\":\"scheduleRegister\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"shortCode\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"description\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"enum freelancer.ScheduleState\",\"name\":\"scheduleState\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"_scheduleID\",\"type\":\"int256\"}],\"name\":\"startTask\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSchedules\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"\",\"type\":\"int256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"project:/contracts/freelancer.sol\":\"freelancer\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"project:/contracts/freelancer.sol\":{\"keccak256\":\"0x4076c95589ef820d4f177d607e798c6099d6501054ed58eb234f452e5541a54f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8db94b35e822afcaaa6c7ea4adaea7bc2e12c6da860253eb99895ff7388a06fc\",\"dweb:/ipfs/QmcLjdQg6idrHwTm9ycki2LEEqZqXqneBtJ1H53ZP6sefc\"]}},\"version\":1}",
	"bytecode": "0x60806040526000805534801561001457600080fd5b5033600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506000600260146101000a81548160ff021916908360028111156100a2577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b0217905550611b2b806100b66000396000f3fe6080604052600436106100c25760003560e01c806384bf66ac1161007f578063bab5691011610059578063bab5691014610235578063bb6fc95014610275578063c396640914610291578063c916b6de146102a8576100c2565b806384bf66ac146101b8578063965720af146101e1578063b7896a301461020c576100c2565b8063054f84ed146100c757806306a4e7cb146100e357806312065fe01461010e5780632c2ab5ea146101395780636dc5434c14610164578063748807ab1461018d575b600080fd5b6100e160048036038101906100dc9190611502565b6102bf565b005b3480156100ef57600080fd5b506100f861052a565b6040516101059190611658565b60405180910390f35b34801561011a57600080fd5b50610123610550565b6040516101309190611747565b60405180910390f35b34801561014557600080fd5b5061014e610558565b60405161015b919061163d565b60405180910390f35b34801561017057600080fd5b5061018b60048036038101906101869190611502565b61057e565b005b34801561019957600080fd5b506101a26107c2565b6040516101af9190611673565b60405180910390f35b3480156101c457600080fd5b506101df60048036038101906101da919061152b565b6107d5565b005b3480156101ed57600080fd5b506101f6610a64565b604051610203919061168e565b60405180910390f35b34801561021857600080fd5b50610233600480360381019061022e9190611502565b610a6a565b005b34801561024157600080fd5b5061025c60048036038101906102579190611502565b610cae565b60405161026c94939291906116f4565b60405180910390f35b61028f600480360381019061028a9190611502565b610dfb565b005b34801561029d57600080fd5b506102a66110d7565b005b3480156102b457600080fd5b506102bd611214565b005b60018060028111156102fa577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b600260149054906101000a900460ff166002811115610342577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b1461034c57600080fd5b816000600160005461035e91906117df565b82131580156103ff57508060048111156103a1577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b6003600084815260200190815260200160002060030160009054906101000a900460ff1660048111156103fd577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b145b61040857600080fd5b83348060036000848152602001908152602001600020600201541461042c57600080fd5b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461048657600080fd5b60016003600088815260200190815260200160002060030160006101000a81548160ff021916908360048111156104e6577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b02179055507fd58e7b4972479e30bd65e34280dcda90802a617a803cb4b39764a2a30d3a8eae8660405161051a919061168e565b60405180910390a1505050505050565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600047905090565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60018060028111156105b9577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b600260149054906101000a900460ff166002811115610601577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b1461060b57600080fd5b816002600160005461061d91906117df565b82131580156106be5750806004811115610660577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b6003600084815260200190815260200160002060030160009054906101000a900460ff1660048111156106bc577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b145b6106c757600080fd5b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461072157600080fd5b600380600086815260200190815260200160002060030160006101000a81548160ff02191690836004811115610780577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b02179055507f38f72d6c98702d265aec82b55e4b637d84fa97622b2244cd84dca2f171a0cefc846040516107b4919061168e565b60405180910390a150505050565b600260149054906101000a900460ff1681565b6000806002811115610810577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b600260149054906101000a900460ff166002811115610858577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b1461086257600080fd5b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146108bc57600080fd5b6108c461136d565b848160000181905250838160200181905250600081606001906004811115610915577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b9081600481111561094f577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b8152505082816040018181525050806003600080548152602001908152602001600020600082015181600001908051906020019061098e9291906113cd565b5060208201518160010190805190602001906109ab9291906113cd565b506040820151816002015560608201518160030160006101000a81548160ff02191690836004811115610a07577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b0217905550905050600080815480929190610a2190611989565b91905055507ff29fdea51f7ec4cf45bbb7eb61e67fa64cf90101b5ea7415c5b02b69bac9c59485604051610a5591906116d2565b60405180910390a15050505050565b60005481565b6001806002811115610aa5577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b600260149054906101000a900460ff166002811115610aed577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b14610af757600080fd5b81600180600054610b0891906117df565b8213158015610ba95750806004811115610b4b577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b6003600084815260200190815260200160002060030160009054906101000a900460ff166004811115610ba7577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b145b610bb257600080fd5b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610c0c57600080fd5b60026003600086815260200190815260200160002060030160006101000a81548160ff02191690836004811115610c6c577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b02179055507fde2dc33fbe2a5b6bf5e0ed721d44dc14441c4eef2cf4975ce14fd7bc0549489c84604051610ca0919061168e565b60405180910390a150505050565b6003602052806000526040600020600091509050806000018054610cd190611957565b80601f0160208091040260200160405190810160405280929190818152602001828054610cfd90611957565b8015610d4a5780601f10610d1f57610100808354040283529160200191610d4a565b820191906000526020600020905b815481529060010190602001808311610d2d57829003601f168201915b505050505090806001018054610d5f90611957565b80601f0160208091040260200160405190810160405280929190818152602001828054610d8b90611957565b8015610dd85780601f10610dad57610100808354040283529160200191610dd8565b820191906000526020600020905b815481529060010190602001808311610dbb57829003601f168201915b5050505050908060020154908060030160009054906101000a900460ff16905084565b6001806002811115610e36577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b600260149054906101000a900460ff166002811115610e7e577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b14610e8857600080fd5b8160036001600054610e9a91906117df565b8213158015610f3b5750806004811115610edd577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b6003600084815260200190815260200160002060030160009054906101000a900460ff166004811115610f39577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b145b610f4457600080fd5b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610f9e57600080fd5b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc60036000878152602001908152602001600020600201549081150290604051600060405180830381858888f1935050505015801561101c573d6000803e3d6000fd5b5060046003600086815260200190815260200160002060030160006101000a81548160ff0219169083600481111561107d577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b02179055507fd73e163332c47993ba97b46887362ea1f01120cbc609242b41762901217bfd5d8460036000878152602001908152602001600020600201546040516110c99291906116a9565b60405180910390a150505050565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614806111805750600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16145b61118957600080fd5b6000471461119657600080fd5b60028060146101000a81548160ff021916908360028111156111e1577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b02179055507fbef1ef6470add1875c12e547d844894de0608f7d47527676863b44153090bfe260405160405180910390a1565b600080600281111561124f577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b600260149054906101000a900460ff166002811115611297577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b146112a157600080fd5b33600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506001600260146101000a81548160ff0219169083600281111561132e577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b02179055507f01bc39c23d192137df337abb0c6fe3f63a86ead52f73452ca64136a5dfd7ff4333604051611362919061163d565b60405180910390a150565b6040518060800160405280606081526020016060815260200160008152602001600060048111156113c7577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b81525090565b8280546113d990611957565b90600052602060002090601f0160209004810192826113fb5760008555611442565b82601f1061141457805160ff1916838001178555611442565b82800160010185558215611442579182015b82811115611441578251825591602001919060010190611426565b5b50905061144f9190611453565b5090565b5b8082111561146c576000816000905550600101611454565b5090565b600061148361147e84611793565b611762565b90508281526020810184848401111561149b57600080fd5b6114a6848285611915565b509392505050565b6000813590506114bd81611ac7565b92915050565b600082601f8301126114d457600080fd5b81356114e4848260208601611470565b91505092915050565b6000813590506114fc81611ade565b92915050565b60006020828403121561151457600080fd5b6000611522848285016114ae565b91505092915050565b60008060006060848603121561154057600080fd5b600084013567ffffffffffffffff81111561155a57600080fd5b611566868287016114c3565b935050602084013567ffffffffffffffff81111561158357600080fd5b61158f868287016114c3565b92505060406115a0868287016114ed565b9150509250925092565b6115b381611885565b82525050565b6115c281611873565b82525050565b6115d1816118f1565b82525050565b6115e081611903565b82525050565b6115ef816118bd565b82525050565b6000611600826117c3565b61160a81856117ce565b935061161a818560208601611924565b61162381611a8e565b840191505092915050565b611637816118e7565b82525050565b600060208201905061165260008301846115b9565b92915050565b600060208201905061166d60008301846115aa565b92915050565b600060208201905061168860008301846115c8565b92915050565b60006020820190506116a360008301846115e6565b92915050565b60006040820190506116be60008301856115e6565b6116cb602083018461162e565b9392505050565b600060208201905081810360008301526116ec81846115f5565b905092915050565b6000608082019050818103600083015261170e81876115f5565b9050818103602083015261172281866115f5565b9050611731604083018561162e565b61173e60608301846115d7565b95945050505050565b600060208201905061175c600083018461162e565b92915050565b6000604051905081810181811067ffffffffffffffff8211171561178957611788611a5f565b5b8060405250919050565b600067ffffffffffffffff8211156117ae576117ad611a5f565b5b601f19601f8301169050602081019050919050565b600081519050919050565b600082825260208201905092915050565b60006117ea826118bd565b91506117f5836118bd565b9250827f8000000000000000000000000000000000000000000000000000000000000000018212600084121516156118305761182f6119d2565b5b827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff018213600084121615611868576118676119d2565b5b828203905092915050565b600061187e826118c7565b9050919050565b6000611890826118c7565b9050919050565b60008190506118a582611a9f565b919050565b60008190506118b882611ab3565b919050565b6000819050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b60006118fc82611897565b9050919050565b600061190e826118aa565b9050919050565b82818337600083830152505050565b60005b83811015611942578082015181840152602081019050611927565b83811115611951576000848401525b50505050565b6000600282049050600182168061196f57607f821691505b6020821081141561198357611982611a30565b5b50919050565b6000611994826118bd565b91507f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8214156119c7576119c66119d2565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6000601f19601f8301169050919050565b60038110611ab057611aaf611a01565b5b50565b60058110611ac457611ac3611a01565b5b50565b611ad0816118bd565b8114611adb57600080fd5b50565b611ae7816118e7565b8114611af257600080fd5b5056fea26469706673582212203ea51722f592834c14752d7e670d02ea9e0ab0ce4aaaab4eb57a4ca89e00bad164736f6c63430008000033",
	"deployedBytecode": "0x6080604052600436106100c25760003560e01c806384bf66ac1161007f578063bab5691011610059578063bab5691014610235578063bb6fc95014610275578063c396640914610291578063c916b6de146102a8576100c2565b806384bf66ac146101b8578063965720af146101e1578063b7896a301461020c576100c2565b8063054f84ed146100c757806306a4e7cb146100e357806312065fe01461010e5780632c2ab5ea146101395780636dc5434c14610164578063748807ab1461018d575b600080fd5b6100e160048036038101906100dc9190611502565b6102bf565b005b3480156100ef57600080fd5b506100f861052a565b6040516101059190611658565b60405180910390f35b34801561011a57600080fd5b50610123610550565b6040516101309190611747565b60405180910390f35b34801561014557600080fd5b5061014e610558565b60405161015b919061163d565b60405180910390f35b34801561017057600080fd5b5061018b60048036038101906101869190611502565b61057e565b005b34801561019957600080fd5b506101a26107c2565b6040516101af9190611673565b60405180910390f35b3480156101c457600080fd5b506101df60048036038101906101da919061152b565b6107d5565b005b3480156101ed57600080fd5b506101f6610a64565b604051610203919061168e565b60405180910390f35b34801561021857600080fd5b50610233600480360381019061022e9190611502565b610a6a565b005b34801561024157600080fd5b5061025c60048036038101906102579190611502565b610cae565b60405161026c94939291906116f4565b60405180910390f35b61028f600480360381019061028a9190611502565b610dfb565b005b34801561029d57600080fd5b506102a66110d7565b005b3480156102b457600080fd5b506102bd611214565b005b60018060028111156102fa577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b600260149054906101000a900460ff166002811115610342577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b1461034c57600080fd5b816000600160005461035e91906117df565b82131580156103ff57508060048111156103a1577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b6003600084815260200190815260200160002060030160009054906101000a900460ff1660048111156103fd577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b145b61040857600080fd5b83348060036000848152602001908152602001600020600201541461042c57600080fd5b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461048657600080fd5b60016003600088815260200190815260200160002060030160006101000a81548160ff021916908360048111156104e6577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b02179055507fd58e7b4972479e30bd65e34280dcda90802a617a803cb4b39764a2a30d3a8eae8660405161051a919061168e565b60405180910390a1505050505050565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600047905090565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60018060028111156105b9577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b600260149054906101000a900460ff166002811115610601577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b1461060b57600080fd5b816002600160005461061d91906117df565b82131580156106be5750806004811115610660577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b6003600084815260200190815260200160002060030160009054906101000a900460ff1660048111156106bc577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b145b6106c757600080fd5b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461072157600080fd5b600380600086815260200190815260200160002060030160006101000a81548160ff02191690836004811115610780577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b02179055507f38f72d6c98702d265aec82b55e4b637d84fa97622b2244cd84dca2f171a0cefc846040516107b4919061168e565b60405180910390a150505050565b600260149054906101000a900460ff1681565b6000806002811115610810577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b600260149054906101000a900460ff166002811115610858577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b1461086257600080fd5b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146108bc57600080fd5b6108c461136d565b848160000181905250838160200181905250600081606001906004811115610915577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b9081600481111561094f577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b8152505082816040018181525050806003600080548152602001908152602001600020600082015181600001908051906020019061098e9291906113cd565b5060208201518160010190805190602001906109ab9291906113cd565b506040820151816002015560608201518160030160006101000a81548160ff02191690836004811115610a07577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b0217905550905050600080815480929190610a2190611989565b91905055507ff29fdea51f7ec4cf45bbb7eb61e67fa64cf90101b5ea7415c5b02b69bac9c59485604051610a5591906116d2565b60405180910390a15050505050565b60005481565b6001806002811115610aa5577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b600260149054906101000a900460ff166002811115610aed577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b14610af757600080fd5b81600180600054610b0891906117df565b8213158015610ba95750806004811115610b4b577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b6003600084815260200190815260200160002060030160009054906101000a900460ff166004811115610ba7577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b145b610bb257600080fd5b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610c0c57600080fd5b60026003600086815260200190815260200160002060030160006101000a81548160ff02191690836004811115610c6c577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b02179055507fde2dc33fbe2a5b6bf5e0ed721d44dc14441c4eef2cf4975ce14fd7bc0549489c84604051610ca0919061168e565b60405180910390a150505050565b6003602052806000526040600020600091509050806000018054610cd190611957565b80601f0160208091040260200160405190810160405280929190818152602001828054610cfd90611957565b8015610d4a5780601f10610d1f57610100808354040283529160200191610d4a565b820191906000526020600020905b815481529060010190602001808311610d2d57829003601f168201915b505050505090806001018054610d5f90611957565b80601f0160208091040260200160405190810160405280929190818152602001828054610d8b90611957565b8015610dd85780601f10610dad57610100808354040283529160200191610dd8565b820191906000526020600020905b815481529060010190602001808311610dbb57829003601f168201915b5050505050908060020154908060030160009054906101000a900460ff16905084565b6001806002811115610e36577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b600260149054906101000a900460ff166002811115610e7e577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b14610e8857600080fd5b8160036001600054610e9a91906117df565b8213158015610f3b5750806004811115610edd577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b6003600084815260200190815260200160002060030160009054906101000a900460ff166004811115610f39577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b145b610f4457600080fd5b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610f9e57600080fd5b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc60036000878152602001908152602001600020600201549081150290604051600060405180830381858888f1935050505015801561101c573d6000803e3d6000fd5b5060046003600086815260200190815260200160002060030160006101000a81548160ff0219169083600481111561107d577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b02179055507fd73e163332c47993ba97b46887362ea1f01120cbc609242b41762901217bfd5d8460036000878152602001908152602001600020600201546040516110c99291906116a9565b60405180910390a150505050565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614806111805750600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16145b61118957600080fd5b6000471461119657600080fd5b60028060146101000a81548160ff021916908360028111156111e1577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b02179055507fbef1ef6470add1875c12e547d844894de0608f7d47527676863b44153090bfe260405160405180910390a1565b600080600281111561124f577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b600260149054906101000a900460ff166002811115611297577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b146112a157600080fd5b33600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506001600260146101000a81548160ff0219169083600281111561132e577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b02179055507f01bc39c23d192137df337abb0c6fe3f63a86ead52f73452ca64136a5dfd7ff4333604051611362919061163d565b60405180910390a150565b6040518060800160405280606081526020016060815260200160008152602001600060048111156113c7577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b81525090565b8280546113d990611957565b90600052602060002090601f0160209004810192826113fb5760008555611442565b82601f1061141457805160ff1916838001178555611442565b82800160010185558215611442579182015b82811115611441578251825591602001919060010190611426565b5b50905061144f9190611453565b5090565b5b8082111561146c576000816000905550600101611454565b5090565b600061148361147e84611793565b611762565b90508281526020810184848401111561149b57600080fd5b6114a6848285611915565b509392505050565b6000813590506114bd81611ac7565b92915050565b600082601f8301126114d457600080fd5b81356114e4848260208601611470565b91505092915050565b6000813590506114fc81611ade565b92915050565b60006020828403121561151457600080fd5b6000611522848285016114ae565b91505092915050565b60008060006060848603121561154057600080fd5b600084013567ffffffffffffffff81111561155a57600080fd5b611566868287016114c3565b935050602084013567ffffffffffffffff81111561158357600080fd5b61158f868287016114c3565b92505060406115a0868287016114ed565b9150509250925092565b6115b381611885565b82525050565b6115c281611873565b82525050565b6115d1816118f1565b82525050565b6115e081611903565b82525050565b6115ef816118bd565b82525050565b6000611600826117c3565b61160a81856117ce565b935061161a818560208601611924565b61162381611a8e565b840191505092915050565b611637816118e7565b82525050565b600060208201905061165260008301846115b9565b92915050565b600060208201905061166d60008301846115aa565b92915050565b600060208201905061168860008301846115c8565b92915050565b60006020820190506116a360008301846115e6565b92915050565b60006040820190506116be60008301856115e6565b6116cb602083018461162e565b9392505050565b600060208201905081810360008301526116ec81846115f5565b905092915050565b6000608082019050818103600083015261170e81876115f5565b9050818103602083015261172281866115f5565b9050611731604083018561162e565b61173e60608301846115d7565b95945050505050565b600060208201905061175c600083018461162e565b92915050565b6000604051905081810181811067ffffffffffffffff8211171561178957611788611a5f565b5b8060405250919050565b600067ffffffffffffffff8211156117ae576117ad611a5f565b5b601f19601f8301169050602081019050919050565b600081519050919050565b600082825260208201905092915050565b60006117ea826118bd565b91506117f5836118bd565b9250827f8000000000000000000000000000000000000000000000000000000000000000018212600084121516156118305761182f6119d2565b5b827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff018213600084121615611868576118676119d2565b5b828203905092915050565b600061187e826118c7565b9050919050565b6000611890826118c7565b9050919050565b60008190506118a582611a9f565b919050565b60008190506118b882611ab3565b919050565b6000819050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b60006118fc82611897565b9050919050565b600061190e826118aa565b9050919050565b82818337600083830152505050565b60005b83811015611942578082015181840152602081019050611927565b83811115611951576000848401525b50505050565b6000600282049050600182168061196f57607f821691505b6020821081141561198357611982611a30565b5b50919050565b6000611994826118bd565b91507f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8214156119c7576119c66119d2565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6000601f19601f8301169050919050565b60038110611ab057611aaf611a01565b5b50565b60058110611ac457611ac3611a01565b5b50565b611ad0816118bd565b8114611adb57600080fd5b50565b611ae7816118e7565b8114611af257600080fd5b5056fea26469706673582212203ea51722f592834c14752d7e670d02ea9e0ab0ce4aaaab4eb57a4ca89e00bad164736f6c63430008000033",
	"immutableReferences": {},
	"generatedSources": [],
	"deployedGeneratedSources": [
	  {
		"ast": {
		  "nodeType": "YulBlock",
		  "src": "0:10752:2",
		  "statements": [
			{
			  "body": {
				"nodeType": "YulBlock",
				"src": "91:260:2",
				"statements": [
				  {
					"nodeType": "YulAssignment",
					"src": "101:74:2",
					"value": {
					  "arguments": [
						{
						  "arguments": [
							{
							  "name": "length",
							  "nodeType": "YulIdentifier",
							  "src": "167:6:2"
							}
						  ],
						  "functionName": {
							"name": "array_allocation_size_t_string_memory_ptr",
							"nodeType": "YulIdentifier",
							"src": "125:41:2"
						  },
						  "nodeType": "YulFunctionCall",
						  "src": "125:49:2"
						}
					  ],
					  "functionName": {
						"name": "allocateMemory",
						"nodeType": "YulIdentifier",
						"src": "110:14:2"
					  },
					  "nodeType": "YulFunctionCall",
					  "src": "110:65:2"
					},
					"variableNames": [
					  {
						"name": "array",
						"nodeType": "YulIdentifier",
						"src": "101:5:2"
					  }
					]
				  },
				  {
					"expression": {
					  "arguments": [
						{
						  "name": "array",
						  "nodeType": "YulIdentifier",
						  "src": "191:5:2"
						},
						{
						  "name": "length",
						  "nodeType": "YulIdentifier",
						  "src": "198:6:2"
						}
					  ],
					  "functionName": {
						"name": "mstore",
						"nodeType": "YulIdentifier",
						"src": "184:6:2"
					  },
					  "nodeType": "YulFunctionCall",
					  "src": "184:21:2"
					},
					"nodeType": "YulExpressionStatement",
					"src": "184:21:2"
				  },
				  {
					"nodeType": "YulVariableDeclaration",
					"src": "214:27:2",
					"value": {
					  "arguments": [
						{
						  "name": "array",
						  "nodeType": "YulIdentifier",
						  "src": "229:5:2"
						},
						{
						  "kind": "number",
						  "nodeType": "YulLiteral",
						  "src": "236:4:2",
						  "type": "",
						  "value": "0x20"
						}
					  ],
					  "functionName": {
						"name": "add",
						"nodeType": "YulIdentifier",
						"src": "225:3:2"
					  },
					  "nodeType": "YulFunctionCall",
					  "src": "225:16:2"
					},
					"variables": [
					  {
						"name": "dst",
						"nodeType": "YulTypedName",
						"src": "218:3:2",
						"type": ""
					  }
					]
				  },
				  {
					"body": {
					  "nodeType": "YulBlock",
					  "src": "279:16:2",
					  "statements": [
						{
						  "expression": {
							"arguments": [
							  {
								"kind": "number",
								"nodeType": "YulLiteral",
								"src": "288:1:2",
								"type": "",
								"value": "0"
							  },
							  {
								"kind": "number",
								"nodeType": "YulLiteral",
								"src": "291:1:2",
								"type": "",
								"value": "0"
							  }
							],
							"functionName": {
							  "name": "revert",
							  "nodeType": "YulIdentifier",
							  "src": "281:6:2"
							},
							"nodeType": "YulFunctionCall",
							"src": "281:12:2"
						  },
						  "nodeType": "YulExpressionStatement",
						  "src": "281:12:2"
						}
					  ]
					},
					"condition": {
					  "arguments": [
						{
						  "arguments": [
							{
							  "name": "src",
							  "nodeType": "YulIdentifier",
							  "src": "260:3:2"
							},
							{
							  "name": "length",
							  "nodeType": "YulIdentifier",
							  "src": "265:6:2"
							}
						  ],
						  "functionName": {
							"name": "add",
							"nodeType": "YulIdentifier",
							"src": "256:3:2"
						  },
						  "nodeType": "YulFunctionCall",
						  "src": "256:16:2"
						},
						{
						  "name": "end",
						  "nodeType": "YulIdentifier",
						  "src": "274:3:2"
						}
					  ],
					  "functionName": {
						"name": "gt",
						"nodeType": "YulIdentifier",
						"src": "253:2:2"
					  },
					  "nodeType": "YulFunctionCall",
					  "src": "253:25:2"
					},
					"nodeType": "YulIf",
					"src": "250:2:2"
				  },
				  {
					"expression": {
					  "arguments": [
						{
						  "name": "src",
						  "nodeType": "YulIdentifier",
						  "src": "328:3:2"
						},
						{
						  "name": "dst",
						  "nodeType": "YulIdentifier",
						  "src": "333:3:2"
						},
						{
						  "name": "length",
						  "nodeType": "YulIdentifier",
						  "src": "338:6:2"
						}
					  ],
					  "functionName": {
						"name": "copy_calldata_to_memory",
						"nodeType": "YulIdentifier",
						"src": "304:23:2"
					  },
					  "nodeType": "YulFunctionCall",
					  "src": "304:41:2"
					},
					"nodeType": "YulExpressionStatement",
					"src": "304:41:2"
				  }
				]
			  },
			  "name": "abi_decode_available_length_t_string_memory_ptr",
			  "nodeType": "YulFunctionDefinition",
			  "parameters": [
				{
				  "name": "src",
				  "nodeType": "YulTypedName",
				  "src": "64:3:2",
				  "type": ""
				},
				{
				  "name": "length",
				  "nodeType": "YulTypedName",
				  "src": "69:6:2",
				  "type": ""
				},
				{
				  "name": "end",
				  "nodeType": "YulTypedName",
				  "src": "77:3:2",
				  "type": ""
				}
			  ],
			  "returnVariables": [
				{
				  "name": "array",
				  "nodeType": "YulTypedName",
				  "src": "85:5:2",
				  "type": ""
				}
			  ],
			  "src": "7:344:2"
			},
			{
			  "body": {
				"nodeType": "YulBlock",
				"src": "408:86:2",
				"statements": [
				  {
					"nodeType": "YulAssignment",
					"src": "418:29:2",
					"value": {
					  "arguments": [
						{
						  "name": "offset",
						  "nodeType": "YulIdentifier",
						  "src": "440:6:2"
						}
					  ],
					  "functionName": {
						"name": "calldataload",
						"nodeType": "YulIdentifier",
						"src": "427:12:2"
					  },
					  "nodeType": "YulFunctionCall",
					  "src": "427:20:2"
					},
					"variableNames": [
					  {
						"name": "value",
						"nodeType": "YulIdentifier",
						"src": "418:5:2"
					  }
					]
				  },
				  {
					"expression": {
					  "arguments": [
						{
						  "name": "value",
						  "nodeType": "YulIdentifier",
						  "src": "482:5:2"
						}
					  ],
					  "functionName": {
						"name": "validator_revert_t_int256",
						"nodeType": "YulIdentifier",
						"src": "456:25:2"
					  },
					  "nodeType": "YulFunctionCall",
					  "src": "456:32:2"
					},
					"nodeType": "YulExpressionStatement",
					"src": "456:32:2"
				  }
				]
			  },
			  "name": "abi_decode_t_int256",
			  "nodeType": "YulFunctionDefinition",
			  "parameters": [
				{
				  "name": "offset",
				  "nodeType": "YulTypedName",
				  "src": "386:6:2",
				  "type": ""
				},
				{
				  "name": "end",
				  "nodeType": "YulTypedName",
				  "src": "394:3:2",
				  "type": ""
				}
			  ],
			  "returnVariables": [
				{
				  "name": "value",
				  "nodeType": "YulTypedName",
				  "src": "402:5:2",
				  "type": ""
				}
			  ],
			  "src": "357:137:2"
			},
			{
			  "body": {
				"nodeType": "YulBlock",
				"src": "576:211:2",
				"statements": [
				  {
					"body": {
					  "nodeType": "YulBlock",
					  "src": "625:16:2",
					  "statements": [
						{
						  "expression": {
							"arguments": [
							  {
								"kind": "number",
								"nodeType": "YulLiteral",
								"src": "634:1:2",
								"type": "",
								"value": "0"
							  },
							  {
								"kind": "number",
								"nodeType": "YulLiteral",
								"src": "637:1:2",
								"type": "",
								"value": "0"
							  }
							],
							"functionName": {
							  "name": "revert",
							  "nodeType": "YulIdentifier",
							  "src": "627:6:2"
							},
							"nodeType": "YulFunctionCall",
							"src": "627:12:2"
						  },
						  "nodeType": "YulExpressionStatement",
						  "src": "627:12:2"
						}
					  ]
					},
					"condition": {
					  "arguments": [
						{
						  "arguments": [
							{
							  "arguments": [
								{
								  "name": "offset",
								  "nodeType": "YulIdentifier",
								  "src": "604:6:2"
								},
								{
								  "kind": "number",
								  "nodeType": "YulLiteral",
								  "src": "612:4:2",
								  "type": "",
								  "value": "0x1f"
								}
							  ],
							  "functionName": {
								"name": "add",
								"nodeType": "YulIdentifier",
								"src": "600:3:2"
							  },
							  "nodeType": "YulFunctionCall",
							  "src": "600:17:2"
							},
							{
							  "name": "end",
							  "nodeType": "YulIdentifier",
							  "src": "619:3:2"
							}
						  ],
						  "functionName": {
							"name": "slt",
							"nodeType": "YulIdentifier",
							"src": "596:3:2"
						  },
						  "nodeType": "YulFunctionCall",
						  "src": "596:27:2"
						}
					  ],
					  "functionName": {
						"name": "iszero",
						"nodeType": "YulIdentifier",
						"src": "589:6:2"
					  },
					  "nodeType": "YulFunctionCall",
					  "src": "589:35:2"
					},
					"nodeType": "YulIf",
					"src": "586:2:2"
				  },
				  {
					"nodeType": "YulVariableDeclaration",
					"src": "650:34:2",
					"value": {
					  "arguments": [
						{
						  "name": "offset",
						  "nodeType": "YulIdentifier",
						  "src": "677:6:2"
						}
					  ],
					  "functionName": {
						"name": "calldataload",
						"nodeType": "YulIdentifier",
						"src": "664:12:2"
					  },
					  "nodeType": "YulFunctionCall",
					  "src": "664:20:2"
					},
					"variables": [
					  {
						"name": "length",
						"nodeType": "YulTypedName",
						"src": "654:6:2",
						"type": ""
					  }
					]
				  },
				  {
					"nodeType": "YulAssignment",
					"src": "693:88:2",
					"value": {
					  "arguments": [
						{
						  "arguments": [
							{
							  "name": "offset",
							  "nodeType": "YulIdentifier",
							  "src": "754:6:2"
							},
							{
							  "kind": "number",
							  "nodeType": "YulLiteral",
							  "src": "762:4:2",
							  "type": "",
							  "value": "0x20"
							}
						  ],
						  "functionName": {
							"name": "add",
							"nodeType": "YulIdentifier",
							"src": "750:3:2"
						  },
						  "nodeType": "YulFunctionCall",
						  "src": "750:17:2"
						},
						{
						  "name": "length",
						  "nodeType": "YulIdentifier",
						  "src": "769:6:2"
						},
						{
						  "name": "end",
						  "nodeType": "YulIdentifier",
						  "src": "777:3:2"
						}
					  ],
					  "functionName": {
						"name": "abi_decode_available_length_t_string_memory_ptr",
						"nodeType": "YulIdentifier",
						"src": "702:47:2"
					  },
					  "nodeType": "YulFunctionCall",
					  "src": "702:79:2"
					},
					"variableNames": [
					  {
						"name": "array",
						"nodeType": "YulIdentifier",
						"src": "693:5:2"
					  }
					]
				  }
				]
			  },
			  "name": "abi_decode_t_string_memory_ptr",
			  "nodeType": "YulFunctionDefinition",
			  "parameters": [
				{
				  "name": "offset",
				  "nodeType": "YulTypedName",
				  "src": "554:6:2",
				  "type": ""
				},
				{
				  "name": "end",
				  "nodeType": "YulTypedName",
				  "src": "562:3:2",
				  "type": ""
				}
			  ],
			  "returnVariables": [
				{
				  "name": "array",
				  "nodeType": "YulTypedName",
				  "src": "570:5:2",
				  "type": ""
				}
			  ],
			  "src": "514:273:2"
			},
			{
			  "body": {
				"nodeType": "YulBlock",
				"src": "845:87:2",
				"statements": [
				  {
					"nodeType": "YulAssignment",
					"src": "855:29:2",
					"value": {
					  "arguments": [
						{
						  "name": "offset",
						  "nodeType": "YulIdentifier",
						  "src": "877:6:2"
						}
					  ],
					  "functionName": {
						"name": "calldataload",
						"nodeType": "YulIdentifier",
						"src": "864:12:2"
					  },
					  "nodeType": "YulFunctionCall",
					  "src": "864:20:2"
					},
					"variableNames": [
					  {
						"name": "value",
						"nodeType": "YulIdentifier",
						"src": "855:5:2"
					  }
					]
				  },
				  {
					"expression": {
					  "arguments": [
						{
						  "name": "value",
						  "nodeType": "YulIdentifier",
						  "src": "920:5:2"
						}
					  ],
					  "functionName": {
						"name": "validator_revert_t_uint256",
						"nodeType": "YulIdentifier",
						"src": "893:26:2"
					  },
					  "nodeType": "YulFunctionCall",
					  "src": "893:33:2"
					},
					"nodeType": "YulExpressionStatement",
					"src": "893:33:2"
				  }
				]
			  },
			  "name": "abi_decode_t_uint256",
			  "nodeType": "YulFunctionDefinition",
			  "parameters": [
				{
				  "name": "offset",
				  "nodeType": "YulTypedName",
				  "src": "823:6:2",
				  "type": ""
				},
				{
				  "name": "end",
				  "nodeType": "YulTypedName",
				  "src": "831:3:2",
				  "type": ""
				}
			  ],
			  "returnVariables": [
				{
				  "name": "value",
				  "nodeType": "YulTypedName",
				  "src": "839:5:2",
				  "type": ""
				}
			  ],
			  "src": "793:139:2"
			},
			{
			  "body": {
				"nodeType": "YulBlock",
				"src": "1003:195:2",
				"statements": [
				  {
					"body": {
					  "nodeType": "YulBlock",
					  "src": "1049:16:2",
					  "statements": [
						{
						  "expression": {
							"arguments": [
							  {
								"kind": "number",
								"nodeType": "YulLiteral",
								"src": "1058:1:2",
								"type": "",
								"value": "0"
							  },
							  {
								"kind": "number",
								"nodeType": "YulLiteral",
								"src": "1061:1:2",
								"type": "",
								"value": "0"
							  }
							],
							"functionName": {
							  "name": "revert",
							  "nodeType": "YulIdentifier",
							  "src": "1051:6:2"
							},
							"nodeType": "YulFunctionCall",
							"src": "1051:12:2"
						  },
						  "nodeType": "YulExpressionStatement",
						  "src": "1051:12:2"
						}
					  ]
					},
					"condition": {
					  "arguments": [
						{
						  "arguments": [
							{
							  "name": "dataEnd",
							  "nodeType": "YulIdentifier",
							  "src": "1024:7:2"
							},
							{
							  "name": "headStart",
							  "nodeType": "YulIdentifier",
							  "src": "1033:9:2"
							}
						  ],
						  "functionName": {
							"name": "sub",
							"nodeType": "YulIdentifier",
							"src": "1020:3:2"
						  },
						  "nodeType": "YulFunctionCall",
						  "src": "1020:23:2"
						},
						{
						  "kind": "number",
						  "nodeType": "YulLiteral",
						  "src": "1045:2:2",
						  "type": "",
						  "value": "32"
						}
					  ],
					  "functionName": {
						"name": "slt",
						"nodeType": "YulIdentifier",
						"src": "1016:3:2"
					  },
					  "nodeType": "YulFunctionCall",
					  "src": "1016:32:2"
					},
					"nodeType": "YulIf",
					"src": "1013:2:2"
				  },
				  {
					"nodeType": "YulBlock",
					"src": "1075:116:2",
					"statements": [
					  {
						"nodeType": "YulVariableDeclaration",
						"src": "1090:15:2",
						"value": {
						  "kind": "number",
						  "nodeType": "YulLiteral",
						  "src": "1104:1:2",
						  "type": "",
						  "value": "0"
						},
						"variables": [
						  {
							"name": "offset",
							"nodeType": "YulTypedName",
							"src": "1094:6:2",
							"type": ""
						  }
						]
					  },
					  {
						"nodeType": "YulAssignment",
						"src": "1119:62:2",
						"value": {
						  "arguments": [
							{
							  "arguments": [
								{
								  "name": "headStart",
								  "nodeType": "YulIdentifier",
								  "src": "1153:9:2"
								},
								{
								  "name": "offset",
								  "nodeType": "YulIdentifier",
								  "src": "1164:6:2"
								}
							  ],
							  "functionName": {
								"name": "add",
								"nodeType": "YulIdentifier",
								"src": "1149:3:2"
							  },
							  "nodeType": "YulFunctionCall",
							  "src": "1149:22:2"
							},
							{
							  "name": "dataEnd",
							  "nodeType": "YulIdentifier",
							  "src": "1173:7:2"
							}
						  ],
						  "functionName": {
							"name": "abi_decode_t_int256",
							"nodeType": "YulIdentifier",
							"src": "1129:19:2"
						  },
						  "nodeType": "YulFunctionCall",
						  "src": "1129:52:2"
						},
						"variableNames": [
						  {
							"name": "value0",
							"nodeType": "YulIdentifier",
							"src": "1119:6:2"
						  }
						]
					  }
					]
				  }
				]
			  },
			  "name": "abi_decode_tuple_t_int256",
			  "nodeType": "YulFunctionDefinition",
			  "parameters": [
				{
				  "name": "headStart",
				  "nodeType": "YulTypedName",
				  "src": "973:9:2",
				  "type": ""
				},
				{
				  "name": "dataEnd",
				  "nodeType": "YulTypedName",
				  "src": "984:7:2",
				  "type": ""
				}
			  ],
			  "returnVariables": [
				{
				  "name": "value0",
				  "nodeType": "YulTypedName",
				  "src": "996:6:2",
				  "type": ""
				}
			  ],
			  "src": "938:260:2"
			},
			{
			  "body": {
				"nodeType": "YulBlock",
				"src": "1324:658:2",
				"statements": [
				  {
					"body": {
					  "nodeType": "YulBlock",
					  "src": "1370:16:2",
					  "statements": [
						{
						  "expression": {
							"arguments": [
							  {
								"kind": "number",
								"nodeType": "YulLiteral",
								"src": "1379:1:2",
								"type": "",
								"value": "0"
							  },
							  {
								"kind": "number",
								"nodeType": "YulLiteral",
								"src": "1382:1:2",
								"type": "",
								"value": "0"
							  }
							],
							"functionName": {
							  "name": "revert",
							  "nodeType": "YulIdentifier",
							  "src": "1372:6:2"
							},
							"nodeType": "YulFunctionCall",
							"src": "1372:12:2"
						  },
						  "nodeType": "YulExpressionStatement",
						  "src": "1372:12:2"
						}
					  ]
					},
					"condition": {
					  "arguments": [
						{
						  "arguments": [
							{
							  "name": "dataEnd",
							  "nodeType": "YulIdentifier",
							  "src": "1345:7:2"
							},
							{
							  "name": "headStart",
							  "nodeType": "YulIdentifier",
							  "src": "1354:9:2"
							}
						  ],
						  "functionName": {
							"name": "sub",
							"nodeType": "YulIdentifier",
							"src": "1341:3:2"
						  },
						  "nodeType": "YulFunctionCall",
						  "src": "1341:23:2"
						},
						{
						  "kind": "number",
						  "nodeType": "YulLiteral",
						  "src": "1366:2:2",
						  "type": "",
						  "value": "96"
						}
					  ],
					  "functionName": {
						"name": "slt",
						"nodeType": "YulIdentifier",
						"src": "1337:3:2"
					  },
					  "nodeType": "YulFunctionCall",
					  "src": "1337:32:2"
					},
					"nodeType": "YulIf",
					"src": "1334:2:2"
				  },
				  {
					"nodeType": "YulBlock",
					"src": "1396:220:2",
					"statements": [
					  {
						"nodeType": "YulVariableDeclaration",
						"src": "1411:45:2",
						"value": {
						  "arguments": [
							{
							  "arguments": [
								{
								  "name": "headStart",
								  "nodeType": "YulIdentifier",
								  "src": "1442:9:2"
								},
								{
								  "kind": "number",
								  "nodeType": "YulLiteral",
								  "src": "1453:1:2",
								  "type": "",
								  "value": "0"
								}
							  ],
							  "functionName": {
								"name": "add",
								"nodeType": "YulIdentifier",
								"src": "1438:3:2"
							  },
							  "nodeType": "YulFunctionCall",
							  "src": "1438:17:2"
							}
						  ],
						  "functionName": {
							"name": "calldataload",
							"nodeType": "YulIdentifier",
							"src": "1425:12:2"
						  },
						  "nodeType": "YulFunctionCall",
						  "src": "1425:31:2"
						},
						"variables": [
						  {
							"name": "offset",
							"nodeType": "YulTypedName",
							"src": "1415:6:2",
							"type": ""
						  }
						]
					  },
					  {
						"body": {
						  "nodeType": "YulBlock",
						  "src": "1503:16:2",
						  "statements": [
							{
							  "expression": {
								"arguments": [
								  {
									"kind": "number",
									"nodeType": "YulLiteral",
									"src": "1512:1:2",
									"type": "",
									"value": "0"
								  },
								  {
									"kind": "number",
									"nodeType": "YulLiteral",
									"src": "1515:1:2",
									"type": "",
									"value": "0"
								  }
								],
								"functionName": {
								  "name": "revert",
								  "nodeType": "YulIdentifier",
								  "src": "1505:6:2"
								},
								"nodeType": "YulFunctionCall",
								"src": "1505:12:2"
							  },
							  "nodeType": "YulExpressionStatement",
							  "src": "1505:12:2"
							}
						  ]
						},
						"condition": {
						  "arguments": [
							{
							  "name": "offset",
							  "nodeType": "YulIdentifier",
							  "src": "1475:6:2"
							},
							{
							  "kind": "number",
							  "nodeType": "YulLiteral",
							  "src": "1483:18:2",
							  "type": "",
							  "value": "0xffffffffffffffff"
							}
						  ],
						  "functionName": {
							"name": "gt",
							"nodeType": "YulIdentifier",
							"src": "1472:2:2"
						  },
						  "nodeType": "YulFunctionCall",
						  "src": "1472:30:2"
						},
						"nodeType": "YulIf",
						"src": "1469:2:2"
					  },
					  {
						"nodeType": "YulAssignment",
						"src": "1533:73:2",
						"value": {
						  "arguments": [
							{
							  "arguments": [
								{
								  "name": "headStart",
								  "nodeType": "YulIdentifier",
								  "src": "1578:9:2"
								},
								{
								  "name": "offset",
								  "nodeType": "YulIdentifier",
								  "src": "1589:6:2"
								}
							  ],
							  "functionName": {
								"name": "add",
								"nodeType": "YulIdentifier",
								"src": "1574:3:2"
							  },
							  "nodeType": "YulFunctionCall",
							  "src": "1574:22:2"
							},
							{
							  "name": "dataEnd",
							  "nodeType": "YulIdentifier",
							  "src": "1598:7:2"
							}
						  ],
						  "functionName": {
							"name": "abi_decode_t_string_memory_ptr",
							"nodeType": "YulIdentifier",
							"src": "1543:30:2"
						  },
						  "nodeType": "YulFunctionCall",
						  "src": "1543:63:2"
						},
						"variableNames": [
						  {
							"name": "value0",
							"nodeType": "YulIdentifier",
							"src": "1533:6:2"
						  }
						]
					  }
					]
				  },
				  {
					"nodeType": "YulBlock",
					"src": "1626:221:2",
					"statements": [
					  {
						"nodeType": "YulVariableDeclaration",
						"src": "1641:46:2",
						"value": {
						  "arguments": [
							{
							  "arguments": [
								{
								  "name": "headStart",
								  "nodeType": "YulIdentifier",
								  "src": "1672:9:2"
								},
								{
								  "kind": "number",
								  "nodeType": "YulLiteral",
								  "src": "1683:2:2",
								  "type": "",
								  "value": "32"
								}
							  ],
							  "functionName": {
								"name": "add",
								"nodeType": "YulIdentifier",
								"src": "1668:3:2"
							  },
							  "nodeType": "YulFunctionCall",
							  "src": "1668:18:2"
							}
						  ],
						  "functionName": {
							"name": "calldataload",
							"nodeType": "YulIdentifier",
							"src": "1655:12:2"
						  },
						  "nodeType": "YulFunctionCall",
						  "src": "1655:32:2"
						},
						"variables": [
						  {
							"name": "offset",
							"nodeType": "YulTypedName",
							"src": "1645:6:2",
							"type": ""
						  }
						]
					  },
					  {
						"body": {
						  "nodeType": "YulBlock",
						  "src": "1734:16:2",
						  "statements": [
							{
							  "expression": {
								"arguments": [
								  {
									"kind": "number",
									"nodeType": "YulLiteral",
									"src": "1743:1:2",
									"type": "",
									"value": "0"
								  },
								  {
									"kind": "number",
									"nodeType": "YulLiteral",
									"src": "1746:1:2",
									"type": "",
									"value": "0"
								  }
								],
								"functionName": {
								  "name": "revert",
								  "nodeType": "YulIdentifier",
								  "src": "1736:6:2"
								},
								"nodeType": "YulFunctionCall",
								"src": "1736:12:2"
							  },
							  "nodeType": "YulExpressionStatement",
							  "src": "1736:12:2"
							}
						  ]
						},
						"condition": {
						  "arguments": [
							{
							  "name": "offset",
							  "nodeType": "YulIdentifier",
							  "src": "1706:6:2"
							},
							{
							  "kind": "number",
							  "nodeType": "YulLiteral",
							  "src": "1714:18:2",
							  "type": "",
							  "value": "0xffffffffffffffff"
							}
						  ],
						  "functionName": {
							"name": "gt",
							"nodeType": "YulIdentifier",
							"src": "1703:2:2"
						  },
						  "nodeType": "YulFunctionCall",
						  "src": "1703:30:2"
						},
						"nodeType": "YulIf",
						"src": "1700:2:2"
					  },
					  {
						"nodeType": "YulAssignment",
						"src": "1764:73:2",
						"value": {
						  "arguments": [
							{
							  "arguments": [
								{
								  "name": "headStart",
								  "nodeType": "YulIdentifier",
								  "src": "1809:9:2"
								},
								{
								  "name": "offset",
								  "nodeType": "YulIdentifier",
								  "src": "1820:6:2"
								}
							  ],
							  "functionName": {
								"name": "add",
								"nodeType": "YulIdentifier",
								"src": "1805:3:2"
							  },
							  "nodeType": "YulFunctionCall",
							  "src": "1805:22:2"
							},
							{
							  "name": "dataEnd",
							  "nodeType": "YulIdentifier",
							  "src": "1829:7:2"
							}
						  ],
						  "functionName": {
							"name": "abi_decode_t_string_memory_ptr",
							"nodeType": "YulIdentifier",
							"src": "1774:30:2"
						  },
						  "nodeType": "YulFunctionCall",
						  "src": "1774:63:2"
						},
						"variableNames": [
						  {
							"name": "value1",
							"nodeType": "YulIdentifier",
							"src": "1764:6:2"
						  }
						]
					  }
					]
				  },
				  {
					"nodeType": "YulBlock",
					"src": "1857:118:2",
					"statements": [
					  {
						"nodeType": "YulVariableDeclaration",
						"src": "1872:16:2",
						"value": {
						  "kind": "number",
						  "nodeType": "YulLiteral",
						  "src": "1886:2:2",
						  "type": "",
						  "value": "64"
						},
						"variables": [
						  {
							"name": "offset",
							"nodeType": "YulTypedName",
							"src": "1876:6:2",
							"type": ""
						  }
						]
					  },
					  {
						"nodeType": "YulAssignment",
						"src": "1902:63:2",
						"value": {
						  "arguments": [
							{
							  "arguments": [
								{
								  "name": "headStart",
								  "nodeType": "YulIdentifier",
								  "src": "1937:9:2"
								},
								{
								  "name": "offset",
								  "nodeType": "YulIdentifier",
								  "src": "1948:6:2"
								}
							  ],
							  "functionName": {
								"name": "add",
								"nodeType": "YulIdentifier",
								"src": "1933:3:2"
							  },
							  "nodeType": "YulFunctionCall",
							  "src": "1933:22:2"
							},
							{
							  "name": "dataEnd",
							  "nodeType": "YulIdentifier",
							  "src": "1957:7:2"
							}
						  ],
						  "functionName": {
							"name": "abi_decode_t_uint256",
							"nodeType": "YulIdentifier",
							"src": "1912:20:2"
						  },
						  "nodeType": "YulFunctionCall",
						  "src": "1912:53:2"
						},
						"variableNames": [
						  {
							"name": "value2",
							"nodeType": "YulIdentifier",
							"src": "1902:6:2"
						  }
						]
					  }
					]
				  }
				]
			  },
			  "name": "abi_decode_tuple_t_string_memory_ptrt_string_memory_ptrt_uint256",
			  "nodeType": "YulFunctionDefinition",
			  "parameters": [
				{
				  "name": "headStart",
				  "nodeType": "YulTypedName",
				  "src": "1278:9:2",
				  "type": ""
				},
				{
				  "name": "dataEnd",
				  "nodeType": "YulTypedName",
				  "src": "1289:7:2",
				  "type": ""
				}
			  ],
			  "returnVariables": [
				{
				  "name": "value0",
				  "nodeType": "YulTypedName",
				  "src": "1301:6:2",
				  "type": ""
				},
				{
				  "name": "value1",
				  "nodeType": "YulTypedName",
				  "src": "1309:6:2",
				  "type": ""
				},
				{
				  "name": "value2",
				  "nodeType": "YulTypedName",
				  "src": "1317:6:2",
				  "type": ""
				}
			  ],
			  "src": "1204:778:2"
			},
			{
			  "body": {
				"nodeType": "YulBlock",
				"src": "2069:61:2",
				"statements": [
				  {
					"expression": {
					  "arguments": [
						{
						  "name": "pos",
						  "nodeType": "YulIdentifier",
						  "src": "2086:3:2"
						},
						{
						  "arguments": [
							{
							  "name": "value",
							  "nodeType": "YulIdentifier",
							  "src": "2117:5:2"
							}
						  ],
						  "functionName": {
							"name": "cleanup_t_address_payable",
							"nodeType": "YulIdentifier",
							"src": "2091:25:2"
						  },
						  "nodeType": "YulFunctionCall",
						  "src": "2091:32:2"
						}
					  ],
					  "functionName": {
						"name": "mstore",
						"nodeType": "YulIdentifier",
						"src": "2079:6:2"
					  },
					  "nodeType": "YulFunctionCall",
					  "src": "2079:45:2"
					},
					"nodeType": "YulExpressionStatement",
					"src": "2079:45:2"
				  }
				]
			  },
			  "name": "abi_encode_t_address_payable_to_t_address_payable_fromStack",
			  "nodeType": "YulFunctionDefinition",
			  "parameters": [
				{
				  "name": "value",
				  "nodeType": "YulTypedName",
				  "src": "2057:5:2",
				  "type": ""
				},
				{
				  "name": "pos",
				  "nodeType": "YulTypedName",
				  "src": "2064:3:2",
				  "type": ""
				}
			  ],
			  "src": "1988:142:2"
			},
			{
			  "body": {
				"nodeType": "YulBlock",
				"src": "2201:53:2",
				"statements": [
				  {
					"expression": {
					  "arguments": [
						{
						  "name": "pos",
						  "nodeType": "YulIdentifier",
						  "src": "2218:3:2"
						},
						{
						  "arguments": [
							{
							  "name": "value",
							  "nodeType": "YulIdentifier",
							  "src": "2241:5:2"
							}
						  ],
						  "functionName": {
							"name": "cleanup_t_address",
							"nodeType": "YulIdentifier",
							"src": "2223:17:2"
						  },
						  "nodeType": "YulFunctionCall",
						  "src": "2223:24:2"
						}
					  ],
					  "functionName": {
						"name": "mstore",
						"nodeType": "YulIdentifier",
						"src": "2211:6:2"
					  },
					  "nodeType": "YulFunctionCall",
					  "src": "2211:37:2"
					},
					"nodeType": "YulExpressionStatement",
					"src": "2211:37:2"
				  }
				]
			  },
			  "name": "abi_encode_t_address_to_t_address_fromStack",
			  "nodeType": "YulFunctionDefinition",
			  "parameters": [
				{
				  "name": "value",
				  "nodeType": "YulTypedName",
				  "src": "2189:5:2",
				  "type": ""
				},
				{
				  "name": "pos",
				  "nodeType": "YulTypedName",
				  "src": "2196:3:2",
				  "type": ""
				}
			  ],
			  "src": "2136:118:2"
			},
			{
			  "body": {
				"nodeType": "YulBlock",
				"src": "2338:79:2",
				"statements": [
				  {
					"expression": {
					  "arguments": [
						{
						  "name": "pos",
						  "nodeType": "YulIdentifier",
						  "src": "2355:3:2"
						},
						{
						  "arguments": [
							{
							  "name": "value",
							  "nodeType": "YulIdentifier",
							  "src": "2404:5:2"
							}
						  ],
						  "functionName": {
							"name": "convert_t_enum$_ProjectState_$48_to_t_uint8",
							"nodeType": "YulIdentifier",
							"src": "2360:43:2"
						  },
						  "nodeType": "YulFunctionCall",
						  "src": "2360:50:2"
						}
					  ],
					  "functionName": {
						"name": "mstore",
						"nodeType": "YulIdentifier",
						"src": "2348:6:2"
					  },
					  "nodeType": "YulFunctionCall",
					  "src": "2348:63:2"
					},
					"nodeType": "YulExpressionStatement",
					"src": "2348:63:2"
				  }
				]
			  },
			  "name": "abi_encode_t_enum$_ProjectState_$48_to_t_uint8_fromStack",
			  "nodeType": "YulFunctionDefinition",
			  "parameters": [
				{
				  "name": "value",
				  "nodeType": "YulTypedName",
				  "src": "2326:5:2",
				  "type": ""
				},
				{
				  "name": "pos",
				  "nodeType": "YulTypedName",
				  "src": "2333:3:2",
				  "type": ""
				}
			  ],
			  "src": "2260:157:2"
			},
			{
			  "body": {
				"nodeType": "YulBlock",
				"src": "2502:80:2",
				"statements": [
				  {
					"expression": {
					  "arguments": [
						{
						  "name": "pos",
						  "nodeType": "YulIdentifier",
						  "src": "2519:3:2"
						},
						{
						  "arguments": [
							{
							  "name": "value",
							  "nodeType": "YulIdentifier",
							  "src": "2569:5:2"
							}
						  ],
						  "functionName": {
							"name": "convert_t_enum$_ScheduleState_$44_to_t_uint8",
							"nodeType": "YulIdentifier",
							"src": "2524:44:2"
						  },
						  "nodeType": "YulFunctionCall",
						  "src": "2524:51:2"
						}
					  ],
					  "functionName": {
						"name": "mstore",
						"nodeType": "YulIdentifier",
						"src": "2512:6:2"
					  },
					  "nodeType": "YulFunctionCall",
					  "src": "2512:64:2"
					},
					"nodeType": "YulExpressionStatement",
					"src": "2512:64:2"
				  }
				]
			  },
			  "name": "abi_encode_t_enum$_ScheduleState_$44_to_t_uint8_fromStack",
			  "nodeType": "YulFunctionDefinition",
			  "parameters": [
				{
				  "name": "value",
				  "nodeType": "YulTypedName",
				  "src": "2490:5:2",
				  "type": ""
				},
				{
				  "name": "pos",
				  "nodeType": "YulTypedName",
				  "src": "2497:3:2",
				  "type": ""
				}
			  ],
			  "src": "2423:159:2"
			},
			{
			  "body": {
				"nodeType": "YulBlock",
				"src": "2651:52:2",
				"statements": [
				  {
					"expression": {
					  "arguments": [
						{
						  "name": "pos",
						  "nodeType": "YulIdentifier",
						  "src": "2668:3:2"
						},
						{
						  "arguments": [
							{
							  "name": "value",
							  "nodeType": "YulIdentifier",
							  "src": "2690:5:2"
							}
						  ],
						  "functionName": {
							"name": "cleanup_t_int256",
							"nodeType": "YulIdentifier",
							"src": "2673:16:2"
						  },
						  "nodeType": "YulFunctionCall",
						  "src": "2673:23:2"
						}
					  ],
					  "functionName": {
						"name": "mstore",
						"nodeType": "YulIdentifier",
						"src": "2661:6:2"
					  },
					  "nodeType": "YulFunctionCall",
					  "src": "2661:36:2"
					},
					"nodeType": "YulExpressionStatement",
					"src": "2661:36:2"
				  }
				]
			  },
			  "name": "abi_encode_t_int256_to_t_int256_fromStack",
			  "nodeType": "YulFunctionDefinition",
			  "parameters": [
				{
				  "name": "value",
				  "nodeType": "YulTypedName",
				  "src": "2639:5:2",
				  "type": ""
				},
				{
				  "name": "pos",
				  "nodeType": "YulTypedName",
				  "src": "2646:3:2",
				  "type": ""
				}
			  ],
			  "src": "2588:115:2"
			},
			{
			  "body": {
				"nodeType": "YulBlock",
				"src": "2801:272:2",
				"statements": [
				  {
					"nodeType": "YulVariableDeclaration",
					"src": "2811:53:2",
					"value": {
					  "arguments": [
						{
						  "name": "value",
						  "nodeType": "YulIdentifier",
						  "src": "2858:5:2"
						}
					  ],
					  "functionName": {
						"name": "array_length_t_string_memory_ptr",
						"nodeType": "YulIdentifier",
						"src": "2825:32:2"
					  },
					  "nodeType": "YulFunctionCall",
					  "src": "2825:39:2"
					},
					"variables": [
					  {
						"name": "length",
						"nodeType": "YulTypedName",
						"src": "2815:6:2",
						"type": ""
					  }
					]
				  },
				  {
					"nodeType": "YulAssignment",
					"src": "2873:78:2",
					"value": {
					  "arguments": [
						{
						  "name": "pos",
						  "nodeType": "YulIdentifier",
						  "src": "2939:3:2"
						},
						{
						  "name": "length",
						  "nodeType": "YulIdentifier",
						  "src": "2944:6:2"
						}
					  ],
					  "functionName": {
						"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
						"nodeType": "YulIdentifier",
						"src": "2880:58:2"
					  },
					  "nodeType": "YulFunctionCall",
					  "src": "2880:71:2"
					},
					"variableNames": [
					  {
						"name": "pos",
						"nodeType": "YulIdentifier",
						"src": "2873:3:2"
					  }
					]
				  },
				  {
					"expression": {
					  "arguments": [
						{
						  "arguments": [
							{
							  "name": "value",
							  "nodeType": "YulIdentifier",
							  "src": "2986:5:2"
							},
							{
							  "kind": "number",
							  "nodeType": "YulLiteral",
							  "src": "2993:4:2",
							  "type": "",
							  "value": "0x20"
							}
						  ],
						  "functionName": {
							"name": "add",
							"nodeType": "YulIdentifier",
							"src": "2982:3:2"
						  },
						  "nodeType": "YulFunctionCall",
						  "src": "2982:16:2"
						},
						{
						  "name": "pos",
						  "nodeType": "YulIdentifier",
						  "src": "3000:3:2"
						},
						{
						  "name": "length",
						  "nodeType": "YulIdentifier",
						  "src": "3005:6:2"
						}
					  ],
					  "functionName": {
						"name": "copy_memory_to_memory",
						"nodeType": "YulIdentifier",
						"src": "2960:21:2"
					  },
					  "nodeType": "YulFunctionCall",
					  "src": "2960:52:2"
					},
					"nodeType": "YulExpressionStatement",
					"src": "2960:52:2"
				  },
				  {
					"nodeType": "YulAssignment",
					"src": "3021:46:2",
					"value": {
					  "arguments": [
						{
						  "name": "pos",
						  "nodeType": "YulIdentifier",
						  "src": "3032:3:2"
						},
						{
						  "arguments": [
							{
							  "name": "length",
							  "nodeType": "YulIdentifier",
							  "src": "3059:6:2"
							}
						  ],
						  "functionName": {
							"name": "round_up_to_mul_of_32",
							"nodeType": "YulIdentifier",
							"src": "3037:21:2"
						  },
						  "nodeType": "YulFunctionCall",
						  "src": "3037:29:2"
						}
					  ],
					  "functionName": {
						"name": "add",
						"nodeType": "YulIdentifier",
						"src": "3028:3:2"
					  },
					  "nodeType": "YulFunctionCall",
					  "src": "3028:39:2"
					},
					"variableNames": [
					  {
						"name": "end",
						"nodeType": "YulIdentifier",
						"src": "3021:3:2"
					  }
					]
				  }
				]
			  },
			  "name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
			  "nodeType": "YulFunctionDefinition",
			  "parameters": [
				{
				  "name": "value",
				  "nodeType": "YulTypedName",
				  "src": "2782:5:2",
				  "type": ""
				},
				{
				  "name": "pos",
				  "nodeType": "YulTypedName",
				  "src": "2789:3:2",
				  "type": ""
				}
			  ],
			  "returnVariables": [
				{
				  "name": "end",
				  "nodeType": "YulTypedName",
				  "src": "2797:3:2",
				  "type": ""
				}
			  ],
			  "src": "2709:364:2"
			},
			{
			  "body": {
				"nodeType": "YulBlock",
				"src": "3144:53:2",
				"statements": [
				  {
					"expression": {
					  "arguments": [
						{
						  "name": "pos",
						  "nodeType": "YulIdentifier",
						  "src": "3161:3:2"
						},
						{
						  "arguments": [
							{
							  "name": "value",
							  "nodeType": "YulIdentifier",
							  "src": "3184:5:2"
							}
						  ],
						  "functionName": {
							"name": "cleanup_t_uint256",
							"nodeType": "YulIdentifier",
							"src": "3166:17:2"
						  },
						  "nodeType": "YulFunctionCall",
						  "src": "3166:24:2"
						}
					  ],
					  "functionName": {
						"name": "mstore",
						"nodeType": "YulIdentifier",
						"src": "3154:6:2"
					  },
					  "nodeType": "YulFunctionCall",
					  "src": "3154:37:2"
					},
					"nodeType": "YulExpressionStatement",
					"src": "3154:37:2"
				  }
				]
			  },
			  "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
			  "nodeType": "YulFunctionDefinition",
			  "parameters": [
				{
				  "name": "value",
				  "nodeType": "YulTypedName",
				  "src": "3132:5:2",
				  "type": ""
				},
				{
				  "name": "pos",
				  "nodeType": "YulTypedName",
				  "src": "3139:3:2",
				  "type": ""
				}
			  ],
			  "src": "3079:118:2"
			},
			{
			  "body": {
				"nodeType": "YulBlock",
				"src": "3301:124:2",
				"statements": [
				  {
					"nodeType": "YulAssignment",
					"src": "3311:26:2",
					"value": {
					  "arguments": [
						{
						  "name": "headStart",
						  "nodeType": "YulIdentifier",
						  "src": "3323:9:2"
						},
						{
						  "kind": "number",
						  "nodeType": "YulLiteral",
						  "src": "3334:2:2",
						  "type": "",
						  "value": "32"
						}
					  ],
					  "functionName": {
						"name": "add",
						"nodeType": "YulIdentifier",
						"src": "3319:3:2"
					  },
					  "nodeType": "YulFunctionCall",
					  "src": "3319:18:2"
					},
					"variableNames": [
					  {
						"name": "tail",
						"nodeType": "YulIdentifier",
						"src": "3311:4:2"
					  }
					]
				  },
				  {
					"expression": {
					  "arguments": [
						{
						  "name": "value0",
						  "nodeType": "YulIdentifier",
						  "src": "3391:6:2"
						},
						{
						  "arguments": [
							{
							  "name": "headStart",
							  "nodeType": "YulIdentifier",
							  "src": "3404:9:2"
							},
							{
							  "kind": "number",
							  "nodeType": "YulLiteral",
							  "src": "3415:1:2",
							  "type": "",
							  "value": "0"
							}
						  ],
						  "functionName": {
							"name": "add",
							"nodeType": "YulIdentifier",
							"src": "3400:3:2"
						  },
						  "nodeType": "YulFunctionCall",
						  "src": "3400:17:2"
						}
					  ],
					  "functionName": {
						"name": "abi_encode_t_address_to_t_address_fromStack",
						"nodeType": "YulIdentifier",
						"src": "3347:43:2"
					  },
					  "nodeType": "YulFunctionCall",
					  "src": "3347:71:2"
					},
					"nodeType": "YulExpressionStatement",
					"src": "3347:71:2"
				  }
				]
			  },
			  "name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
			  "nodeType": "YulFunctionDefinition",
			  "parameters": [
				{
				  "name": "headStart",
				  "nodeType": "YulTypedName",
				  "src": "3273:9:2",
				  "type": ""
				},
				{
				  "name": "value0",
				  "nodeType": "YulTypedName",
				  "src": "3285:6:2",
				  "type": ""
				}
			  ],
			  "returnVariables": [
				{
				  "name": "tail",
				  "nodeType": "YulTypedName",
				  "src": "3296:4:2",
				  "type": ""
				}
			  ],
			  "src": "3203:222:2"
			},
			{
			  "body": {
				"nodeType": "YulBlock",
				"src": "3545:140:2",
				"statements": [
				  {
					"nodeType": "YulAssignment",
					"src": "3555:26:2",
					"value": {
					  "arguments": [
						{
						  "name": "headStart",
						  "nodeType": "YulIdentifier",
						  "src": "3567:9:2"
						},
						{
						  "kind": "number",
						  "nodeType": "YulLiteral",
						  "src": "3578:2:2",
						  "type": "",
						  "value": "32"
						}
					  ],
					  "functionName": {
						"name": "add",
						"nodeType": "YulIdentifier",
						"src": "3563:3:2"
					  },
					  "nodeType": "YulFunctionCall",
					  "src": "3563:18:2"
					},
					"variableNames": [
					  {
						"name": "tail",
						"nodeType": "YulIdentifier",
						"src": "3555:4:2"
					  }
					]
				  },
				  {
					"expression": {
					  "arguments": [
						{
						  "name": "value0",
						  "nodeType": "YulIdentifier",
						  "src": "3651:6:2"
						},
						{
						  "arguments": [
							{
							  "name": "headStart",
							  "nodeType": "YulIdentifier",
							  "src": "3664:9:2"
							},
							{
							  "kind": "number",
							  "nodeType": "YulLiteral",
							  "src": "3675:1:2",
							  "type": "",
							  "value": "0"
							}
						  ],
						  "functionName": {
							"name": "add",
							"nodeType": "YulIdentifier",
							"src": "3660:3:2"
						  },
						  "nodeType": "YulFunctionCall",
						  "src": "3660:17:2"
						}
					  ],
					  "functionName": {
						"name": "abi_encode_t_address_payable_to_t_address_payable_fromStack",
						"nodeType": "YulIdentifier",
						"src": "3591:59:2"
					  },
					  "nodeType": "YulFunctionCall",
					  "src": "3591:87:2"
					},
					"nodeType": "YulExpressionStatement",
					"src": "3591:87:2"
				  }
				]
			  },
			  "name": "abi_encode_tuple_t_address_payable__to_t_address_payable__fromStack_reversed",
			  "nodeType": "YulFunctionDefinition",
			  "parameters": [
				{
				  "name": "headStart",
				  "nodeType": "YulTypedName",
				  "src": "3517:9:2",
				  "type": ""
				},
				{
				  "name": "value0",
				  "nodeType": "YulTypedName",
				  "src": "3529:6:2",
				  "type": ""
				}
			  ],
			  "returnVariables": [
				{
				  "name": "tail",
				  "nodeType": "YulTypedName",
				  "src": "3540:4:2",
				  "type": ""
				}
			  ],
			  "src": "3431:254:2"
			},
			{
			  "body": {
				"nodeType": "YulBlock",
				"src": "3802:137:2",
				"statements": [
				  {
					"nodeType": "YulAssignment",
					"src": "3812:26:2",
					"value": {
					  "arguments": [
						{
						  "name": "headStart",
						  "nodeType": "YulIdentifier",
						  "src": "3824:9:2"
						},
						{
						  "kind": "number",
						  "nodeType": "YulLiteral",
						  "src": "3835:2:2",
						  "type": "",
						  "value": "32"
						}
					  ],
					  "functionName": {
						"name": "add",
						"nodeType": "YulIdentifier",
						"src": "3820:3:2"
					  },
					  "nodeType": "YulFunctionCall",
					  "src": "3820:18:2"
					},
					"variableNames": [
					  {
						"name": "tail",
						"nodeType": "YulIdentifier",
						"src": "3812:4:2"
					  }
					]
				  },
				  {
					"expression": {
					  "arguments": [
						{
						  "name": "value0",
						  "nodeType": "YulIdentifier",
						  "src": "3905:6:2"
						},
						{
						  "arguments": [
							{
							  "name": "headStart",
							  "nodeType": "YulIdentifier",
							  "src": "3918:9:2"
							},
							{
							  "kind": "number",
							  "nodeType": "YulLiteral",
							  "src": "3929:1:2",
							  "type": "",
							  "value": "0"
							}
						  ],
						  "functionName": {
							"name": "add",
							"nodeType": "YulIdentifier",
							"src": "3914:3:2"
						  },
						  "nodeType": "YulFunctionCall",
						  "src": "3914:17:2"
						}
					  ],
					  "functionName": {
						"name": "abi_encode_t_enum$_ProjectState_$48_to_t_uint8_fromStack",
						"nodeType": "YulIdentifier",
						"src": "3848:56:2"
					  },
					  "nodeType": "YulFunctionCall",
					  "src": "3848:84:2"
					},
					"nodeType": "YulExpressionStatement",
					"src": "3848:84:2"
				  }
				]
			  },
			  "name": "abi_encode_tuple_t_enum$_ProjectState_$48__to_t_uint8__fromStack_reversed",
			  "nodeType": "YulFunctionDefinition",
			  "parameters": [
				{
				  "name": "headStart",
				  "nodeType": "YulTypedName",
				  "src": "3774:9:2",
				  "type": ""
				},
				{
				  "name": "value0",
				  "nodeType": "YulTypedName",
				  "src": "3786:6:2",
				  "type": ""
				}
			  ],
			  "returnVariables": [
				{
				  "name": "tail",
				  "nodeType": "YulTypedName",
				  "src": "3797:4:2",
				  "type": ""
				}
			  ],
			  "src": "3691:248:2"
			},
			{
			  "body": {
				"nodeType": "YulBlock",
				"src": "4041:122:2",
				"statements": [
				  {
					"nodeType": "YulAssignment",
					"src": "4051:26:2",
					"value": {
					  "arguments": [
						{
						  "name": "headStart",
						  "nodeType": "YulIdentifier",
						  "src": "4063:9:2"
						},
						{
						  "kind": "number",
						  "nodeType": "YulLiteral",
						  "src": "4074:2:2",
						  "type": "",
						  "value": "32"
						}
					  ],
					  "functionName": {
						"name": "add",
						"nodeType": "YulIdentifier",
						"src": "4059:3:2"
					  },
					  "nodeType": "YulFunctionCall",
					  "src": "4059:18:2"
					},
					"variableNames": [
					  {
						"name": "tail",
						"nodeType": "YulIdentifier",
						"src": "4051:4:2"
					  }
					]
				  },
				  {
					"expression": {
					  "arguments": [
						{
						  "name": "value0",
						  "nodeType": "YulIdentifier",
						  "src": "4129:6:2"
						},
						{
						  "arguments": [
							{
							  "name": "headStart",
							  "nodeType": "YulIdentifier",
							  "src": "4142:9:2"
							},
							{
							  "kind": "number",
							  "nodeType": "YulLiteral",
							  "src": "4153:1:2",
							  "type": "",
							  "value": "0"
							}
						  ],
						  "functionName": {
							"name": "add",
							"nodeType": "YulIdentifier",
							"src": "4138:3:2"
						  },
						  "nodeType": "YulFunctionCall",
						  "src": "4138:17:2"
						}
					  ],
					  "functionName": {
						"name": "abi_encode_t_int256_to_t_int256_fromStack",
						"nodeType": "YulIdentifier",
						"src": "4087:41:2"
					  },
					  "nodeType": "YulFunctionCall",
					  "src": "4087:69:2"
					},
					"nodeType": "YulExpressionStatement",
					"src": "4087:69:2"
				  }
				]
			  },
			  "name": "abi_encode_tuple_t_int256__to_t_int256__fromStack_reversed",
			  "nodeType": "YulFunctionDefinition",
			  "parameters": [
				{
				  "name": "headStart",
				  "nodeType": "YulTypedName",
				  "src": "4013:9:2",
				  "type": ""
				},
				{
				  "name": "value0",
				  "nodeType": "YulTypedName",
				  "src": "4025:6:2",
				  "type": ""
				}
			  ],
			  "returnVariables": [
				{
				  "name": "tail",
				  "nodeType": "YulTypedName",
				  "src": "4036:4:2",
				  "type": ""
				}
			  ],
			  "src": "3945:218:2"
			},
			{
			  "body": {
				"nodeType": "YulBlock",
				"src": "4293:204:2",
				"statements": [
				  {
					"nodeType": "YulAssignment",
					"src": "4303:26:2",
					"value": {
					  "arguments": [
						{
						  "name": "headStart",
						  "nodeType": "YulIdentifier",
						  "src": "4315:9:2"
						},
						{
						  "kind": "number",
						  "nodeType": "YulLiteral",
						  "src": "4326:2:2",
						  "type": "",
						  "value": "64"
						}
					  ],
					  "functionName": {
						"name": "add",
						"nodeType": "YulIdentifier",
						"src": "4311:3:2"
					  },
					  "nodeType": "YulFunctionCall",
					  "src": "4311:18:2"
					},
					"variableNames": [
					  {
						"name": "tail",
						"nodeType": "YulIdentifier",
						"src": "4303:4:2"
					  }
					]
				  },
				  {
					"expression": {
					  "arguments": [
						{
						  "name": "value0",
						  "nodeType": "YulIdentifier",
						  "src": "4381:6:2"
						},
						{
						  "arguments": [
							{
							  "name": "headStart",
							  "nodeType": "YulIdentifier",
							  "src": "4394:9:2"
							},
							{
							  "kind": "number",
							  "nodeType": "YulLiteral",
							  "src": "4405:1:2",
							  "type": "",
							  "value": "0"
							}
						  ],
						  "functionName": {
							"name": "add",
							"nodeType": "YulIdentifier",
							"src": "4390:3:2"
						  },
						  "nodeType": "YulFunctionCall",
						  "src": "4390:17:2"
						}
					  ],
					  "functionName": {
						"name": "abi_encode_t_int256_to_t_int256_fromStack",
						"nodeType": "YulIdentifier",
						"src": "4339:41:2"
					  },
					  "nodeType": "YulFunctionCall",
					  "src": "4339:69:2"
					},
					"nodeType": "YulExpressionStatement",
					"src": "4339:69:2"
				  },
				  {
					"expression": {
					  "arguments": [
						{
						  "name": "value1",
						  "nodeType": "YulIdentifier",
						  "src": "4462:6:2"
						},
						{
						  "arguments": [
							{
							  "name": "headStart",
							  "nodeType": "YulIdentifier",
							  "src": "4475:9:2"
							},
							{
							  "kind": "number",
							  "nodeType": "YulLiteral",
							  "src": "4486:2:2",
							  "type": "",
							  "value": "32"
							}
						  ],
						  "functionName": {
							"name": "add",
							"nodeType": "YulIdentifier",
							"src": "4471:3:2"
						  },
						  "nodeType": "YulFunctionCall",
						  "src": "4471:18:2"
						}
					  ],
					  "functionName": {
						"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
						"nodeType": "YulIdentifier",
						"src": "4418:43:2"
					  },
					  "nodeType": "YulFunctionCall",
					  "src": "4418:72:2"
					},
					"nodeType": "YulExpressionStatement",
					"src": "4418:72:2"
				  }
				]
			  },
			  "name": "abi_encode_tuple_t_int256_t_uint256__to_t_int256_t_uint256__fromStack_reversed",
			  "nodeType": "YulFunctionDefinition",
			  "parameters": [
				{
				  "name": "headStart",
				  "nodeType": "YulTypedName",
				  "src": "4257:9:2",
				  "type": ""
				},
				{
				  "name": "value1",
				  "nodeType": "YulTypedName",
				  "src": "4269:6:2",
				  "type": ""
				},
				{
				  "name": "value0",
				  "nodeType": "YulTypedName",
				  "src": "4277:6:2",
				  "type": ""
				}
			  ],
			  "returnVariables": [
				{
				  "name": "tail",
				  "nodeType": "YulTypedName",
				  "src": "4288:4:2",
				  "type": ""
				}
			  ],
			  "src": "4169:328:2"
			},
			{
			  "body": {
				"nodeType": "YulBlock",
				"src": "4621:195:2",
				"statements": [
				  {
					"nodeType": "YulAssignment",
					"src": "4631:26:2",
					"value": {
					  "arguments": [
						{
						  "name": "headStart",
						  "nodeType": "YulIdentifier",
						  "src": "4643:9:2"
						},
						{
						  "kind": "number",
						  "nodeType": "YulLiteral",
						  "src": "4654:2:2",
						  "type": "",
						  "value": "32"
						}
					  ],
					  "functionName": {
						"name": "add",
						"nodeType": "YulIdentifier",
						"src": "4639:3:2"
					  },
					  "nodeType": "YulFunctionCall",
					  "src": "4639:18:2"
					},
					"variableNames": [
					  {
						"name": "tail",
						"nodeType": "YulIdentifier",
						"src": "4631:4:2"
					  }
					]
				  },
				  {
					"expression": {
					  "arguments": [
						{
						  "arguments": [
							{
							  "name": "headStart",
							  "nodeType": "YulIdentifier",
							  "src": "4678:9:2"
							},
							{
							  "kind": "number",
							  "nodeType": "YulLiteral",
							  "src": "4689:1:2",
							  "type": "",
							  "value": "0"
							}
						  ],
						  "functionName": {
							"name": "add",
							"nodeType": "YulIdentifier",
							"src": "4674:3:2"
						  },
						  "nodeType": "YulFunctionCall",
						  "src": "4674:17:2"
						},
						{
						  "arguments": [
							{
							  "name": "tail",
							  "nodeType": "YulIdentifier",
							  "src": "4697:4:2"
							},
							{
							  "name": "headStart",
							  "nodeType": "YulIdentifier",
							  "src": "4703:9:2"
							}
						  ],
						  "functionName": {
							"name": "sub",
							"nodeType": "YulIdentifier",
							"src": "4693:3:2"
						  },
						  "nodeType": "YulFunctionCall",
						  "src": "4693:20:2"
						}
					  ],
					  "functionName": {
						"name": "mstore",
						"nodeType": "YulIdentifier",
						"src": "4667:6:2"
					  },
					  "nodeType": "YulFunctionCall",
					  "src": "4667:47:2"
					},
					"nodeType": "YulExpressionStatement",
					"src": "4667:47:2"
				  },
				  {
					"nodeType": "YulAssignment",
					"src": "4723:86:2",
					"value": {
					  "arguments": [
						{
						  "name": "value0",
						  "nodeType": "YulIdentifier",
						  "src": "4795:6:2"
						},
						{
						  "name": "tail",
						  "nodeType": "YulIdentifier",
						  "src": "4804:4:2"
						}
					  ],
					  "functionName": {
						"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
						"nodeType": "YulIdentifier",
						"src": "4731:63:2"
					  },
					  "nodeType": "YulFunctionCall",
					  "src": "4731:78:2"
					},
					"variableNames": [
					  {
						"name": "tail",
						"nodeType": "YulIdentifier",
						"src": "4723:4:2"
					  }
					]
				  }
				]
			  },
			  "name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
			  "nodeType": "YulFunctionDefinition",
			  "parameters": [
				{
				  "name": "headStart",
				  "nodeType": "YulTypedName",
				  "src": "4593:9:2",
				  "type": ""
				},
				{
				  "name": "value0",
				  "nodeType": "YulTypedName",
				  "src": "4605:6:2",
				  "type": ""
				}
			  ],
			  "returnVariables": [
				{
				  "name": "tail",
				  "nodeType": "YulTypedName",
				  "src": "4616:4:2",
				  "type": ""
				}
			  ],
			  "src": "4503:313:2"
			},
			{
			  "body": {
				"nodeType": "YulBlock",
				"src": "5058:527:2",
				"statements": [
				  {
					"nodeType": "YulAssignment",
					"src": "5068:27:2",
					"value": {
					  "arguments": [
						{
						  "name": "headStart",
						  "nodeType": "YulIdentifier",
						  "src": "5080:9:2"
						},
						{
						  "kind": "number",
						  "nodeType": "YulLiteral",
						  "src": "5091:3:2",
						  "type": "",
						  "value": "128"
						}
					  ],
					  "functionName": {
						"name": "add",
						"nodeType": "YulIdentifier",
						"src": "5076:3:2"
					  },
					  "nodeType": "YulFunctionCall",
					  "src": "5076:19:2"
					},
					"variableNames": [
					  {
						"name": "tail",
						"nodeType": "YulIdentifier",
						"src": "5068:4:2"
					  }
					]
				  },
				  {
					"expression": {
					  "arguments": [
						{
						  "arguments": [
							{
							  "name": "headStart",
							  "nodeType": "YulIdentifier",
							  "src": "5116:9:2"
							},
							{
							  "kind": "number",
							  "nodeType": "YulLiteral",
							  "src": "5127:1:2",
							  "type": "",
							  "value": "0"
							}
						  ],
						  "functionName": {
							"name": "add",
							"nodeType": "YulIdentifier",
							"src": "5112:3:2"
						  },
						  "nodeType": "YulFunctionCall",
						  "src": "5112:17:2"
						},
						{
						  "arguments": [
							{
							  "name": "tail",
							  "nodeType": "YulIdentifier",
							  "src": "5135:4:2"
							},
							{
							  "name": "headStart",
							  "nodeType": "YulIdentifier",
							  "src": "5141:9:2"
							}
						  ],
						  "functionName": {
							"name": "sub",
							"nodeType": "YulIdentifier",
							"src": "5131:3:2"
						  },
						  "nodeType": "YulFunctionCall",
						  "src": "5131:20:2"
						}
					  ],
					  "functionName": {
						"name": "mstore",
						"nodeType": "YulIdentifier",
						"src": "5105:6:2"
					  },
					  "nodeType": "YulFunctionCall",
					  "src": "5105:47:2"
					},
					"nodeType": "YulExpressionStatement",
					"src": "5105:47:2"
				  },
				  {
					"nodeType": "YulAssignment",
					"src": "5161:86:2",
					"value": {
					  "arguments": [
						{
						  "name": "value0",
						  "nodeType": "YulIdentifier",
						  "src": "5233:6:2"
						},
						{
						  "name": "tail",
						  "nodeType": "YulIdentifier",
						  "src": "5242:4:2"
						}
					  ],
					  "functionName": {
						"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
						"nodeType": "YulIdentifier",
						"src": "5169:63:2"
					  },
					  "nodeType": "YulFunctionCall",
					  "src": "5169:78:2"
					},
					"variableNames": [
					  {
						"name": "tail",
						"nodeType": "YulIdentifier",
						"src": "5161:4:2"
					  }
					]
				  },
				  {
					"expression": {
					  "arguments": [
						{
						  "arguments": [
							{
							  "name": "headStart",
							  "nodeType": "YulIdentifier",
							  "src": "5268:9:2"
							},
							{
							  "kind": "number",
							  "nodeType": "YulLiteral",
							  "src": "5279:2:2",
							  "type": "",
							  "value": "32"
							}
						  ],
						  "functionName": {
							"name": "add",
							"nodeType": "YulIdentifier",
							"src": "5264:3:2"
						  },
						  "nodeType": "YulFunctionCall",
						  "src": "5264:18:2"
						},
						{
						  "arguments": [
							{
							  "name": "tail",
							  "nodeType": "YulIdentifier",
							  "src": "5288:4:2"
							},
							{
							  "name": "headStart",
							  "nodeType": "YulIdentifier",
							  "src": "5294:9:2"
							}
						  ],
						  "functionName": {
							"name": "sub",
							"nodeType": "YulIdentifier",
							"src": "5284:3:2"
						  },
						  "nodeType": "YulFunctionCall",
						  "src": "5284:20:2"
						}
					  ],
					  "functionName": {
						"name": "mstore",
						"nodeType": "YulIdentifier",
						"src": "5257:6:2"
					  },
					  "nodeType": "YulFunctionCall",
					  "src": "5257:48:2"
					},
					"nodeType": "YulExpressionStatement",
					"src": "5257:48:2"
				  },
				  {
					"nodeType": "YulAssignment",
					"src": "5314:86:2",
					"value": {
					  "arguments": [
						{
						  "name": "value1",
						  "nodeType": "YulIdentifier",
						  "src": "5386:6:2"
						},
						{
						  "name": "tail",
						  "nodeType": "YulIdentifier",
						  "src": "5395:4:2"
						}
					  ],
					  "functionName": {
						"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
						"nodeType": "YulIdentifier",
						"src": "5322:63:2"
					  },
					  "nodeType": "YulFunctionCall",
					  "src": "5322:78:2"
					},
					"variableNames": [
					  {
						"name": "tail",
						"nodeType": "YulIdentifier",
						"src": "5314:4:2"
					  }
					]
				  },
				  {
					"expression": {
					  "arguments": [
						{
						  "name": "value2",
						  "nodeType": "YulIdentifier",
						  "src": "5454:6:2"
						},
						{
						  "arguments": [
							{
							  "name": "headStart",
							  "nodeType": "YulIdentifier",
							  "src": "5467:9:2"
							},
							{
							  "kind": "number",
							  "nodeType": "YulLiteral",
							  "src": "5478:2:2",
							  "type": "",
							  "value": "64"
							}
						  ],
						  "functionName": {
							"name": "add",
							"nodeType": "YulIdentifier",
							"src": "5463:3:2"
						  },
						  "nodeType": "YulFunctionCall",
						  "src": "5463:18:2"
						}
					  ],
					  "functionName": {
						"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
						"nodeType": "YulIdentifier",
						"src": "5410:43:2"
					  },
					  "nodeType": "YulFunctionCall",
					  "src": "5410:72:2"
					},
					"nodeType": "YulExpressionStatement",
					"src": "5410:72:2"
				  },
				  {
					"expression": {
					  "arguments": [
						{
						  "name": "value3",
						  "nodeType": "YulIdentifier",
						  "src": "5550:6:2"
						},
						{
						  "arguments": [
							{
							  "name": "headStart",
							  "nodeType": "YulIdentifier",
							  "src": "5563:9:2"
							},
							{
							  "kind": "number",
							  "nodeType": "YulLiteral",
							  "src": "5574:2:2",
							  "type": "",
							  "value": "96"
							}
						  ],
						  "functionName": {
							"name": "add",
							"nodeType": "YulIdentifier",
							"src": "5559:3:2"
						  },
						  "nodeType": "YulFunctionCall",
						  "src": "5559:18:2"
						}
					  ],
					  "functionName": {
						"name": "abi_encode_t_enum$_ScheduleState_$44_to_t_uint8_fromStack",
						"nodeType": "YulIdentifier",
						"src": "5492:57:2"
					  },
					  "nodeType": "YulFunctionCall",
					  "src": "5492:86:2"
					},
					"nodeType": "YulExpressionStatement",
					"src": "5492:86:2"
				  }
				]
			  },
			  "name": "abi_encode_tuple_t_string_memory_ptr_t_string_memory_ptr_t_uint256_t_enum$_ScheduleState_$44__to_t_string_memory_ptr_t_string_memory_ptr_t_uint256_t_uint8__fromStack_reversed",
			  "nodeType": "YulFunctionDefinition",
			  "parameters": [
				{
				  "name": "headStart",
				  "nodeType": "YulTypedName",
				  "src": "5006:9:2",
				  "type": ""
				},
				{
				  "name": "value3",
				  "nodeType": "YulTypedName",
				  "src": "5018:6:2",
				  "type": ""
				},
				{
				  "name": "value2",
				  "nodeType": "YulTypedName",
				  "src": "5026:6:2",
				  "type": ""
				},
				{
				  "name": "value1",
				  "nodeType": "YulTypedName",
				  "src": "5034:6:2",
				  "type": ""
				},
				{
				  "name": "value0",
				  "nodeType": "YulTypedName",
				  "src": "5042:6:2",
				  "type": ""
				}
			  ],
			  "returnVariables": [
				{
				  "name": "tail",
				  "nodeType": "YulTypedName",
				  "src": "5053:4:2",
				  "type": ""
				}
			  ],
			  "src": "4822:763:2"
			},
			{
			  "body": {
				"nodeType": "YulBlock",
				"src": "5689:124:2",
				"statements": [
				  {
					"nodeType": "YulAssignment",
					"src": "5699:26:2",
					"value": {
					  "arguments": [
						{
						  "name": "headStart",
						  "nodeType": "YulIdentifier",
						  "src": "5711:9:2"
						},
						{
						  "kind": "number",
						  "nodeType": "YulLiteral",
						  "src": "5722:2:2",
						  "type": "",
						  "value": "32"
						}
					  ],
					  "functionName": {
						"name": "add",
						"nodeType": "YulIdentifier",
						"src": "5707:3:2"
					  },
					  "nodeType": "YulFunctionCall",
					  "src": "5707:18:2"
					},
					"variableNames": [
					  {
						"name": "tail",
						"nodeType": "YulIdentifier",
						"src": "5699:4:2"
					  }
					]
				  },
				  {
					"expression": {
					  "arguments": [
						{
						  "name": "value0",
						  "nodeType": "YulIdentifier",
						  "src": "5779:6:2"
						},
						{
						  "arguments": [
							{
							  "name": "headStart",
							  "nodeType": "YulIdentifier",
							  "src": "5792:9:2"
							},
							{
							  "kind": "number",
							  "nodeType": "YulLiteral",
							  "src": "5803:1:2",
							  "type": "",
							  "value": "0"
							}
						  ],
						  "functionName": {
							"name": "add",
							"nodeType": "YulIdentifier",
							"src": "5788:3:2"
						  },
						  "nodeType": "YulFunctionCall",
						  "src": "5788:17:2"
						}
					  ],
					  "functionName": {
						"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
						"nodeType": "YulIdentifier",
						"src": "5735:43:2"
					  },
					  "nodeType": "YulFunctionCall",
					  "src": "5735:71:2"
					},
					"nodeType": "YulExpressionStatement",
					"src": "5735:71:2"
				  }
				]
			  },
			  "name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
			  "nodeType": "YulFunctionDefinition",
			  "parameters": [
				{
				  "name": "headStart",
				  "nodeType": "YulTypedName",
				  "src": "5661:9:2",
				  "type": ""
				},
				{
				  "name": "value0",
				  "nodeType": "YulTypedName",
				  "src": "5673:6:2",
				  "type": ""
				}
			  ],
			  "returnVariables": [
				{
				  "name": "tail",
				  "nodeType": "YulTypedName",
				  "src": "5684:4:2",
				  "type": ""
				}
			  ],
			  "src": "5591:222:2"
			},
			{
			  "body": {
				"nodeType": "YulBlock",
				"src": "5859:243:2",
				"statements": [
				  {
					"nodeType": "YulAssignment",
					"src": "5869:19:2",
					"value": {
					  "arguments": [
						{
						  "kind": "number",
						  "nodeType": "YulLiteral",
						  "src": "5885:2:2",
						  "type": "",
						  "value": "64"
						}
					  ],
					  "functionName": {
						"name": "mload",
						"nodeType": "YulIdentifier",
						"src": "5879:5:2"
					  },
					  "nodeType": "YulFunctionCall",
					  "src": "5879:9:2"
					},
					"variableNames": [
					  {
						"name": "memPtr",
						"nodeType": "YulIdentifier",
						"src": "5869:6:2"
					  }
					]
				  },
				  {
					"nodeType": "YulVariableDeclaration",
					"src": "5897:35:2",
					"value": {
					  "arguments": [
						{
						  "name": "memPtr",
						  "nodeType": "YulIdentifier",
						  "src": "5919:6:2"
						},
						{
						  "name": "size",
						  "nodeType": "YulIdentifier",
						  "src": "5927:4:2"
						}
					  ],
					  "functionName": {
						"name": "add",
						"nodeType": "YulIdentifier",
						"src": "5915:3:2"
					  },
					  "nodeType": "YulFunctionCall",
					  "src": "5915:17:2"
					},
					"variables": [
					  {
						"name": "newFreePtr",
						"nodeType": "YulTypedName",
						"src": "5901:10:2",
						"type": ""
					  }
					]
				  },
				  {
					"body": {
					  "nodeType": "YulBlock",
					  "src": "6043:22:2",
					  "statements": [
						{
						  "expression": {
							"arguments": [],
							"functionName": {
							  "name": "panic_error_0x41",
							  "nodeType": "YulIdentifier",
							  "src": "6045:16:2"
							},
							"nodeType": "YulFunctionCall",
							"src": "6045:18:2"
						  },
						  "nodeType": "YulExpressionStatement",
						  "src": "6045:18:2"
						}
					  ]
					},
					"condition": {
					  "arguments": [
						{
						  "arguments": [
							{
							  "name": "newFreePtr",
							  "nodeType": "YulIdentifier",
							  "src": "5986:10:2"
							},
							{
							  "kind": "number",
							  "nodeType": "YulLiteral",
							  "src": "5998:18:2",
							  "type": "",
							  "value": "0xffffffffffffffff"
							}
						  ],
						  "functionName": {
							"name": "gt",
							"nodeType": "YulIdentifier",
							"src": "5983:2:2"
						  },
						  "nodeType": "YulFunctionCall",
						  "src": "5983:34:2"
						},
						{
						  "arguments": [
							{
							  "name": "newFreePtr",
							  "nodeType": "YulIdentifier",
							  "src": "6022:10:2"
							},
							{
							  "name": "memPtr",
							  "nodeType": "YulIdentifier",
							  "src": "6034:6:2"
							}
						  ],
						  "functionName": {
							"name": "lt",
							"nodeType": "YulIdentifier",
							"src": "6019:2:2"
						  },
						  "nodeType": "YulFunctionCall",
						  "src": "6019:22:2"
						}
					  ],
					  "functionName": {
						"name": "or",
						"nodeType": "YulIdentifier",
						"src": "5980:2:2"
					  },
					  "nodeType": "YulFunctionCall",
					  "src": "5980:62:2"
					},
					"nodeType": "YulIf",
					"src": "5977:2:2"
				  },
				  {
					"expression": {
					  "arguments": [
						{
						  "kind": "number",
						  "nodeType": "YulLiteral",
						  "src": "6081:2:2",
						  "type": "",
						  "value": "64"
						},
						{
						  "name": "newFreePtr",
						  "nodeType": "YulIdentifier",
						  "src": "6085:10:2"
						}
					  ],
					  "functionName": {
						"name": "mstore",
						"nodeType": "YulIdentifier",
						"src": "6074:6:2"
					  },
					  "nodeType": "YulFunctionCall",
					  "src": "6074:22:2"
					},
					"nodeType": "YulExpressionStatement",
					"src": "6074:22:2"
				  }
				]
			  },
			  "name": "allocateMemory",
			  "nodeType": "YulFunctionDefinition",
			  "parameters": [
				{
				  "name": "size",
				  "nodeType": "YulTypedName",
				  "src": "5843:4:2",
				  "type": ""
				}
			  ],
			  "returnVariables": [
				{
				  "name": "memPtr",
				  "nodeType": "YulTypedName",
				  "src": "5852:6:2",
				  "type": ""
				}
			  ],
			  "src": "5819:283:2"
			},
			{
			  "body": {
				"nodeType": "YulBlock",
				"src": "6175:265:2",
				"statements": [
				  {
					"body": {
					  "nodeType": "YulBlock",
					  "src": "6280:22:2",
					  "statements": [
						{
						  "expression": {
							"arguments": [],
							"functionName": {
							  "name": "panic_error_0x41",
							  "nodeType": "YulIdentifier",
							  "src": "6282:16:2"
							},
							"nodeType": "YulFunctionCall",
							"src": "6282:18:2"
						  },
						  "nodeType": "YulExpressionStatement",
						  "src": "6282:18:2"
						}
					  ]
					},
					"condition": {
					  "arguments": [
						{
						  "name": "length",
						  "nodeType": "YulIdentifier",
						  "src": "6252:6:2"
						},
						{
						  "kind": "number",
						  "nodeType": "YulLiteral",
						  "src": "6260:18:2",
						  "type": "",
						  "value": "0xffffffffffffffff"
						}
					  ],
					  "functionName": {
						"name": "gt",
						"nodeType": "YulIdentifier",
						"src": "6249:2:2"
					  },
					  "nodeType": "YulFunctionCall",
					  "src": "6249:30:2"
					},
					"nodeType": "YulIf",
					"src": "6246:2:2"
				  },
				  {
					"nodeType": "YulAssignment",
					"src": "6332:41:2",
					"value": {
					  "arguments": [
						{
						  "arguments": [
							{
							  "name": "length",
							  "nodeType": "YulIdentifier",
							  "src": "6348:6:2"
							},
							{
							  "kind": "number",
							  "nodeType": "YulLiteral",
							  "src": "6356:4:2",
							  "type": "",
							  "value": "0x1f"
							}
						  ],
						  "functionName": {
							"name": "add",
							"nodeType": "YulIdentifier",
							"src": "6344:3:2"
						  },
						  "nodeType": "YulFunctionCall",
						  "src": "6344:17:2"
						},
						{
						  "arguments": [
							{
							  "kind": "number",
							  "nodeType": "YulLiteral",
							  "src": "6367:4:2",
							  "type": "",
							  "value": "0x1f"
							}
						  ],
						  "functionName": {
							"name": "not",
							"nodeType": "YulIdentifier",
							"src": "6363:3:2"
						  },
						  "nodeType": "YulFunctionCall",
						  "src": "6363:9:2"
						}
					  ],
					  "functionName": {
						"name": "and",
						"nodeType": "YulIdentifier",
						"src": "6340:3:2"
					  },
					  "nodeType": "YulFunctionCall",
					  "src": "6340:33:2"
					},
					"variableNames": [
					  {
						"name": "size",
						"nodeType": "YulIdentifier",
						"src": "6332:4:2"
					  }
					]
				  },
				  {
					"nodeType": "YulAssignment",
					"src": "6410:23:2",
					"value": {
					  "arguments": [
						{
						  "name": "size",
						  "nodeType": "YulIdentifier",
						  "src": "6422:4:2"
						},
						{
						  "kind": "number",
						  "nodeType": "YulLiteral",
						  "src": "6428:4:2",
						  "type": "",
						  "value": "0x20"
						}
					  ],
					  "functionName": {
						"name": "add",
						"nodeType": "YulIdentifier",
						"src": "6418:3:2"
					  },
					  "nodeType": "YulFunctionCall",
					  "src": "6418:15:2"
					},
					"variableNames": [
					  {
						"name": "size",
						"nodeType": "YulIdentifier",
						"src": "6410:4:2"
					  }
					]
				  }
				]
			  },
			  "name": "array_allocation_size_t_string_memory_ptr",
			  "nodeType": "YulFunctionDefinition",
			  "parameters": [
				{
				  "name": "length",
				  "nodeType": "YulTypedName",
				  "src": "6159:6:2",
				  "type": ""
				}
			  ],
			  "returnVariables": [
				{
				  "name": "size",
				  "nodeType": "YulTypedName",
				  "src": "6170:4:2",
				  "type": ""
				}
			  ],
			  "src": "6108:332:2"
			},
			{
			  "body": {
				"nodeType": "YulBlock",
				"src": "6505:40:2",
				"statements": [
				  {
					"nodeType": "YulAssignment",
					"src": "6516:22:2",
					"value": {
					  "arguments": [
						{
						  "name": "value",
						  "nodeType": "YulIdentifier",
						  "src": "6532:5:2"
						}
					  ],
					  "functionName": {
						"name": "mload",
						"nodeType": "YulIdentifier",
						"src": "6526:5:2"
					  },
					  "nodeType": "YulFunctionCall",
					  "src": "6526:12:2"
					},
					"variableNames": [
					  {
						"name": "length",
						"nodeType": "YulIdentifier",
						"src": "6516:6:2"
					  }
					]
				  }
				]
			  },
			  "name": "array_length_t_string_memory_ptr",
			  "nodeType": "YulFunctionDefinition",
			  "parameters": [
				{
				  "name": "value",
				  "nodeType": "YulTypedName",
				  "src": "6488:5:2",
				  "type": ""
				}
			  ],
			  "returnVariables": [
				{
				  "name": "length",
				  "nodeType": "YulTypedName",
				  "src": "6498:6:2",
				  "type": ""
				}
			  ],
			  "src": "6446:99:2"
			},
			{
			  "body": {
				"nodeType": "YulBlock",
				"src": "6647:73:2",
				"statements": [
				  {
					"expression": {
					  "arguments": [
						{
						  "name": "pos",
						  "nodeType": "YulIdentifier",
						  "src": "6664:3:2"
						},
						{
						  "name": "length",
						  "nodeType": "YulIdentifier",
						  "src": "6669:6:2"
						}
					  ],
					  "functionName": {
						"name": "mstore",
						"nodeType": "YulIdentifier",
						"src": "6657:6:2"
					  },
					  "nodeType": "YulFunctionCall",
					  "src": "6657:19:2"
					},
					"nodeType": "YulExpressionStatement",
					"src": "6657:19:2"
				  },
				  {
					"nodeType": "YulAssignment",
					"src": "6685:29:2",
					"value": {
					  "arguments": [
						{
						  "name": "pos",
						  "nodeType": "YulIdentifier",
						  "src": "6704:3:2"
						},
						{
						  "kind": "number",
						  "nodeType": "YulLiteral",
						  "src": "6709:4:2",
						  "type": "",
						  "value": "0x20"
						}
					  ],
					  "functionName": {
						"name": "add",
						"nodeType": "YulIdentifier",
						"src": "6700:3:2"
					  },
					  "nodeType": "YulFunctionCall",
					  "src": "6700:14:2"
					},
					"variableNames": [
					  {
						"name": "updated_pos",
						"nodeType": "YulIdentifier",
						"src": "6685:11:2"
					  }
					]
				  }
				]
			  },
			  "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
			  "nodeType": "YulFunctionDefinition",
			  "parameters": [
				{
				  "name": "pos",
				  "nodeType": "YulTypedName",
				  "src": "6619:3:2",
				  "type": ""
				},
				{
				  "name": "length",
				  "nodeType": "YulTypedName",
				  "src": "6624:6:2",
				  "type": ""
				}
			  ],
			  "returnVariables": [
				{
				  "name": "updated_pos",
				  "nodeType": "YulTypedName",
				  "src": "6635:11:2",
				  "type": ""
				}
			  ],
			  "src": "6551:169:2"
			},
			{
			  "body": {
				"nodeType": "YulBlock",
				"src": "6770:483:2",
				"statements": [
				  {
					"nodeType": "YulAssignment",
					"src": "6780:24:2",
					"value": {
					  "arguments": [
						{
						  "name": "x",
						  "nodeType": "YulIdentifier",
						  "src": "6802:1:2"
						}
					  ],
					  "functionName": {
						"name": "cleanup_t_int256",
						"nodeType": "YulIdentifier",
						"src": "6785:16:2"
					  },
					  "nodeType": "YulFunctionCall",
					  "src": "6785:19:2"
					},
					"variableNames": [
					  {
						"name": "x",
						"nodeType": "YulIdentifier",
						"src": "6780:1:2"
					  }
					]
				  },
				  {
					"nodeType": "YulAssignment",
					"src": "6813:24:2",
					"value": {
					  "arguments": [
						{
						  "name": "y",
						  "nodeType": "YulIdentifier",
						  "src": "6835:1:2"
						}
					  ],
					  "functionName": {
						"name": "cleanup_t_int256",
						"nodeType": "YulIdentifier",
						"src": "6818:16:2"
					  },
					  "nodeType": "YulFunctionCall",
					  "src": "6818:19:2"
					},
					"variableNames": [
					  {
						"name": "y",
						"nodeType": "YulIdentifier",
						"src": "6813:1:2"
					  }
					]
				  },
				  {
					"body": {
					  "nodeType": "YulBlock",
					  "src": "7012:22:2",
					  "statements": [
						{
						  "expression": {
							"arguments": [],
							"functionName": {
							  "name": "panic_error_0x11",
							  "nodeType": "YulIdentifier",
							  "src": "7014:16:2"
							},
							"nodeType": "YulFunctionCall",
							"src": "7014:18:2"
						  },
						  "nodeType": "YulExpressionStatement",
						  "src": "7014:18:2"
						}
					  ]
					},
					"condition": {
					  "arguments": [
						{
						  "arguments": [
							{
							  "arguments": [
								{
								  "name": "y",
								  "nodeType": "YulIdentifier",
								  "src": "6920:1:2"
								},
								{
								  "kind": "number",
								  "nodeType": "YulLiteral",
								  "src": "6923:1:2",
								  "type": "",
								  "value": "0"
								}
							  ],
							  "functionName": {
								"name": "slt",
								"nodeType": "YulIdentifier",
								"src": "6916:3:2"
							  },
							  "nodeType": "YulFunctionCall",
							  "src": "6916:9:2"
							}
						  ],
						  "functionName": {
							"name": "iszero",
							"nodeType": "YulIdentifier",
							"src": "6909:6:2"
						  },
						  "nodeType": "YulFunctionCall",
						  "src": "6909:17:2"
						},
						{
						  "arguments": [
							{
							  "name": "x",
							  "nodeType": "YulIdentifier",
							  "src": "6932:1:2"
							},
							{
							  "arguments": [
								{
								  "kind": "number",
								  "nodeType": "YulLiteral",
								  "src": "6939:66:2",
								  "type": "",
								  "value": "0x8000000000000000000000000000000000000000000000000000000000000000"
								},
								{
								  "name": "y",
								  "nodeType": "YulIdentifier",
								  "src": "7007:1:2"
								}
							  ],
							  "functionName": {
								"name": "add",
								"nodeType": "YulIdentifier",
								"src": "6935:3:2"
							  },
							  "nodeType": "YulFunctionCall",
							  "src": "6935:74:2"
							}
						  ],
						  "functionName": {
							"name": "slt",
							"nodeType": "YulIdentifier",
							"src": "6928:3:2"
						  },
						  "nodeType": "YulFunctionCall",
						  "src": "6928:82:2"
						}
					  ],
					  "functionName": {
						"name": "and",
						"nodeType": "YulIdentifier",
						"src": "6905:3:2"
					  },
					  "nodeType": "YulFunctionCall",
					  "src": "6905:106:2"
					},
					"nodeType": "YulIf",
					"src": "6902:2:2"
				  },
				  {
					"body": {
					  "nodeType": "YulBlock",
					  "src": "7198:22:2",
					  "statements": [
						{
						  "expression": {
							"arguments": [],
							"functionName": {
							  "name": "panic_error_0x11",
							  "nodeType": "YulIdentifier",
							  "src": "7200:16:2"
							},
							"nodeType": "YulFunctionCall",
							"src": "7200:18:2"
						  },
						  "nodeType": "YulExpressionStatement",
						  "src": "7200:18:2"
						}
					  ]
					},
					"condition": {
					  "arguments": [
						{
						  "arguments": [
							{
							  "name": "y",
							  "nodeType": "YulIdentifier",
							  "src": "7107:1:2"
							},
							{
							  "kind": "number",
							  "nodeType": "YulLiteral",
							  "src": "7110:1:2",
							  "type": "",
							  "value": "0"
							}
						  ],
						  "functionName": {
							"name": "slt",
							"nodeType": "YulIdentifier",
							"src": "7103:3:2"
						  },
						  "nodeType": "YulFunctionCall",
						  "src": "7103:9:2"
						},
						{
						  "arguments": [
							{
							  "name": "x",
							  "nodeType": "YulIdentifier",
							  "src": "7118:1:2"
							},
							{
							  "arguments": [
								{
								  "kind": "number",
								  "nodeType": "YulLiteral",
								  "src": "7125:66:2",
								  "type": "",
								  "value": "0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
								},
								{
								  "name": "y",
								  "nodeType": "YulIdentifier",
								  "src": "7193:1:2"
								}
							  ],
							  "functionName": {
								"name": "add",
								"nodeType": "YulIdentifier",
								"src": "7121:3:2"
							  },
							  "nodeType": "YulFunctionCall",
							  "src": "7121:74:2"
							}
						  ],
						  "functionName": {
							"name": "sgt",
							"nodeType": "YulIdentifier",
							"src": "7114:3:2"
						  },
						  "nodeType": "YulFunctionCall",
						  "src": "7114:82:2"
						}
					  ],
					  "functionName": {
						"name": "and",
						"nodeType": "YulIdentifier",
						"src": "7099:3:2"
					  },
					  "nodeType": "YulFunctionCall",
					  "src": "7099:98:2"
					},
					"nodeType": "YulIf",
					"src": "7096:2:2"
				  },
				  {
					"nodeType": "YulAssignment",
					"src": "7230:17:2",
					"value": {
					  "arguments": [
						{
						  "name": "x",
						  "nodeType": "YulIdentifier",
						  "src": "7242:1:2"
						},
						{
						  "name": "y",
						  "nodeType": "YulIdentifier",
						  "src": "7245:1:2"
						}
					  ],
					  "functionName": {
						"name": "sub",
						"nodeType": "YulIdentifier",
						"src": "7238:3:2"
					  },
					  "nodeType": "YulFunctionCall",
					  "src": "7238:9:2"
					},
					"variableNames": [
					  {
						"name": "diff",
						"nodeType": "YulIdentifier",
						"src": "7230:4:2"
					  }
					]
				  }
				]
			  },
			  "name": "checked_sub_t_int256",
			  "nodeType": "YulFunctionDefinition",
			  "parameters": [
				{
				  "name": "x",
				  "nodeType": "YulTypedName",
				  "src": "6756:1:2",
				  "type": ""
				},
				{
				  "name": "y",
				  "nodeType": "YulTypedName",
				  "src": "6759:1:2",
				  "type": ""
				}
			  ],
			  "returnVariables": [
				{
				  "name": "diff",
				  "nodeType": "YulTypedName",
				  "src": "6765:4:2",
				  "type": ""
				}
			  ],
			  "src": "6726:527:2"
			},
			{
			  "body": {
				"nodeType": "YulBlock",
				"src": "7304:51:2",
				"statements": [
				  {
					"nodeType": "YulAssignment",
					"src": "7314:35:2",
					"value": {
					  "arguments": [
						{
						  "name": "value",
						  "nodeType": "YulIdentifier",
						  "src": "7343:5:2"
						}
					  ],
					  "functionName": {
						"name": "cleanup_t_uint160",
						"nodeType": "YulIdentifier",
						"src": "7325:17:2"
					  },
					  "nodeType": "YulFunctionCall",
					  "src": "7325:24:2"
					},
					"variableNames": [
					  {
						"name": "cleaned",
						"nodeType": "YulIdentifier",
						"src": "7314:7:2"
					  }
					]
				  }
				]
			  },
			  "name": "cleanup_t_address",
			  "nodeType": "YulFunctionDefinition",
			  "parameters": [
				{
				  "name": "value",
				  "nodeType": "YulTypedName",
				  "src": "7286:5:2",
				  "type": ""
				}
			  ],
			  "returnVariables": [
				{
				  "name": "cleaned",
				  "nodeType": "YulTypedName",
				  "src": "7296:7:2",
				  "type": ""
				}
			  ],
			  "src": "7259:96:2"
			},
			{
			  "body": {
				"nodeType": "YulBlock",
				"src": "7414:51:2",
				"statements": [
				  {
					"nodeType": "YulAssignment",
					"src": "7424:35:2",
					"value": {
					  "arguments": [
						{
						  "name": "value",
						  "nodeType": "YulIdentifier",
						  "src": "7453:5:2"
						}
					  ],
					  "functionName": {
						"name": "cleanup_t_uint160",
						"nodeType": "YulIdentifier",
						"src": "7435:17:2"
					  },
					  "nodeType": "YulFunctionCall",
					  "src": "7435:24:2"
					},
					"variableNames": [
					  {
						"name": "cleaned",
						"nodeType": "YulIdentifier",
						"src": "7424:7:2"
					  }
					]
				  }
				]
			  },
			  "name": "cleanup_t_address_payable",
			  "nodeType": "YulFunctionDefinition",
			  "parameters": [
				{
				  "name": "value",
				  "nodeType": "YulTypedName",
				  "src": "7396:5:2",
				  "type": ""
				}
			  ],
			  "returnVariables": [
				{
				  "name": "cleaned",
				  "nodeType": "YulTypedName",
				  "src": "7406:7:2",
				  "type": ""
				}
			  ],
			  "src": "7361:104:2"
			},
			{
			  "body": {
				"nodeType": "YulBlock",
				"src": "7531:81:2",
				"statements": [
				  {
					"nodeType": "YulAssignment",
					"src": "7541:16:2",
					"value": {
					  "name": "value",
					  "nodeType": "YulIdentifier",
					  "src": "7552:5:2"
					},
					"variableNames": [
					  {
						"name": "cleaned",
						"nodeType": "YulIdentifier",
						"src": "7541:7:2"
					  }
					]
				  },
				  {
					"expression": {
					  "arguments": [
						{
						  "name": "value",
						  "nodeType": "YulIdentifier",
						  "src": "7600:5:2"
						}
					  ],
					  "functionName": {
						"name": "validator_assert_t_enum$_ProjectState_$48",
						"nodeType": "YulIdentifier",
						"src": "7558:41:2"
					  },
					  "nodeType": "YulFunctionCall",
					  "src": "7558:48:2"
					},
					"nodeType": "YulExpressionStatement",
					"src": "7558:48:2"
				  }
				]
			  },
			  "name": "cleanup_t_enum$_ProjectState_$48",
			  "nodeType": "YulFunctionDefinition",
			  "parameters": [
				{
				  "name": "value",
				  "nodeType": "YulTypedName",
				  "src": "7513:5:2",
				  "type": ""
				}
			  ],
			  "returnVariables": [
				{
				  "name": "cleaned",
				  "nodeType": "YulTypedName",
				  "src": "7523:7:2",
				  "type": ""
				}
			  ],
			  "src": "7471:141:2"
			},
			{
			  "body": {
				"nodeType": "YulBlock",
				"src": "7679:82:2",
				"statements": [
				  {
					"nodeType": "YulAssignment",
					"src": "7689:16:2",
					"value": {
					  "name": "value",
					  "nodeType": "YulIdentifier",
					  "src": "7700:5:2"
					},
					"variableNames": [
					  {
						"name": "cleaned",
						"nodeType": "YulIdentifier",
						"src": "7689:7:2"
					  }
					]
				  },
				  {
					"expression": {
					  "arguments": [
						{
						  "name": "value",
						  "nodeType": "YulIdentifier",
						  "src": "7749:5:2"
						}
					  ],
					  "functionName": {
						"name": "validator_assert_t_enum$_ScheduleState_$44",
						"nodeType": "YulIdentifier",
						"src": "7706:42:2"
					  },
					  "nodeType": "YulFunctionCall",
					  "src": "7706:49:2"
					},
					"nodeType": "YulExpressionStatement",
					"src": "7706:49:2"
				  }
				]
			  },
			  "name": "cleanup_t_enum$_ScheduleState_$44",
			  "nodeType": "YulFunctionDefinition",
			  "parameters": [
				{
				  "name": "value",
				  "nodeType": "YulTypedName",
				  "src": "7661:5:2",
				  "type": ""
				}
			  ],
			  "returnVariables": [
				{
				  "name": "cleaned",
				  "nodeType": "YulTypedName",
				  "src": "7671:7:2",
				  "type": ""
				}
			  ],
			  "src": "7618:143:2"
			},
			{
			  "body": {
				"nodeType": "YulBlock",
				"src": "7811:32:2",
				"statements": [
				  {
					"nodeType": "YulAssignment",
					"src": "7821:16:2",
					"value": {
					  "name": "value",
					  "nodeType": "YulIdentifier",
					  "src": "7832:5:2"
					},
					"variableNames": [
					  {
						"name": "cleaned",
						"nodeType": "YulIdentifier",
						"src": "7821:7:2"
					  }
					]
				  }
				]
			  },
			  "name": "cleanup_t_int256",
			  "nodeType": "YulFunctionDefinition",
			  "parameters": [
				{
				  "name": "value",
				  "nodeType": "YulTypedName",
				  "src": "7793:5:2",
				  "type": ""
				}
			  ],
			  "returnVariables": [
				{
				  "name": "cleaned",
				  "nodeType": "YulTypedName",
				  "src": "7803:7:2",
				  "type": ""
				}
			  ],
			  "src": "7767:76:2"
			},
			{
			  "body": {
				"nodeType": "YulBlock",
				"src": "7894:81:2",
				"statements": [
				  {
					"nodeType": "YulAssignment",
					"src": "7904:65:2",
					"value": {
					  "arguments": [
						{
						  "name": "value",
						  "nodeType": "YulIdentifier",
						  "src": "7919:5:2"
						},
						{
						  "kind": "number",
						  "nodeType": "YulLiteral",
						  "src": "7926:42:2",
						  "type": "",
						  "value": "0xffffffffffffffffffffffffffffffffffffffff"
						}
					  ],
					  "functionName": {
						"name": "and",
						"nodeType": "YulIdentifier",
						"src": "7915:3:2"
					  },
					  "nodeType": "YulFunctionCall",
					  "src": "7915:54:2"
					},
					"variableNames": [
					  {
						"name": "cleaned",
						"nodeType": "YulIdentifier",
						"src": "7904:7:2"
					  }
					]
				  }
				]
			  },
			  "name": "cleanup_t_uint160",
			  "nodeType": "YulFunctionDefinition",
			  "parameters": [
				{
				  "name": "value",
				  "nodeType": "YulTypedName",
				  "src": "7876:5:2",
				  "type": ""
				}
			  ],
			  "returnVariables": [
				{
				  "name": "cleaned",
				  "nodeType": "YulTypedName",
				  "src": "7886:7:2",
				  "type": ""
				}
			  ],
			  "src": "7849:126:2"
			},
			{
			  "body": {
				"nodeType": "YulBlock",
				"src": "8026:32:2",
				"statements": [
				  {
					"nodeType": "YulAssignment",
					"src": "8036:16:2",
					"value": {
					  "name": "value",
					  "nodeType": "YulIdentifier",
					  "src": "8047:5:2"
					},
					"variableNames": [
					  {
						"name": "cleaned",
						"nodeType": "YulIdentifier",
						"src": "8036:7:2"
					  }
					]
				  }
				]
			  },
			  "name": "cleanup_t_uint256",
			  "nodeType": "YulFunctionDefinition",
			  "parameters": [
				{
				  "name": "value",
				  "nodeType": "YulTypedName",
				  "src": "8008:5:2",
				  "type": ""
				}
			  ],
			  "returnVariables": [
				{
				  "name": "cleaned",
				  "nodeType": "YulTypedName",
				  "src": "8018:7:2",
				  "type": ""
				}
			  ],
			  "src": "7981:77:2"
			},
			{
			  "body": {
				"nodeType": "YulBlock",
				"src": "8137:68:2",
				"statements": [
				  {
					"nodeType": "YulAssignment",
					"src": "8147:52:2",
					"value": {
					  "arguments": [
						{
						  "name": "value",
						  "nodeType": "YulIdentifier",
						  "src": "8193:5:2"
						}
					  ],
					  "functionName": {
						"name": "cleanup_t_enum$_ProjectState_$48",
						"nodeType": "YulIdentifier",
						"src": "8160:32:2"
					  },
					  "nodeType": "YulFunctionCall",
					  "src": "8160:39:2"
					},
					"variableNames": [
					  {
						"name": "converted",
						"nodeType": "YulIdentifier",
						"src": "8147:9:2"
					  }
					]
				  }
				]
			  },
			  "name": "convert_t_enum$_ProjectState_$48_to_t_uint8",
			  "nodeType": "YulFunctionDefinition",
			  "parameters": [
				{
				  "name": "value",
				  "nodeType": "YulTypedName",
				  "src": "8117:5:2",
				  "type": ""
				}
			  ],
			  "returnVariables": [
				{
				  "name": "converted",
				  "nodeType": "YulTypedName",
				  "src": "8127:9:2",
				  "type": ""
				}
			  ],
			  "src": "8064:141:2"
			},
			{
			  "body": {
				"nodeType": "YulBlock",
				"src": "8285:69:2",
				"statements": [
				  {
					"nodeType": "YulAssignment",
					"src": "8295:53:2",
					"value": {
					  "arguments": [
						{
						  "name": "value",
						  "nodeType": "YulIdentifier",
						  "src": "8342:5:2"
						}
					  ],
					  "functionName": {
						"name": "cleanup_t_enum$_ScheduleState_$44",
						"nodeType": "YulIdentifier",
						"src": "8308:33:2"
					  },
					  "nodeType": "YulFunctionCall",
					  "src": "8308:40:2"
					},
					"variableNames": [
					  {
						"name": "converted",
						"nodeType": "YulIdentifier",
						"src": "8295:9:2"
					  }
					]
				  }
				]
			  },
			  "name": "convert_t_enum$_ScheduleState_$44_to_t_uint8",
			  "nodeType": "YulFunctionDefinition",
			  "parameters": [
				{
				  "name": "value",
				  "nodeType": "YulTypedName",
				  "src": "8265:5:2",
				  "type": ""
				}
			  ],
			  "returnVariables": [
				{
				  "name": "converted",
				  "nodeType": "YulTypedName",
				  "src": "8275:9:2",
				  "type": ""
				}
			  ],
			  "src": "8211:143:2"
			},
			{
			  "body": {
				"nodeType": "YulBlock",
				"src": "8411:103:2",
				"statements": [
				  {
					"expression": {
					  "arguments": [
						{
						  "name": "dst",
						  "nodeType": "YulIdentifier",
						  "src": "8434:3:2"
						},
						{
						  "name": "src",
						  "nodeType": "YulIdentifier",
						  "src": "8439:3:2"
						},
						{
						  "name": "length",
						  "nodeType": "YulIdentifier",
						  "src": "8444:6:2"
						}
					  ],
					  "functionName": {
						"name": "calldatacopy",
						"nodeType": "YulIdentifier",
						"src": "8421:12:2"
					  },
					  "nodeType": "YulFunctionCall",
					  "src": "8421:30:2"
					},
					"nodeType": "YulExpressionStatement",
					"src": "8421:30:2"
				  },
				  {
					"expression": {
					  "arguments": [
						{
						  "arguments": [
							{
							  "name": "dst",
							  "nodeType": "YulIdentifier",
							  "src": "8492:3:2"
							},
							{
							  "name": "length",
							  "nodeType": "YulIdentifier",
							  "src": "8497:6:2"
							}
						  ],
						  "functionName": {
							"name": "add",
							"nodeType": "YulIdentifier",
							"src": "8488:3:2"
						  },
						  "nodeType": "YulFunctionCall",
						  "src": "8488:16:2"
						},
						{
						  "kind": "number",
						  "nodeType": "YulLiteral",
						  "src": "8506:1:2",
						  "type": "",
						  "value": "0"
						}
					  ],
					  "functionName": {
						"name": "mstore",
						"nodeType": "YulIdentifier",
						"src": "8481:6:2"
					  },
					  "nodeType": "YulFunctionCall",
					  "src": "8481:27:2"
					},
					"nodeType": "YulExpressionStatement",
					"src": "8481:27:2"
				  }
				]
			  },
			  "name": "copy_calldata_to_memory",
			  "nodeType": "YulFunctionDefinition",
			  "parameters": [
				{
				  "name": "src",
				  "nodeType": "YulTypedName",
				  "src": "8393:3:2",
				  "type": ""
				},
				{
				  "name": "dst",
				  "nodeType": "YulTypedName",
				  "src": "8398:3:2",
				  "type": ""
				},
				{
				  "name": "length",
				  "nodeType": "YulTypedName",
				  "src": "8403:6:2",
				  "type": ""
				}
			  ],
			  "src": "8360:154:2"
			},
			{
			  "body": {
				"nodeType": "YulBlock",
				"src": "8569:258:2",
				"statements": [
				  {
					"nodeType": "YulVariableDeclaration",
					"src": "8579:10:2",
					"value": {
					  "kind": "number",
					  "nodeType": "YulLiteral",
					  "src": "8588:1:2",
					  "type": "",
					  "value": "0"
					},
					"variables": [
					  {
						"name": "i",
						"nodeType": "YulTypedName",
						"src": "8583:1:2",
						"type": ""
					  }
					]
				  },
				  {
					"body": {
					  "nodeType": "YulBlock",
					  "src": "8648:63:2",
					  "statements": [
						{
						  "expression": {
							"arguments": [
							  {
								"arguments": [
								  {
									"name": "dst",
									"nodeType": "YulIdentifier",
									"src": "8673:3:2"
								  },
								  {
									"name": "i",
									"nodeType": "YulIdentifier",
									"src": "8678:1:2"
								  }
								],
								"functionName": {
								  "name": "add",
								  "nodeType": "YulIdentifier",
								  "src": "8669:3:2"
								},
								"nodeType": "YulFunctionCall",
								"src": "8669:11:2"
							  },
							  {
								"arguments": [
								  {
									"arguments": [
									  {
										"name": "src",
										"nodeType": "YulIdentifier",
										"src": "8692:3:2"
									  },
									  {
										"name": "i",
										"nodeType": "YulIdentifier",
										"src": "8697:1:2"
									  }
									],
									"functionName": {
									  "name": "add",
									  "nodeType": "YulIdentifier",
									  "src": "8688:3:2"
									},
									"nodeType": "YulFunctionCall",
									"src": "8688:11:2"
								  }
								],
								"functionName": {
								  "name": "mload",
								  "nodeType": "YulIdentifier",
								  "src": "8682:5:2"
								},
								"nodeType": "YulFunctionCall",
								"src": "8682:18:2"
							  }
							],
							"functionName": {
							  "name": "mstore",
							  "nodeType": "YulIdentifier",
							  "src": "8662:6:2"
							},
							"nodeType": "YulFunctionCall",
							"src": "8662:39:2"
						  },
						  "nodeType": "YulExpressionStatement",
						  "src": "8662:39:2"
						}
					  ]
					},
					"condition": {
					  "arguments": [
						{
						  "name": "i",
						  "nodeType": "YulIdentifier",
						  "src": "8609:1:2"
						},
						{
						  "name": "length",
						  "nodeType": "YulIdentifier",
						  "src": "8612:6:2"
						}
					  ],
					  "functionName": {
						"name": "lt",
						"nodeType": "YulIdentifier",
						"src": "8606:2:2"
					  },
					  "nodeType": "YulFunctionCall",
					  "src": "8606:13:2"
					},
					"nodeType": "YulForLoop",
					"post": {
					  "nodeType": "YulBlock",
					  "src": "8620:19:2",
					  "statements": [
						{
						  "nodeType": "YulAssignment",
						  "src": "8622:15:2",
						  "value": {
							"arguments": [
							  {
								"name": "i",
								"nodeType": "YulIdentifier",
								"src": "8631:1:2"
							  },
							  {
								"kind": "number",
								"nodeType": "YulLiteral",
								"src": "8634:2:2",
								"type": "",
								"value": "32"
							  }
							],
							"functionName": {
							  "name": "add",
							  "nodeType": "YulIdentifier",
							  "src": "8627:3:2"
							},
							"nodeType": "YulFunctionCall",
							"src": "8627:10:2"
						  },
						  "variableNames": [
							{
							  "name": "i",
							  "nodeType": "YulIdentifier",
							  "src": "8622:1:2"
							}
						  ]
						}
					  ]
					},
					"pre": {
					  "nodeType": "YulBlock",
					  "src": "8602:3:2",
					  "statements": []
					},
					"src": "8598:113:2"
				  },
				  {
					"body": {
					  "nodeType": "YulBlock",
					  "src": "8745:76:2",
					  "statements": [
						{
						  "expression": {
							"arguments": [
							  {
								"arguments": [
								  {
									"name": "dst",
									"nodeType": "YulIdentifier",
									"src": "8795:3:2"
								  },
								  {
									"name": "length",
									"nodeType": "YulIdentifier",
									"src": "8800:6:2"
								  }
								],
								"functionName": {
								  "name": "add",
								  "nodeType": "YulIdentifier",
								  "src": "8791:3:2"
								},
								"nodeType": "YulFunctionCall",
								"src": "8791:16:2"
							  },
							  {
								"kind": "number",
								"nodeType": "YulLiteral",
								"src": "8809:1:2",
								"type": "",
								"value": "0"
							  }
							],
							"functionName": {
							  "name": "mstore",
							  "nodeType": "YulIdentifier",
							  "src": "8784:6:2"
							},
							"nodeType": "YulFunctionCall",
							"src": "8784:27:2"
						  },
						  "nodeType": "YulExpressionStatement",
						  "src": "8784:27:2"
						}
					  ]
					},
					"condition": {
					  "arguments": [
						{
						  "name": "i",
						  "nodeType": "YulIdentifier",
						  "src": "8726:1:2"
						},
						{
						  "name": "length",
						  "nodeType": "YulIdentifier",
						  "src": "8729:6:2"
						}
					  ],
					  "functionName": {
						"name": "gt",
						"nodeType": "YulIdentifier",
						"src": "8723:2:2"
					  },
					  "nodeType": "YulFunctionCall",
					  "src": "8723:13:2"
					},
					"nodeType": "YulIf",
					"src": "8720:2:2"
				  }
				]
			  },
			  "name": "copy_memory_to_memory",
			  "nodeType": "YulFunctionDefinition",
			  "parameters": [
				{
				  "name": "src",
				  "nodeType": "YulTypedName",
				  "src": "8551:3:2",
				  "type": ""
				},
				{
				  "name": "dst",
				  "nodeType": "YulTypedName",
				  "src": "8556:3:2",
				  "type": ""
				},
				{
				  "name": "length",
				  "nodeType": "YulTypedName",
				  "src": "8561:6:2",
				  "type": ""
				}
			  ],
			  "src": "8520:307:2"
			},
			{
			  "body": {
				"nodeType": "YulBlock",
				"src": "8884:269:2",
				"statements": [
				  {
					"nodeType": "YulAssignment",
					"src": "8894:22:2",
					"value": {
					  "arguments": [
						{
						  "name": "data",
						  "nodeType": "YulIdentifier",
						  "src": "8908:4:2"
						},
						{
						  "kind": "number",
						  "nodeType": "YulLiteral",
						  "src": "8914:1:2",
						  "type": "",
						  "value": "2"
						}
					  ],
					  "functionName": {
						"name": "div",
						"nodeType": "YulIdentifier",
						"src": "8904:3:2"
					  },
					  "nodeType": "YulFunctionCall",
					  "src": "8904:12:2"
					},
					"variableNames": [
					  {
						"name": "length",
						"nodeType": "YulIdentifier",
						"src": "8894:6:2"
					  }
					]
				  },
				  {
					"nodeType": "YulVariableDeclaration",
					"src": "8925:38:2",
					"value": {
					  "arguments": [
						{
						  "name": "data",
						  "nodeType": "YulIdentifier",
						  "src": "8955:4:2"
						},
						{
						  "kind": "number",
						  "nodeType": "YulLiteral",
						  "src": "8961:1:2",
						  "type": "",
						  "value": "1"
						}
					  ],
					  "functionName": {
						"name": "and",
						"nodeType": "YulIdentifier",
						"src": "8951:3:2"
					  },
					  "nodeType": "YulFunctionCall",
					  "src": "8951:12:2"
					},
					"variables": [
					  {
						"name": "outOfPlaceEncoding",
						"nodeType": "YulTypedName",
						"src": "8929:18:2",
						"type": ""
					  }
					]
				  },
				  {
					"body": {
					  "nodeType": "YulBlock",
					  "src": "9002:51:2",
					  "statements": [
						{
						  "nodeType": "YulAssignment",
						  "src": "9016:27:2",
						  "value": {
							"arguments": [
							  {
								"name": "length",
								"nodeType": "YulIdentifier",
								"src": "9030:6:2"
							  },
							  {
								"kind": "number",
								"nodeType": "YulLiteral",
								"src": "9038:4:2",
								"type": "",
								"value": "0x7f"
							  }
							],
							"functionName": {
							  "name": "and",
							  "nodeType": "YulIdentifier",
							  "src": "9026:3:2"
							},
							"nodeType": "YulFunctionCall",
							"src": "9026:17:2"
						  },
						  "variableNames": [
							{
							  "name": "length",
							  "nodeType": "YulIdentifier",
							  "src": "9016:6:2"
							}
						  ]
						}
					  ]
					},
					"condition": {
					  "arguments": [
						{
						  "name": "outOfPlaceEncoding",
						  "nodeType": "YulIdentifier",
						  "src": "8982:18:2"
						}
					  ],
					  "functionName": {
						"name": "iszero",
						"nodeType": "YulIdentifier",
						"src": "8975:6:2"
					  },
					  "nodeType": "YulFunctionCall",
					  "src": "8975:26:2"
					},
					"nodeType": "YulIf",
					"src": "8972:2:2"
				  },
				  {
					"body": {
					  "nodeType": "YulBlock",
					  "src": "9105:42:2",
					  "statements": [
						{
						  "expression": {
							"arguments": [],
							"functionName": {
							  "name": "panic_error_0x22",
							  "nodeType": "YulIdentifier",
							  "src": "9119:16:2"
							},
							"nodeType": "YulFunctionCall",
							"src": "9119:18:2"
						  },
						  "nodeType": "YulExpressionStatement",
						  "src": "9119:18:2"
						}
					  ]
					},
					"condition": {
					  "arguments": [
						{
						  "name": "outOfPlaceEncoding",
						  "nodeType": "YulIdentifier",
						  "src": "9069:18:2"
						},
						{
						  "arguments": [
							{
							  "name": "length",
							  "nodeType": "YulIdentifier",
							  "src": "9092:6:2"
							},
							{
							  "kind": "number",
							  "nodeType": "YulLiteral",
							  "src": "9100:2:2",
							  "type": "",
							  "value": "32"
							}
						  ],
						  "functionName": {
							"name": "lt",
							"nodeType": "YulIdentifier",
							"src": "9089:2:2"
						  },
						  "nodeType": "YulFunctionCall",
						  "src": "9089:14:2"
						}
					  ],
					  "functionName": {
						"name": "eq",
						"nodeType": "YulIdentifier",
						"src": "9066:2:2"
					  },
					  "nodeType": "YulFunctionCall",
					  "src": "9066:38:2"
					},
					"nodeType": "YulIf",
					"src": "9063:2:2"
				  }
				]
			  },
			  "name": "extract_byte_array_length",
			  "nodeType": "YulFunctionDefinition",
			  "parameters": [
				{
				  "name": "data",
				  "nodeType": "YulTypedName",
				  "src": "8868:4:2",
				  "type": ""
				}
			  ],
			  "returnVariables": [
				{
				  "name": "length",
				  "nodeType": "YulTypedName",
				  "src": "8877:6:2",
				  "type": ""
				}
			  ],
			  "src": "8833:320:2"
			},
			{
			  "body": {
				"nodeType": "YulBlock",
				"src": "9201:189:2",
				"statements": [
				  {
					"nodeType": "YulAssignment",
					"src": "9211:32:2",
					"value": {
					  "arguments": [
						{
						  "name": "value",
						  "nodeType": "YulIdentifier",
						  "src": "9237:5:2"
						}
					  ],
					  "functionName": {
						"name": "cleanup_t_int256",
						"nodeType": "YulIdentifier",
						"src": "9220:16:2"
					  },
					  "nodeType": "YulFunctionCall",
					  "src": "9220:23:2"
					},
					"variableNames": [
					  {
						"name": "value",
						"nodeType": "YulIdentifier",
						"src": "9211:5:2"
					  }
					]
				  },
				  {
					"body": {
					  "nodeType": "YulBlock",
					  "src": "9333:22:2",
					  "statements": [
						{
						  "expression": {
							"arguments": [],
							"functionName": {
							  "name": "panic_error_0x11",
							  "nodeType": "YulIdentifier",
							  "src": "9335:16:2"
							},
							"nodeType": "YulFunctionCall",
							"src": "9335:18:2"
						  },
						  "nodeType": "YulExpressionStatement",
						  "src": "9335:18:2"
						}
					  ]
					},
					"condition": {
					  "arguments": [
						{
						  "name": "value",
						  "nodeType": "YulIdentifier",
						  "src": "9258:5:2"
						},
						{
						  "kind": "number",
						  "nodeType": "YulLiteral",
						  "src": "9265:66:2",
						  "type": "",
						  "value": "0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
						}
					  ],
					  "functionName": {
						"name": "eq",
						"nodeType": "YulIdentifier",
						"src": "9255:2:2"
					  },
					  "nodeType": "YulFunctionCall",
					  "src": "9255:77:2"
					},
					"nodeType": "YulIf",
					"src": "9252:2:2"
				  },
				  {
					"nodeType": "YulAssignment",
					"src": "9364:20:2",
					"value": {
					  "arguments": [
						{
						  "name": "value",
						  "nodeType": "YulIdentifier",
						  "src": "9375:5:2"
						},
						{
						  "kind": "number",
						  "nodeType": "YulLiteral",
						  "src": "9382:1:2",
						  "type": "",
						  "value": "1"
						}
					  ],
					  "functionName": {
						"name": "add",
						"nodeType": "YulIdentifier",
						"src": "9371:3:2"
					  },
					  "nodeType": "YulFunctionCall",
					  "src": "9371:13:2"
					},
					"variableNames": [
					  {
						"name": "ret",
						"nodeType": "YulIdentifier",
						"src": "9364:3:2"
					  }
					]
				  }
				]
			  },
			  "name": "increment_t_int256",
			  "nodeType": "YulFunctionDefinition",
			  "parameters": [
				{
				  "name": "value",
				  "nodeType": "YulTypedName",
				  "src": "9187:5:2",
				  "type": ""
				}
			  ],
			  "returnVariables": [
				{
				  "name": "ret",
				  "nodeType": "YulTypedName",
				  "src": "9197:3:2",
				  "type": ""
				}
			  ],
			  "src": "9159:231:2"
			},
			{
			  "body": {
				"nodeType": "YulBlock",
				"src": "9424:152:2",
				"statements": [
				  {
					"expression": {
					  "arguments": [
						{
						  "kind": "number",
						  "nodeType": "YulLiteral",
						  "src": "9441:1:2",
						  "type": "",
						  "value": "0"
						},
						{
						  "kind": "number",
						  "nodeType": "YulLiteral",
						  "src": "9444:77:2",
						  "type": "",
						  "value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
						}
					  ],
					  "functionName": {
						"name": "mstore",
						"nodeType": "YulIdentifier",
						"src": "9434:6:2"
					  },
					  "nodeType": "YulFunctionCall",
					  "src": "9434:88:2"
					},
					"nodeType": "YulExpressionStatement",
					"src": "9434:88:2"
				  },
				  {
					"expression": {
					  "arguments": [
						{
						  "kind": "number",
						  "nodeType": "YulLiteral",
						  "src": "9538:1:2",
						  "type": "",
						  "value": "4"
						},
						{
						  "kind": "number",
						  "nodeType": "YulLiteral",
						  "src": "9541:4:2",
						  "type": "",
						  "value": "0x11"
						}
					  ],
					  "functionName": {
						"name": "mstore",
						"nodeType": "YulIdentifier",
						"src": "9531:6:2"
					  },
					  "nodeType": "YulFunctionCall",
					  "src": "9531:15:2"
					},
					"nodeType": "YulExpressionStatement",
					"src": "9531:15:2"
				  },
				  {
					"expression": {
					  "arguments": [
						{
						  "kind": "number",
						  "nodeType": "YulLiteral",
						  "src": "9562:1:2",
						  "type": "",
						  "value": "0"
						},
						{
						  "kind": "number",
						  "nodeType": "YulLiteral",
						  "src": "9565:4:2",
						  "type": "",
						  "value": "0x24"
						}
					  ],
					  "functionName": {
						"name": "revert",
						"nodeType": "YulIdentifier",
						"src": "9555:6:2"
					  },
					  "nodeType": "YulFunctionCall",
					  "src": "9555:15:2"
					},
					"nodeType": "YulExpressionStatement",
					"src": "9555:15:2"
				  }
				]
			  },
			  "name": "panic_error_0x11",
			  "nodeType": "YulFunctionDefinition",
			  "src": "9396:180:2"
			},
			{
			  "body": {
				"nodeType": "YulBlock",
				"src": "9610:152:2",
				"statements": [
				  {
					"expression": {
					  "arguments": [
						{
						  "kind": "number",
						  "nodeType": "YulLiteral",
						  "src": "9627:1:2",
						  "type": "",
						  "value": "0"
						},
						{
						  "kind": "number",
						  "nodeType": "YulLiteral",
						  "src": "9630:77:2",
						  "type": "",
						  "value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
						}
					  ],
					  "functionName": {
						"name": "mstore",
						"nodeType": "YulIdentifier",
						"src": "9620:6:2"
					  },
					  "nodeType": "YulFunctionCall",
					  "src": "9620:88:2"
					},
					"nodeType": "YulExpressionStatement",
					"src": "9620:88:2"
				  },
				  {
					"expression": {
					  "arguments": [
						{
						  "kind": "number",
						  "nodeType": "YulLiteral",
						  "src": "9724:1:2",
						  "type": "",
						  "value": "4"
						},
						{
						  "kind": "number",
						  "nodeType": "YulLiteral",
						  "src": "9727:4:2",
						  "type": "",
						  "value": "0x21"
						}
					  ],
					  "functionName": {
						"name": "mstore",
						"nodeType": "YulIdentifier",
						"src": "9717:6:2"
					  },
					  "nodeType": "YulFunctionCall",
					  "src": "9717:15:2"
					},
					"nodeType": "YulExpressionStatement",
					"src": "9717:15:2"
				  },
				  {
					"expression": {
					  "arguments": [
						{
						  "kind": "number",
						  "nodeType": "YulLiteral",
						  "src": "9748:1:2",
						  "type": "",
						  "value": "0"
						},
						{
						  "kind": "number",
						  "nodeType": "YulLiteral",
						  "src": "9751:4:2",
						  "type": "",
						  "value": "0x24"
						}
					  ],
					  "functionName": {
						"name": "revert",
						"nodeType": "YulIdentifier",
						"src": "9741:6:2"
					  },
					  "nodeType": "YulFunctionCall",
					  "src": "9741:15:2"
					},
					"nodeType": "YulExpressionStatement",
					"src": "9741:15:2"
				  }
				]
			  },
			  "name": "panic_error_0x21",
			  "nodeType": "YulFunctionDefinition",
			  "src": "9582:180:2"
			},
			{
			  "body": {
				"nodeType": "YulBlock",
				"src": "9796:152:2",
				"statements": [
				  {
					"expression": {
					  "arguments": [
						{
						  "kind": "number",
						  "nodeType": "YulLiteral",
						  "src": "9813:1:2",
						  "type": "",
						  "value": "0"
						},
						{
						  "kind": "number",
						  "nodeType": "YulLiteral",
						  "src": "9816:77:2",
						  "type": "",
						  "value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
						}
					  ],
					  "functionName": {
						"name": "mstore",
						"nodeType": "YulIdentifier",
						"src": "9806:6:2"
					  },
					  "nodeType": "YulFunctionCall",
					  "src": "9806:88:2"
					},
					"nodeType": "YulExpressionStatement",
					"src": "9806:88:2"
				  },
				  {
					"expression": {
					  "arguments": [
						{
						  "kind": "number",
						  "nodeType": "YulLiteral",
						  "src": "9910:1:2",
						  "type": "",
						  "value": "4"
						},
						{
						  "kind": "number",
						  "nodeType": "YulLiteral",
						  "src": "9913:4:2",
						  "type": "",
						  "value": "0x22"
						}
					  ],
					  "functionName": {
						"name": "mstore",
						"nodeType": "YulIdentifier",
						"src": "9903:6:2"
					  },
					  "nodeType": "YulFunctionCall",
					  "src": "9903:15:2"
					},
					"nodeType": "YulExpressionStatement",
					"src": "9903:15:2"
				  },
				  {
					"expression": {
					  "arguments": [
						{
						  "kind": "number",
						  "nodeType": "YulLiteral",
						  "src": "9934:1:2",
						  "type": "",
						  "value": "0"
						},
						{
						  "kind": "number",
						  "nodeType": "YulLiteral",
						  "src": "9937:4:2",
						  "type": "",
						  "value": "0x24"
						}
					  ],
					  "functionName": {
						"name": "revert",
						"nodeType": "YulIdentifier",
						"src": "9927:6:2"
					  },
					  "nodeType": "YulFunctionCall",
					  "src": "9927:15:2"
					},
					"nodeType": "YulExpressionStatement",
					"src": "9927:15:2"
				  }
				]
			  },
			  "name": "panic_error_0x22",
			  "nodeType": "YulFunctionDefinition",
			  "src": "9768:180:2"
			},
			{
			  "body": {
				"nodeType": "YulBlock",
				"src": "9982:152:2",
				"statements": [
				  {
					"expression": {
					  "arguments": [
						{
						  "kind": "number",
						  "nodeType": "YulLiteral",
						  "src": "9999:1:2",
						  "type": "",
						  "value": "0"
						},
						{
						  "kind": "number",
						  "nodeType": "YulLiteral",
						  "src": "10002:77:2",
						  "type": "",
						  "value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
						}
					  ],
					  "functionName": {
						"name": "mstore",
						"nodeType": "YulIdentifier",
						"src": "9992:6:2"
					  },
					  "nodeType": "YulFunctionCall",
					  "src": "9992:88:2"
					},
					"nodeType": "YulExpressionStatement",
					"src": "9992:88:2"
				  },
				  {
					"expression": {
					  "arguments": [
						{
						  "kind": "number",
						  "nodeType": "YulLiteral",
						  "src": "10096:1:2",
						  "type": "",
						  "value": "4"
						},
						{
						  "kind": "number",
						  "nodeType": "YulLiteral",
						  "src": "10099:4:2",
						  "type": "",
						  "value": "0x41"
						}
					  ],
					  "functionName": {
						"name": "mstore",
						"nodeType": "YulIdentifier",
						"src": "10089:6:2"
					  },
					  "nodeType": "YulFunctionCall",
					  "src": "10089:15:2"
					},
					"nodeType": "YulExpressionStatement",
					"src": "10089:15:2"
				  },
				  {
					"expression": {
					  "arguments": [
						{
						  "kind": "number",
						  "nodeType": "YulLiteral",
						  "src": "10120:1:2",
						  "type": "",
						  "value": "0"
						},
						{
						  "kind": "number",
						  "nodeType": "YulLiteral",
						  "src": "10123:4:2",
						  "type": "",
						  "value": "0x24"
						}
					  ],
					  "functionName": {
						"name": "revert",
						"nodeType": "YulIdentifier",
						"src": "10113:6:2"
					  },
					  "nodeType": "YulFunctionCall",
					  "src": "10113:15:2"
					},
					"nodeType": "YulExpressionStatement",
					"src": "10113:15:2"
				  }
				]
			  },
			  "name": "panic_error_0x41",
			  "nodeType": "YulFunctionDefinition",
			  "src": "9954:180:2"
			},
			{
			  "body": {
				"nodeType": "YulBlock",
				"src": "10188:54:2",
				"statements": [
				  {
					"nodeType": "YulAssignment",
					"src": "10198:38:2",
					"value": {
					  "arguments": [
						{
						  "arguments": [
							{
							  "name": "value",
							  "nodeType": "YulIdentifier",
							  "src": "10216:5:2"
							},
							{
							  "kind": "number",
							  "nodeType": "YulLiteral",
							  "src": "10223:2:2",
							  "type": "",
							  "value": "31"
							}
						  ],
						  "functionName": {
							"name": "add",
							"nodeType": "YulIdentifier",
							"src": "10212:3:2"
						  },
						  "nodeType": "YulFunctionCall",
						  "src": "10212:14:2"
						},
						{
						  "arguments": [
							{
							  "kind": "number",
							  "nodeType": "YulLiteral",
							  "src": "10232:2:2",
							  "type": "",
							  "value": "31"
							}
						  ],
						  "functionName": {
							"name": "not",
							"nodeType": "YulIdentifier",
							"src": "10228:3:2"
						  },
						  "nodeType": "YulFunctionCall",
						  "src": "10228:7:2"
						}
					  ],
					  "functionName": {
						"name": "and",
						"nodeType": "YulIdentifier",
						"src": "10208:3:2"
					  },
					  "nodeType": "YulFunctionCall",
					  "src": "10208:28:2"
					},
					"variableNames": [
					  {
						"name": "result",
						"nodeType": "YulIdentifier",
						"src": "10198:6:2"
					  }
					]
				  }
				]
			  },
			  "name": "round_up_to_mul_of_32",
			  "nodeType": "YulFunctionDefinition",
			  "parameters": [
				{
				  "name": "value",
				  "nodeType": "YulTypedName",
				  "src": "10171:5:2",
				  "type": ""
				}
			  ],
			  "returnVariables": [
				{
				  "name": "result",
				  "nodeType": "YulTypedName",
				  "src": "10181:6:2",
				  "type": ""
				}
			  ],
			  "src": "10140:102:2"
			},
			{
			  "body": {
				"nodeType": "YulBlock",
				"src": "10306:62:2",
				"statements": [
				  {
					"body": {
					  "nodeType": "YulBlock",
					  "src": "10340:22:2",
					  "statements": [
						{
						  "expression": {
							"arguments": [],
							"functionName": {
							  "name": "panic_error_0x21",
							  "nodeType": "YulIdentifier",
							  "src": "10342:16:2"
							},
							"nodeType": "YulFunctionCall",
							"src": "10342:18:2"
						  },
						  "nodeType": "YulExpressionStatement",
						  "src": "10342:18:2"
						}
					  ]
					},
					"condition": {
					  "arguments": [
						{
						  "arguments": [
							{
							  "name": "value",
							  "nodeType": "YulIdentifier",
							  "src": "10329:5:2"
							},
							{
							  "kind": "number",
							  "nodeType": "YulLiteral",
							  "src": "10336:1:2",
							  "type": "",
							  "value": "3"
							}
						  ],
						  "functionName": {
							"name": "lt",
							"nodeType": "YulIdentifier",
							"src": "10326:2:2"
						  },
						  "nodeType": "YulFunctionCall",
						  "src": "10326:12:2"
						}
					  ],
					  "functionName": {
						"name": "iszero",
						"nodeType": "YulIdentifier",
						"src": "10319:6:2"
					  },
					  "nodeType": "YulFunctionCall",
					  "src": "10319:20:2"
					},
					"nodeType": "YulIf",
					"src": "10316:2:2"
				  }
				]
			  },
			  "name": "validator_assert_t_enum$_ProjectState_$48",
			  "nodeType": "YulFunctionDefinition",
			  "parameters": [
				{
				  "name": "value",
				  "nodeType": "YulTypedName",
				  "src": "10299:5:2",
				  "type": ""
				}
			  ],
			  "src": "10248:120:2"
			},
			{
			  "body": {
				"nodeType": "YulBlock",
				"src": "10433:62:2",
				"statements": [
				  {
					"body": {
					  "nodeType": "YulBlock",
					  "src": "10467:22:2",
					  "statements": [
						{
						  "expression": {
							"arguments": [],
							"functionName": {
							  "name": "panic_error_0x21",
							  "nodeType": "YulIdentifier",
							  "src": "10469:16:2"
							},
							"nodeType": "YulFunctionCall",
							"src": "10469:18:2"
						  },
						  "nodeType": "YulExpressionStatement",
						  "src": "10469:18:2"
						}
					  ]
					},
					"condition": {
					  "arguments": [
						{
						  "arguments": [
							{
							  "name": "value",
							  "nodeType": "YulIdentifier",
							  "src": "10456:5:2"
							},
							{
							  "kind": "number",
							  "nodeType": "YulLiteral",
							  "src": "10463:1:2",
							  "type": "",
							  "value": "5"
							}
						  ],
						  "functionName": {
							"name": "lt",
							"nodeType": "YulIdentifier",
							"src": "10453:2:2"
						  },
						  "nodeType": "YulFunctionCall",
						  "src": "10453:12:2"
						}
					  ],
					  "functionName": {
						"name": "iszero",
						"nodeType": "YulIdentifier",
						"src": "10446:6:2"
					  },
					  "nodeType": "YulFunctionCall",
					  "src": "10446:20:2"
					},
					"nodeType": "YulIf",
					"src": "10443:2:2"
				  }
				]
			  },
			  "name": "validator_assert_t_enum$_ScheduleState_$44",
			  "nodeType": "YulFunctionDefinition",
			  "parameters": [
				{
				  "name": "value",
				  "nodeType": "YulTypedName",
				  "src": "10426:5:2",
				  "type": ""
				}
			  ],
			  "src": "10374:121:2"
			},
			{
			  "body": {
				"nodeType": "YulBlock",
				"src": "10543:78:2",
				"statements": [
				  {
					"body": {
					  "nodeType": "YulBlock",
					  "src": "10599:16:2",
					  "statements": [
						{
						  "expression": {
							"arguments": [
							  {
								"kind": "number",
								"nodeType": "YulLiteral",
								"src": "10608:1:2",
								"type": "",
								"value": "0"
							  },
							  {
								"kind": "number",
								"nodeType": "YulLiteral",
								"src": "10611:1:2",
								"type": "",
								"value": "0"
							  }
							],
							"functionName": {
							  "name": "revert",
							  "nodeType": "YulIdentifier",
							  "src": "10601:6:2"
							},
							"nodeType": "YulFunctionCall",
							"src": "10601:12:2"
						  },
						  "nodeType": "YulExpressionStatement",
						  "src": "10601:12:2"
						}
					  ]
					},
					"condition": {
					  "arguments": [
						{
						  "arguments": [
							{
							  "name": "value",
							  "nodeType": "YulIdentifier",
							  "src": "10566:5:2"
							},
							{
							  "arguments": [
								{
								  "name": "value",
								  "nodeType": "YulIdentifier",
								  "src": "10590:5:2"
								}
							  ],
							  "functionName": {
								"name": "cleanup_t_int256",
								"nodeType": "YulIdentifier",
								"src": "10573:16:2"
							  },
							  "nodeType": "YulFunctionCall",
							  "src": "10573:23:2"
							}
						  ],
						  "functionName": {
							"name": "eq",
							"nodeType": "YulIdentifier",
							"src": "10563:2:2"
						  },
						  "nodeType": "YulFunctionCall",
						  "src": "10563:34:2"
						}
					  ],
					  "functionName": {
						"name": "iszero",
						"nodeType": "YulIdentifier",
						"src": "10556:6:2"
					  },
					  "nodeType": "YulFunctionCall",
					  "src": "10556:42:2"
					},
					"nodeType": "YulIf",
					"src": "10553:2:2"
				  }
				]
			  },
			  "name": "validator_revert_t_int256",
			  "nodeType": "YulFunctionDefinition",
			  "parameters": [
				{
				  "name": "value",
				  "nodeType": "YulTypedName",
				  "src": "10536:5:2",
				  "type": ""
				}
			  ],
			  "src": "10501:120:2"
			},
			{
			  "body": {
				"nodeType": "YulBlock",
				"src": "10670:79:2",
				"statements": [
				  {
					"body": {
					  "nodeType": "YulBlock",
					  "src": "10727:16:2",
					  "statements": [
						{
						  "expression": {
							"arguments": [
							  {
								"kind": "number",
								"nodeType": "YulLiteral",
								"src": "10736:1:2",
								"type": "",
								"value": "0"
							  },
							  {
								"kind": "number",
								"nodeType": "YulLiteral",
								"src": "10739:1:2",
								"type": "",
								"value": "0"
							  }
							],
							"functionName": {
							  "name": "revert",
							  "nodeType": "YulIdentifier",
							  "src": "10729:6:2"
							},
							"nodeType": "YulFunctionCall",
							"src": "10729:12:2"
						  },
						  "nodeType": "YulExpressionStatement",
						  "src": "10729:12:2"
						}
					  ]
					},
					"condition": {
					  "arguments": [
						{
						  "arguments": [
							{
							  "name": "value",
							  "nodeType": "YulIdentifier",
							  "src": "10693:5:2"
							},
							{
							  "arguments": [
								{
								  "name": "value",
								  "nodeType": "YulIdentifier",
								  "src": "10718:5:2"
								}
							  ],
							  "functionName": {
								"name": "cleanup_t_uint256",
								"nodeType": "YulIdentifier",
								"src": "10700:17:2"
							  },
							  "nodeType": "YulFunctionCall",
							  "src": "10700:24:2"
							}
						  ],
						  "functionName": {
							"name": "eq",
							"nodeType": "YulIdentifier",
							"src": "10690:2:2"
						  },
						  "nodeType": "YulFunctionCall",
						  "src": "10690:35:2"
						}
					  ],
					  "functionName": {
						"name": "iszero",
						"nodeType": "YulIdentifier",
						"src": "10683:6:2"
					  },
					  "nodeType": "YulFunctionCall",
					  "src": "10683:43:2"
					},
					"nodeType": "YulIf",
					"src": "10680:2:2"
				  }
				]
			  },
			  "name": "validator_revert_t_uint256",
			  "nodeType": "YulFunctionDefinition",
			  "parameters": [
				{
				  "name": "value",
				  "nodeType": "YulTypedName",
				  "src": "10663:5:2",
				  "type": ""
				}
			  ],
			  "src": "10627:122:2"
			}
		  ]
		},
		"contents": "{\n\n    function abi_decode_available_length_t_string_memory_ptr(src, length, end) -> array {\n        array := allocateMemory(array_allocation_size_t_string_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert(0, 0) }\n        copy_calldata_to_memory(src, dst, length)\n    }\n\n    function abi_decode_t_int256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_int256(value)\n    }\n\n    // string\n    function abi_decode_t_string_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_string_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_int256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_int256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_string_memory_ptrt_string_memory_ptrt_uint256(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n\n        {\n\n            let offset := calldataload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n\n            value0 := abi_decode_t_string_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 32))\n            if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n\n            value1 := abi_decode_t_string_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_payable_to_t_address_payable_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address_payable(value))\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_t_enum$_ProjectState_$48_to_t_uint8_fromStack(value, pos) {\n        mstore(pos, convert_t_enum$_ProjectState_$48_to_t_uint8(value))\n    }\n\n    function abi_encode_t_enum$_ScheduleState_$44_to_t_uint8_fromStack(value, pos) {\n        mstore(pos, convert_t_enum$_ScheduleState_$44_to_t_uint8(value))\n    }\n\n    function abi_encode_t_int256_to_t_int256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_int256(value))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_address_payable__to_t_address_payable__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_payable_to_t_address_payable_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_enum$_ProjectState_$48__to_t_uint8__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_enum$_ProjectState_$48_to_t_uint8_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_int256__to_t_int256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_int256_to_t_int256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_int256_t_uint256__to_t_int256_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_int256_to_t_int256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr_t_string_memory_ptr_t_uint256_t_enum$_ScheduleState_$44__to_t_string_memory_ptr_t_string_memory_ptr_t_uint256_t_uint8__fromStack_reversed(headStart , value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 128)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n        mstore(add(headStart, 32), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value1,  tail)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_enum$_ScheduleState_$44_to_t_uint8_fromStack(value3,  add(headStart, 96))\n\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function allocateMemory(size) -> memPtr {\n        memPtr := mload(64)\n        let newFreePtr := add(memPtr, size)\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function array_allocation_size_t_string_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        // round up\n        size := and(add(length, 0x1f), not(0x1f))\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function checked_sub_t_int256(x, y) -> diff {\n        x := cleanup_t_int256(x)\n        y := cleanup_t_int256(y)\n\n        // underflow, if y >= 0 and x < (minValue + y)\n        if and(iszero(slt(y, 0)), slt(x, add(0x8000000000000000000000000000000000000000000000000000000000000000, y))) { panic_error_0x11() }\n        // overflow, if y < 0 and x > (maxValue + y)\n        if and(slt(y, 0), sgt(x, add(0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff, y))) { panic_error_0x11() }\n\n        diff := sub(x, y)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_address_payable(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_enum$_ProjectState_$48(value) -> cleaned {\n        cleaned := value validator_assert_t_enum$_ProjectState_$48(value)\n    }\n\n    function cleanup_t_enum$_ScheduleState_$44(value) -> cleaned {\n        cleaned := value validator_assert_t_enum$_ScheduleState_$44(value)\n    }\n\n    function cleanup_t_int256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function convert_t_enum$_ProjectState_$48_to_t_uint8(value) -> converted {\n        converted := cleanup_t_enum$_ProjectState_$48(value)\n    }\n\n    function convert_t_enum$_ScheduleState_$44_to_t_uint8(value) -> converted {\n        converted := cleanup_t_enum$_ScheduleState_$44(value)\n    }\n\n    function copy_calldata_to_memory(src, dst, length) {\n        calldatacopy(dst, src, length)\n        // clear end\n        mstore(add(dst, length), 0)\n    }\n\n    function copy_memory_to_memory(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        if gt(i, length)\n        {\n            // clear end\n            mstore(add(dst, length), 0)\n        }\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function increment_t_int256(value) -> ret {\n        value := cleanup_t_int256(value)\n        if eq(value, 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x21() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x21)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function validator_assert_t_enum$_ProjectState_$48(value) {\n        if iszero(lt(value, 3)) { panic_error_0x21() }\n    }\n\n    function validator_assert_t_enum$_ScheduleState_$44(value) {\n        if iszero(lt(value, 5)) { panic_error_0x21() }\n    }\n\n    function validator_revert_t_int256(value) {\n        if iszero(eq(value, cleanup_t_int256(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n}\n",
		"id": 2,
		"language": "Yul",
		"name": "#utility.yul"
	  }
	],
	"sourceMap": "204:4348:1:-:0;;;538:1;507:32;;1929:121;;;;;;;;;;1985:10;1957:17;;:39;;;;;;;;;;;;;;;;;;2021:22;2006:12;;:37;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;204:4348;;;;;;",
	"deployedSourceMap": "204:4348:1:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2775:364;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;545:40;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4417:133;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;591:28;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3464:310;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;625:32;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2060:473;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;507:32;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3149:309;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;668:51;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;3784:443;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;4237:170;;;;;;;;;;;;;:::i;:::-;;2543:222;;;;;;;;;;;;;:::i;:::-;;2775:364;2867:21;1149:6;1133:22;;;;;;;;;;;;;;;;:12;;;;;;;;;;;:22;;;;;;;;;;;;;;;;;1125:31;;;;;;2914:11:::1;2927:21;1288:1;1271:14;;:18;;;;:::i;:::-;1256:11;:33;;1255:92;;;;;1341:6;1294:53;;;;;;;;;;;;;;;;:16;:29;1311:11;1294:29;;;;;;;;;;;:43;;;;;;;;;;;;:53;;;;;;;;;;;;;;;;;1255:92;1247:101;;;::::0;::::1;;2971:11:::2;2984:9;1488:8;1449:16;:29;1466:11;1449:29;;;;;;;;;;;:35;;;:47;1441:56;;;::::0;::::2;;926:13:::3;;;;;;;;;;;912:27;;:10;:27;;;904:36;;;::::0;::::3;;3074:20:::4;3028:16;:29;3045:11;3028:29;;;;;;;;;;;:43;;;:66;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3109:23;3120:11;3109:23;;;;;;:::i;:::-;;;;;;;;1358:1:::2;;1160::::1;;2775:364:::0;;:::o;545:40::-;;;;;;;;;;;;;:::o;4417:133::-;4484:15;4522:21;4515:28;;4417:133;:::o;591:28::-;;;;;;;;;;;;;:::o;3464:310::-;3543:21;1149:6;1133:22;;;;;;;;;;;;;;;;:12;;;;;;;;;;;:22;;;;;;;;;;;;;;;;;1125:31;;;;;;3590:11:::1;3603:21;1288:1;1271:14;;:18;;;;:::i;:::-;1256:11;:33;;1255:92;;;;;1341:6;1294:53;;;;;;;;;;;;;;;;:16;:29;1311:11;1294:29;;;;;;;;;;;:43;;;;;;;;;;;;:53;;;;;;;;;;;;;;;;;1255:92;1247:101;;;::::0;::::1;;926:13:::2;;;;;;;;;;;912:27;;:10;:27;;;904:36;;;::::0;::::2;;3705:22:::3;3659:16:::0;:29:::3;3676:11;3659:29;;;;;;;;;;;:43;;;:68;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3742:25;3755:11;3742:25;;;;;;:::i;:::-;;;;;;;;1160:1:::1;;3464:310:::0;;:::o;625:32::-;;;;;;;;;;;;;:::o;2060:473::-;2189:22;1149:6;1133:22;;;;;;;;;;;;;;;;:12;;;;;;;;;;;:22;;;;;;;;;;;;;;;;;1125:31;;;;;;848:17:::1;;;;;;;;;;;834:31;;:10;:31;;;826:40;;;::::0;::::1;;2250:17:::2;;:::i;:::-;2291:10;2277:1;:11;;:24;;;;2327:12;2311:1;:13;;:28;;;;2367:21;2349:1;:15;;:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::2;2408:6;2398:1;:7;;:16;;;::::0;::::2;2459:1;2424:16;:32;2441:14:::0;::::2;2424:32;;;;;;;;;;;:36;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2470:14;::::0;:16:::2;;;;;;;;;:::i;:::-;;;;;;2501:25;2515:10;2501:25;;;;;;:::i;:::-;;;;;;;;870:1;2060:473:::0;;;;:::o;507:32::-;;;;:::o;3149:309::-;3226:21;1149:6;1133:22;;;;;;;;;;;;;;;;:12;;;;;;;;;;;:22;;;;;;;;;;;;;;;;;1125:31;;;;;;3273:11:::1;3286:20;1288:1:::0;1271:14:::1;;:18;;;;:::i;:::-;1256:11;:33;;1255:92;;;;;1341:6;1294:53;;;;;;;;;;;;;;;;:16;:29;1311:11;1294:29;;;;;;;;;;;:43;;;;;;;;;;;;:53;;;;;;;;;;;;;;;;;1255:92;1247:101;;;::::0;::::1;;848:17:::2;;;;;;;;;;;834:31;;:10;:31;;;826:40;;;::::0;::::2;;3391:21:::3;3345:16;:29;3362:11;3345:29;;;;;;;;;;;:43;;;:67;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3427:24;3439:11;3427:24;;;;;;:::i;:::-;;;;;;;;1160:1:::1;;3149:309:::0;;:::o;668:51::-;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;3784:443::-;3880:21;1149:6;1133:22;;;;;;;;;;;;;;;;:12;;;;;;;;;;;:22;;;;;;;;;;;;;;;;;1125:31;;;;;;3927:11:::1;3940:22;1288:1;1271:14;;:18;;;;:::i;:::-;1256:11;:33;;1255:92;;;;;1341:6;1294:53;;;;;;;;;;;;;;;;:16;:29;1311:11;1294:29;;;;;;;;;;;:43;;;;;;;;;;;;:53;;;;;;;;;;;;;;;;;1255:92;1247:101;;;::::0;::::1;;848:17:::2;;;;;;;;;;;834:31;;:10;:31;;;826:40;;;::::0;::::2;;4001:17:::3;;;;;;;;;;;:26;;:63;4028:16;:29;4045:11;4028:29;;;;;;;;;;;:35;;;4001:63;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::3;;;;;;4120:22;4074:16;:29;4091:11;4074:29;;;;;;;;;;;:43;;;:68;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4157:63;4171:11;4184:16;:29;4201:11;4184:29;;;;;;;;;;;:35;;;4157:63;;;;;;;:::i;:::-;;;;;;;;1160:1:::1;;3784:443:::0;;:::o;4237:170::-;1010:13;;;;;;;;;;;996:27;;:10;:27;;;:62;;;;1041:17;;;;;;;;;;;1027:31;;:10;:31;;;996:62;988:71;;;;;;1586:1:::1;1561:21;:26;1553:35;;;::::0;::::1;;4352:19:::2;4337:12:::0;::::2;:34;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4386:14;;;;;;;;;;4237:170::o:0;2543:222::-;2606:22;1149:6;1133:22;;;;;;;;;;;;;;;;:12;;;;;;;;;;;:22;;;;;;;;;;;;;;;;;1125:31;;;;;;2660:10:::1;2644:13;;:26;;;;;;;;;;;;;;;;;;2695:21;2680:12;;:36;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2731:27;2747:10;2731:27;;;;;;:::i;:::-;;;;;;;;2543:222:::0;:::o;-1:-1:-1:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;:::o;7:344:2:-;;110:65;125:49;167:6;125:49;:::i;:::-;110:65;:::i;:::-;101:74;;198:6;191:5;184:21;236:4;229:5;225:16;274:3;265:6;260:3;256:16;253:25;250:2;;;291:1;288;281:12;250:2;304:41;338:6;333:3;328;304:41;:::i;:::-;91:260;;;;;;:::o;357:137::-;;440:6;427:20;418:29;;456:32;482:5;456:32;:::i;:::-;408:86;;;;:::o;514:273::-;;619:3;612:4;604:6;600:17;596:27;586:2;;637:1;634;627:12;586:2;677:6;664:20;702:79;777:3;769:6;762:4;754:6;750:17;702:79;:::i;:::-;693:88;;576:211;;;;;:::o;793:139::-;;877:6;864:20;855:29;;893:33;920:5;893:33;:::i;:::-;845:87;;;;:::o;938:260::-;;1045:2;1033:9;1024:7;1020:23;1016:32;1013:2;;;1061:1;1058;1051:12;1013:2;1104:1;1129:52;1173:7;1164:6;1153:9;1149:22;1129:52;:::i;:::-;1119:62;;1075:116;1003:195;;;;:::o;1204:778::-;;;;1366:2;1354:9;1345:7;1341:23;1337:32;1334:2;;;1382:1;1379;1372:12;1334:2;1453:1;1442:9;1438:17;1425:31;1483:18;1475:6;1472:30;1469:2;;;1515:1;1512;1505:12;1469:2;1543:63;1598:7;1589:6;1578:9;1574:22;1543:63;:::i;:::-;1533:73;;1396:220;1683:2;1672:9;1668:18;1655:32;1714:18;1706:6;1703:30;1700:2;;;1746:1;1743;1736:12;1700:2;1774:63;1829:7;1820:6;1809:9;1805:22;1774:63;:::i;:::-;1764:73;;1626:221;1886:2;1912:53;1957:7;1948:6;1937:9;1933:22;1912:53;:::i;:::-;1902:63;;1857:118;1324:658;;;;;:::o;1988:142::-;2091:32;2117:5;2091:32;:::i;:::-;2086:3;2079:45;2069:61;;:::o;2136:118::-;2223:24;2241:5;2223:24;:::i;:::-;2218:3;2211:37;2201:53;;:::o;2260:157::-;2360:50;2404:5;2360:50;:::i;:::-;2355:3;2348:63;2338:79;;:::o;2423:159::-;2524:51;2569:5;2524:51;:::i;:::-;2519:3;2512:64;2502:80;;:::o;2588:115::-;2673:23;2690:5;2673:23;:::i;:::-;2668:3;2661:36;2651:52;;:::o;2709:364::-;;2825:39;2858:5;2825:39;:::i;:::-;2880:71;2944:6;2939:3;2880:71;:::i;:::-;2873:78;;2960:52;3005:6;3000:3;2993:4;2986:5;2982:16;2960:52;:::i;:::-;3037:29;3059:6;3037:29;:::i;:::-;3032:3;3028:39;3021:46;;2801:272;;;;;:::o;3079:118::-;3166:24;3184:5;3166:24;:::i;:::-;3161:3;3154:37;3144:53;;:::o;3203:222::-;;3334:2;3323:9;3319:18;3311:26;;3347:71;3415:1;3404:9;3400:17;3391:6;3347:71;:::i;:::-;3301:124;;;;:::o;3431:254::-;;3578:2;3567:9;3563:18;3555:26;;3591:87;3675:1;3664:9;3660:17;3651:6;3591:87;:::i;:::-;3545:140;;;;:::o;3691:248::-;;3835:2;3824:9;3820:18;3812:26;;3848:84;3929:1;3918:9;3914:17;3905:6;3848:84;:::i;:::-;3802:137;;;;:::o;3945:218::-;;4074:2;4063:9;4059:18;4051:26;;4087:69;4153:1;4142:9;4138:17;4129:6;4087:69;:::i;:::-;4041:122;;;;:::o;4169:328::-;;4326:2;4315:9;4311:18;4303:26;;4339:69;4405:1;4394:9;4390:17;4381:6;4339:69;:::i;:::-;4418:72;4486:2;4475:9;4471:18;4462:6;4418:72;:::i;:::-;4293:204;;;;;:::o;4503:313::-;;4654:2;4643:9;4639:18;4631:26;;4703:9;4697:4;4693:20;4689:1;4678:9;4674:17;4667:47;4731:78;4804:4;4795:6;4731:78;:::i;:::-;4723:86;;4621:195;;;;:::o;4822:763::-;;5091:3;5080:9;5076:19;5068:27;;5141:9;5135:4;5131:20;5127:1;5116:9;5112:17;5105:47;5169:78;5242:4;5233:6;5169:78;:::i;:::-;5161:86;;5294:9;5288:4;5284:20;5279:2;5268:9;5264:18;5257:48;5322:78;5395:4;5386:6;5322:78;:::i;:::-;5314:86;;5410:72;5478:2;5467:9;5463:18;5454:6;5410:72;:::i;:::-;5492:86;5574:2;5563:9;5559:18;5550:6;5492:86;:::i;:::-;5058:527;;;;;;;:::o;5591:222::-;;5722:2;5711:9;5707:18;5699:26;;5735:71;5803:1;5792:9;5788:17;5779:6;5735:71;:::i;:::-;5689:124;;;;:::o;5819:283::-;;5885:2;5879:9;5869:19;;5927:4;5919:6;5915:17;6034:6;6022:10;6019:22;5998:18;5986:10;5983:34;5980:62;5977:2;;;6045:18;;:::i;:::-;5977:2;6085:10;6081:2;6074:22;5859:243;;;;:::o;6108:332::-;;6260:18;6252:6;6249:30;6246:2;;;6282:18;;:::i;:::-;6246:2;6367:4;6363:9;6356:4;6348:6;6344:17;6340:33;6332:41;;6428:4;6422;6418:15;6410:23;;6175:265;;;:::o;6446:99::-;;6532:5;6526:12;6516:22;;6505:40;;;:::o;6551:169::-;;6669:6;6664:3;6657:19;6709:4;6704:3;6700:14;6685:29;;6647:73;;;;:::o;6726:527::-;;6785:19;6802:1;6785:19;:::i;:::-;6780:24;;6818:19;6835:1;6818:19;:::i;:::-;6813:24;;7007:1;6939:66;6935:74;6932:1;6928:82;6923:1;6920;6916:9;6909:17;6905:106;6902:2;;;7014:18;;:::i;:::-;6902:2;7193:1;7125:66;7121:74;7118:1;7114:82;7110:1;7107;7103:9;7099:98;7096:2;;;7200:18;;:::i;:::-;7096:2;7245:1;7242;7238:9;7230:17;;6770:483;;;;:::o;7259:96::-;;7325:24;7343:5;7325:24;:::i;:::-;7314:35;;7304:51;;;:::o;7361:104::-;;7435:24;7453:5;7435:24;:::i;:::-;7424:35;;7414:51;;;:::o;7471:141::-;;7552:5;7541:16;;7558:48;7600:5;7558:48;:::i;:::-;7531:81;;;:::o;7618:143::-;;7700:5;7689:16;;7706:49;7749:5;7706:49;:::i;:::-;7679:82;;;:::o;7767:76::-;;7832:5;7821:16;;7811:32;;;:::o;7849:126::-;;7926:42;7919:5;7915:54;7904:65;;7894:81;;;:::o;7981:77::-;;8047:5;8036:16;;8026:32;;;:::o;8064:141::-;;8160:39;8193:5;8160:39;:::i;:::-;8147:52;;8137:68;;;:::o;8211:143::-;;8308:40;8342:5;8308:40;:::i;:::-;8295:53;;8285:69;;;:::o;8360:154::-;8444:6;8439:3;8434;8421:30;8506:1;8497:6;8492:3;8488:16;8481:27;8411:103;;;:::o;8520:307::-;8588:1;8598:113;8612:6;8609:1;8606:13;8598:113;;;8697:1;8692:3;8688:11;8682:18;8678:1;8673:3;8669:11;8662:39;8634:2;8631:1;8627:10;8622:15;;8598:113;;;8729:6;8726:1;8723:13;8720:2;;;8809:1;8800:6;8795:3;8791:16;8784:27;8720:2;8569:258;;;;:::o;8833:320::-;;8914:1;8908:4;8904:12;8894:22;;8961:1;8955:4;8951:12;8982:18;8972:2;;9038:4;9030:6;9026:17;9016:27;;8972:2;9100;9092:6;9089:14;9069:18;9066:38;9063:2;;;9119:18;;:::i;:::-;9063:2;8884:269;;;;:::o;9159:231::-;;9220:23;9237:5;9220:23;:::i;:::-;9211:32;;9265:66;9258:5;9255:77;9252:2;;;9335:18;;:::i;:::-;9252:2;9382:1;9375:5;9371:13;9364:20;;9201:189;;;:::o;9396:180::-;9444:77;9441:1;9434:88;9541:4;9538:1;9531:15;9565:4;9562:1;9555:15;9582:180;9630:77;9627:1;9620:88;9727:4;9724:1;9717:15;9751:4;9748:1;9741:15;9768:180;9816:77;9813:1;9806:88;9913:4;9910:1;9903:15;9937:4;9934:1;9927:15;9954:180;10002:77;9999:1;9992:88;10099:4;10096:1;10089:15;10123:4;10120:1;10113:15;10140:102;;10232:2;10228:7;10223:2;10216:5;10212:14;10208:28;10198:38;;10188:54;;;:::o;10248:120::-;10336:1;10329:5;10326:12;10316:2;;10342:18;;:::i;:::-;10316:2;10306:62;:::o;10374:121::-;10463:1;10456:5;10453:12;10443:2;;10469:18;;:::i;:::-;10443:2;10433:62;:::o;10501:120::-;10573:23;10590:5;10573:23;:::i;:::-;10566:5;10563:34;10553:2;;10611:1;10608;10601:12;10553:2;10543:78;:::o;10627:122::-;10700:24;10718:5;10700:24;:::i;:::-;10693:5;10690:35;10680:2;;10739:1;10736;10729:12;10680:2;10670:79;:::o",
	"source": "/**\n * @file freelance.sol\n * @author Jackson Ng <jackson@jacksonng.org>\n * @date created 17th Apr 2021\n * @date last modified 18th Apr 2021\n */\n\n//SPDX-License-Identifier: MIT\n \npragma solidity ^0.8.0;\n\ncontract freelancer{\n    \n    enum ScheduleState {planned, funded, started, approved, released}\n    enum ProjectState {initiated, accepted, closed}\n    \n    struct schedule{\n        string shortCode;\n        string description;\n        uint256 value;\n        ScheduleState scheduleState;\n    }  \n  \n    int256 public totalSchedules = 0;\n    address payable public freelancerAddress;\n    address public clientAddress;\n    ProjectState public projectState;\n    \n    mapping(int256 => schedule) public scheduleRegister;\n  \n\tmodifier condition(bool _condition) {\n\t\trequire(_condition);\n\t\t_;\n\t}\n\n\tmodifier onlyFreelancer() {\n\t\trequire(msg.sender == freelancerAddress);\n\t\t_;\n\t}\n\n\tmodifier onlyClient() {\n\t\trequire(msg.sender == clientAddress);\n\t\t_;\n\t}\n\t\n\tmodifier bothClientFreelancer(){\n\t\trequire(msg.sender == clientAddress || msg.sender == freelancerAddress);\n\t\t_;\t    \n\t}\n\n\tmodifier inProjectState(ProjectState _state) {\n\t\trequire(projectState == _state);\n\t\t_;\n\t}\n\n    modifier inScheduleState(int256 _scheduleID, ScheduleState _state){\n        require((_scheduleID <= totalSchedules - 1) && scheduleRegister[_scheduleID].scheduleState == _state);\n        _;\n    }\n\n    modifier ampleFunding(int256 _scheduleID, uint256 _funding){\n        require(scheduleRegister[_scheduleID].value == _funding);\n        _;\n    }\n\n    modifier noMoreFunds(){\n        require(address(this).balance == 0);\n        _;\n    }\n\n    event scheduleAdded(string shortCode);\n    event projectAccepted(address clientAddress);\n    event taskFunded(int256 scheduleID);\n    event taskStarted(int256 scheduleID);\n    event taskApproved(int256 scheduleID);\n    event fundsReleased(int256 scheduleID, uint256 valueReleased);\n    event projectEnded();\n    \n    constructor()\n    {\n        freelancerAddress = payable(msg.sender);\n        projectState = ProjectState.initiated;\n    }\n    \n    function addSchedule(string memory _shortCode, string memory _description, uint256 _value)\n        public\n        inProjectState(ProjectState.initiated)\n        onlyFreelancer\n    {\n        schedule memory s;\n        s.shortCode = _shortCode;\n        s.description = _description;\n        s.scheduleState = ScheduleState.planned;\n        s.value = _value;\n        scheduleRegister[totalSchedules] = s;\n        totalSchedules++;\n        emit scheduleAdded(_shortCode);\n    }\n    \n    function acceptProject()\n        public\n        inProjectState(ProjectState.initiated)\n    {\n        clientAddress = msg.sender;\n        projectState = ProjectState.accepted;\n        emit projectAccepted(msg.sender);\n    }\n    \n    function fundTask(int256 _scheduleID)\n        public\n        payable\n        inProjectState(ProjectState.accepted)\n        inScheduleState(_scheduleID, ScheduleState.planned)\n        ampleFunding(_scheduleID, msg.value)\n        onlyClient\n    {\n        scheduleRegister[_scheduleID].scheduleState = ScheduleState.funded;\n        emit taskFunded(_scheduleID);\n    }\n    \n    function startTask(int256 _scheduleID)\n        public\n        inProjectState(ProjectState.accepted)\n        inScheduleState(_scheduleID, ScheduleState.funded)\n        onlyFreelancer\n    {\n        scheduleRegister[_scheduleID].scheduleState = ScheduleState.started;\n        emit taskStarted(_scheduleID);\n    }\n\n    function approveTask(int256 _scheduleID)\n        public\n        inProjectState(ProjectState.accepted)\n        inScheduleState(_scheduleID, ScheduleState.started)\n        onlyClient\n    {\n        scheduleRegister[_scheduleID].scheduleState = ScheduleState.approved;\n        emit taskApproved(_scheduleID);\n    }\n    \n    function releaseFunds(int256 _scheduleID)\n        public\n        payable\n        inProjectState(ProjectState.accepted)\n        inScheduleState(_scheduleID, ScheduleState.approved)\n        onlyFreelancer\n    {\n        freelancerAddress.transfer(scheduleRegister[_scheduleID].value);\n        scheduleRegister[_scheduleID].scheduleState = ScheduleState.released;\n        emit fundsReleased(_scheduleID, scheduleRegister[_scheduleID].value);\n    }\n    \n    function endProject()\n        public\n        bothClientFreelancer\n        noMoreFunds\n    {\n        projectState = ProjectState.closed;\n        emit projectEnded();\n    }\n    \n    function getBalance()\n        public\n        view\n        returns (uint256 balance)\n    {\n        return address(this).balance;\n    }\n} ",
	"sourcePath": "C:\\Users\\kritik\\Downloads\\freelancer-main\\freelancer-main\\contracts\\freelancer.sol",
	"ast": {
	  "absolutePath": "project:/contracts/freelancer.sol",
	  "exportedSymbols": {
		"freelancer": [
		  479
		]
	  },
	  "id": 480,
	  "license": "MIT",
	  "nodeType": "SourceUnit",
	  "nodes": [
		{
		  "id": 38,
		  "literals": [
			"solidity",
			"^",
			"0.8",
			".0"
		  ],
		  "nodeType": "PragmaDirective",
		  "src": "179:23:1"
		},
		{
		  "abstract": false,
		  "baseContracts": [],
		  "contractDependencies": [],
		  "contractKind": "contract",
		  "fullyImplemented": true,
		  "id": 479,
		  "linearizedBaseContracts": [
			479
		  ],
		  "name": "freelancer",
		  "nodeType": "ContractDefinition",
		  "nodes": [
			{
			  "canonicalName": "freelancer.ScheduleState",
			  "id": 44,
			  "members": [
				{
				  "id": 39,
				  "name": "planned",
				  "nodeType": "EnumValue",
				  "src": "254:7:1"
				},
				{
				  "id": 40,
				  "name": "funded",
				  "nodeType": "EnumValue",
				  "src": "263:6:1"
				},
				{
				  "id": 41,
				  "name": "started",
				  "nodeType": "EnumValue",
				  "src": "271:7:1"
				},
				{
				  "id": 42,
				  "name": "approved",
				  "nodeType": "EnumValue",
				  "src": "280:8:1"
				},
				{
				  "id": 43,
				  "name": "released",
				  "nodeType": "EnumValue",
				  "src": "290:8:1"
				}
			  ],
			  "name": "ScheduleState",
			  "nodeType": "EnumDefinition",
			  "src": "234:65:1"
			},
			{
			  "canonicalName": "freelancer.ProjectState",
			  "id": 48,
			  "members": [
				{
				  "id": 45,
				  "name": "initiated",
				  "nodeType": "EnumValue",
				  "src": "323:9:1"
				},
				{
				  "id": 46,
				  "name": "accepted",
				  "nodeType": "EnumValue",
				  "src": "334:8:1"
				},
				{
				  "id": 47,
				  "name": "closed",
				  "nodeType": "EnumValue",
				  "src": "344:6:1"
				}
			  ],
			  "name": "ProjectState",
			  "nodeType": "EnumDefinition",
			  "src": "304:47:1"
			},
			{
			  "canonicalName": "freelancer.schedule",
			  "id": 58,
			  "members": [
				{
				  "constant": false,
				  "id": 50,
				  "mutability": "mutable",
				  "name": "shortCode",
				  "nodeType": "VariableDeclaration",
				  "scope": 58,
				  "src": "386:16:1",
				  "stateVariable": false,
				  "storageLocation": "default",
				  "typeDescriptions": {
					"typeIdentifier": "t_string_storage_ptr",
					"typeString": "string"
				  },
				  "typeName": {
					"id": 49,
					"name": "string",
					"nodeType": "ElementaryTypeName",
					"src": "386:6:1",
					"typeDescriptions": {
					  "typeIdentifier": "t_string_storage_ptr",
					  "typeString": "string"
					}
				  },
				  "visibility": "internal"
				},
				{
				  "constant": false,
				  "id": 52,
				  "mutability": "mutable",
				  "name": "description",
				  "nodeType": "VariableDeclaration",
				  "scope": 58,
				  "src": "412:18:1",
				  "stateVariable": false,
				  "storageLocation": "default",
				  "typeDescriptions": {
					"typeIdentifier": "t_string_storage_ptr",
					"typeString": "string"
				  },
				  "typeName": {
					"id": 51,
					"name": "string",
					"nodeType": "ElementaryTypeName",
					"src": "412:6:1",
					"typeDescriptions": {
					  "typeIdentifier": "t_string_storage_ptr",
					  "typeString": "string"
					}
				  },
				  "visibility": "internal"
				},
				{
				  "constant": false,
				  "id": 54,
				  "mutability": "mutable",
				  "name": "value",
				  "nodeType": "VariableDeclaration",
				  "scope": 58,
				  "src": "440:13:1",
				  "stateVariable": false,
				  "storageLocation": "default",
				  "typeDescriptions": {
					"typeIdentifier": "t_uint256",
					"typeString": "uint256"
				  },
				  "typeName": {
					"id": 53,
					"name": "uint256",
					"nodeType": "ElementaryTypeName",
					"src": "440:7:1",
					"typeDescriptions": {
					  "typeIdentifier": "t_uint256",
					  "typeString": "uint256"
					}
				  },
				  "visibility": "internal"
				},
				{
				  "constant": false,
				  "id": 57,
				  "mutability": "mutable",
				  "name": "scheduleState",
				  "nodeType": "VariableDeclaration",
				  "scope": 58,
				  "src": "463:27:1",
				  "stateVariable": false,
				  "storageLocation": "default",
				  "typeDescriptions": {
					"typeIdentifier": "t_enum$_ScheduleState_$44",
					"typeString": "enum freelancer.ScheduleState"
				  },
				  "typeName": {
					"id": 56,
					"nodeType": "UserDefinedTypeName",
					"pathNode": {
					  "id": 55,
					  "name": "ScheduleState",
					  "nodeType": "IdentifierPath",
					  "referencedDeclaration": 44,
					  "src": "463:13:1"
					},
					"referencedDeclaration": 44,
					"src": "463:13:1",
					"typeDescriptions": {
					  "typeIdentifier": "t_enum$_ScheduleState_$44",
					  "typeString": "enum freelancer.ScheduleState"
					}
				  },
				  "visibility": "internal"
				}
			  ],
			  "name": "schedule",
			  "nodeType": "StructDefinition",
			  "scope": 479,
			  "src": "361:136:1",
			  "visibility": "public"
			},
			{
			  "constant": false,
			  "functionSelector": "965720af",
			  "id": 61,
			  "mutability": "mutable",
			  "name": "totalSchedules",
			  "nodeType": "VariableDeclaration",
			  "scope": 479,
			  "src": "507:32:1",
			  "stateVariable": true,
			  "storageLocation": "default",
			  "typeDescriptions": {
				"typeIdentifier": "t_int256",
				"typeString": "int256"
			  },
			  "typeName": {
				"id": 59,
				"name": "int256",
				"nodeType": "ElementaryTypeName",
				"src": "507:6:1",
				"typeDescriptions": {
				  "typeIdentifier": "t_int256",
				  "typeString": "int256"
				}
			  },
			  "value": {
				"hexValue": "30",
				"id": 60,
				"isConstant": false,
				"isLValue": false,
				"isPure": true,
				"kind": "number",
				"lValueRequested": false,
				"nodeType": "Literal",
				"src": "538:1:1",
				"typeDescriptions": {
				  "typeIdentifier": "t_rational_0_by_1",
				  "typeString": "int_const 0"
				},
				"value": "0"
			  },
			  "visibility": "public"
			},
			{
			  "constant": false,
			  "functionSelector": "06a4e7cb",
			  "id": 63,
			  "mutability": "mutable",
			  "name": "freelancerAddress",
			  "nodeType": "VariableDeclaration",
			  "scope": 479,
			  "src": "545:40:1",
			  "stateVariable": true,
			  "storageLocation": "default",
			  "typeDescriptions": {
				"typeIdentifier": "t_address_payable",
				"typeString": "address payable"
			  },
			  "typeName": {
				"id": 62,
				"name": "address",
				"nodeType": "ElementaryTypeName",
				"src": "545:15:1",
				"stateMutability": "payable",
				"typeDescriptions": {
				  "typeIdentifier": "t_address_payable",
				  "typeString": "address payable"
				}
			  },
			  "visibility": "public"
			},
			{
			  "constant": false,
			  "functionSelector": "2c2ab5ea",
			  "id": 65,
			  "mutability": "mutable",
			  "name": "clientAddress",
			  "nodeType": "VariableDeclaration",
			  "scope": 479,
			  "src": "591:28:1",
			  "stateVariable": true,
			  "storageLocation": "default",
			  "typeDescriptions": {
				"typeIdentifier": "t_address",
				"typeString": "address"
			  },
			  "typeName": {
				"id": 64,
				"name": "address",
				"nodeType": "ElementaryTypeName",
				"src": "591:7:1",
				"stateMutability": "nonpayable",
				"typeDescriptions": {
				  "typeIdentifier": "t_address",
				  "typeString": "address"
				}
			  },
			  "visibility": "public"
			},
			{
			  "constant": false,
			  "functionSelector": "748807ab",
			  "id": 68,
			  "mutability": "mutable",
			  "name": "projectState",
			  "nodeType": "VariableDeclaration",
			  "scope": 479,
			  "src": "625:32:1",
			  "stateVariable": true,
			  "storageLocation": "default",
			  "typeDescriptions": {
				"typeIdentifier": "t_enum$_ProjectState_$48",
				"typeString": "enum freelancer.ProjectState"
			  },
			  "typeName": {
				"id": 67,
				"nodeType": "UserDefinedTypeName",
				"pathNode": {
				  "id": 66,
				  "name": "ProjectState",
				  "nodeType": "IdentifierPath",
				  "referencedDeclaration": 48,
				  "src": "625:12:1"
				},
				"referencedDeclaration": 48,
				"src": "625:12:1",
				"typeDescriptions": {
				  "typeIdentifier": "t_enum$_ProjectState_$48",
				  "typeString": "enum freelancer.ProjectState"
				}
			  },
			  "visibility": "public"
			},
			{
			  "constant": false,
			  "functionSelector": "bab56910",
			  "id": 73,
			  "mutability": "mutable",
			  "name": "scheduleRegister",
			  "nodeType": "VariableDeclaration",
			  "scope": 479,
			  "src": "668:51:1",
			  "stateVariable": true,
			  "storageLocation": "default",
			  "typeDescriptions": {
				"typeIdentifier": "t_mapping$_t_int256_$_t_struct$_schedule_$58_storage_$",
				"typeString": "mapping(int256 => struct freelancer.schedule)"
			  },
			  "typeName": {
				"id": 72,
				"keyType": {
				  "id": 69,
				  "name": "int256",
				  "nodeType": "ElementaryTypeName",
				  "src": "676:6:1",
				  "typeDescriptions": {
					"typeIdentifier": "t_int256",
					"typeString": "int256"
				  }
				},
				"nodeType": "Mapping",
				"src": "668:27:1",
				"typeDescriptions": {
				  "typeIdentifier": "t_mapping$_t_int256_$_t_struct$_schedule_$58_storage_$",
				  "typeString": "mapping(int256 => struct freelancer.schedule)"
				},
				"valueType": {
				  "id": 71,
				  "nodeType": "UserDefinedTypeName",
				  "pathNode": {
					"id": 70,
					"name": "schedule",
					"nodeType": "IdentifierPath",
					"referencedDeclaration": 58,
					"src": "686:8:1"
				  },
				  "referencedDeclaration": 58,
				  "src": "686:8:1",
				  "typeDescriptions": {
					"typeIdentifier": "t_struct$_schedule_$58_storage_ptr",
					"typeString": "struct freelancer.schedule"
				  }
				}
			  },
			  "visibility": "public"
			},
			{
			  "body": {
				"id": 82,
				"nodeType": "Block",
				"src": "761:32:1",
				"statements": [
				  {
					"expression": {
					  "arguments": [
						{
						  "id": 78,
						  "name": "_condition",
						  "nodeType": "Identifier",
						  "overloadedDeclarations": [],
						  "referencedDeclaration": 75,
						  "src": "773:10:1",
						  "typeDescriptions": {
							"typeIdentifier": "t_bool",
							"typeString": "bool"
						  }
						}
					  ],
					  "expression": {
						"argumentTypes": [
						  {
							"typeIdentifier": "t_bool",
							"typeString": "bool"
						  }
						],
						"id": 77,
						"name": "require",
						"nodeType": "Identifier",
						"overloadedDeclarations": [
						  4294967278,
						  4294967278
						],
						"referencedDeclaration": 4294967278,
						"src": "765:7:1",
						"typeDescriptions": {
						  "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
						  "typeString": "function (bool) pure"
						}
					  },
					  "id": 79,
					  "isConstant": false,
					  "isLValue": false,
					  "isPure": false,
					  "kind": "functionCall",
					  "lValueRequested": false,
					  "names": [],
					  "nodeType": "FunctionCall",
					  "src": "765:19:1",
					  "tryCall": false,
					  "typeDescriptions": {
						"typeIdentifier": "t_tuple$__$",
						"typeString": "tuple()"
					  }
					},
					"id": 80,
					"nodeType": "ExpressionStatement",
					"src": "765:19:1"
				  },
				  {
					"id": 81,
					"nodeType": "PlaceholderStatement",
					"src": "788:1:1"
				  }
				]
			  },
			  "id": 83,
			  "name": "condition",
			  "nodeType": "ModifierDefinition",
			  "parameters": {
				"id": 76,
				"nodeType": "ParameterList",
				"parameters": [
				  {
					"constant": false,
					"id": 75,
					"mutability": "mutable",
					"name": "_condition",
					"nodeType": "VariableDeclaration",
					"scope": 83,
					"src": "744:15:1",
					"stateVariable": false,
					"storageLocation": "default",
					"typeDescriptions": {
					  "typeIdentifier": "t_bool",
					  "typeString": "bool"
					},
					"typeName": {
					  "id": 74,
					  "name": "bool",
					  "nodeType": "ElementaryTypeName",
					  "src": "744:4:1",
					  "typeDescriptions": {
						"typeIdentifier": "t_bool",
						"typeString": "bool"
					  }
					},
					"visibility": "internal"
				  }
				],
				"src": "743:17:1"
			  },
			  "src": "725:68:1",
			  "virtual": false,
			  "visibility": "internal"
			},
			{
			  "body": {
				"id": 93,
				"nodeType": "Block",
				"src": "822:53:1",
				"statements": [
				  {
					"expression": {
					  "arguments": [
						{
						  "commonType": {
							"typeIdentifier": "t_address",
							"typeString": "address"
						  },
						  "id": 89,
						  "isConstant": false,
						  "isLValue": false,
						  "isPure": false,
						  "lValueRequested": false,
						  "leftExpression": {
							"expression": {
							  "id": 86,
							  "name": "msg",
							  "nodeType": "Identifier",
							  "overloadedDeclarations": [],
							  "referencedDeclaration": 4294967281,
							  "src": "834:3:1",
							  "typeDescriptions": {
								"typeIdentifier": "t_magic_message",
								"typeString": "msg"
							  }
							},
							"id": 87,
							"isConstant": false,
							"isLValue": false,
							"isPure": false,
							"lValueRequested": false,
							"memberName": "sender",
							"nodeType": "MemberAccess",
							"src": "834:10:1",
							"typeDescriptions": {
							  "typeIdentifier": "t_address",
							  "typeString": "address"
							}
						  },
						  "nodeType": "BinaryOperation",
						  "operator": "==",
						  "rightExpression": {
							"id": 88,
							"name": "freelancerAddress",
							"nodeType": "Identifier",
							"overloadedDeclarations": [],
							"referencedDeclaration": 63,
							"src": "848:17:1",
							"typeDescriptions": {
							  "typeIdentifier": "t_address_payable",
							  "typeString": "address payable"
							}
						  },
						  "src": "834:31:1",
						  "typeDescriptions": {
							"typeIdentifier": "t_bool",
							"typeString": "bool"
						  }
						}
					  ],
					  "expression": {
						"argumentTypes": [
						  {
							"typeIdentifier": "t_bool",
							"typeString": "bool"
						  }
						],
						"id": 85,
						"name": "require",
						"nodeType": "Identifier",
						"overloadedDeclarations": [
						  4294967278,
						  4294967278
						],
						"referencedDeclaration": 4294967278,
						"src": "826:7:1",
						"typeDescriptions": {
						  "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
						  "typeString": "function (bool) pure"
						}
					  },
					  "id": 90,
					  "isConstant": false,
					  "isLValue": false,
					  "isPure": false,
					  "kind": "functionCall",
					  "lValueRequested": false,
					  "names": [],
					  "nodeType": "FunctionCall",
					  "src": "826:40:1",
					  "tryCall": false,
					  "typeDescriptions": {
						"typeIdentifier": "t_tuple$__$",
						"typeString": "tuple()"
					  }
					},
					"id": 91,
					"nodeType": "ExpressionStatement",
					"src": "826:40:1"
				  },
				  {
					"id": 92,
					"nodeType": "PlaceholderStatement",
					"src": "870:1:1"
				  }
				]
			  },
			  "id": 94,
			  "name": "onlyFreelancer",
			  "nodeType": "ModifierDefinition",
			  "parameters": {
				"id": 84,
				"nodeType": "ParameterList",
				"parameters": [],
				"src": "819:2:1"
			  },
			  "src": "796:79:1",
			  "virtual": false,
			  "visibility": "internal"
			},
			{
			  "body": {
				"id": 104,
				"nodeType": "Block",
				"src": "900:49:1",
				"statements": [
				  {
					"expression": {
					  "arguments": [
						{
						  "commonType": {
							"typeIdentifier": "t_address",
							"typeString": "address"
						  },
						  "id": 100,
						  "isConstant": false,
						  "isLValue": false,
						  "isPure": false,
						  "lValueRequested": false,
						  "leftExpression": {
							"expression": {
							  "id": 97,
							  "name": "msg",
							  "nodeType": "Identifier",
							  "overloadedDeclarations": [],
							  "referencedDeclaration": 4294967281,
							  "src": "912:3:1",
							  "typeDescriptions": {
								"typeIdentifier": "t_magic_message",
								"typeString": "msg"
							  }
							},
							"id": 98,
							"isConstant": false,
							"isLValue": false,
							"isPure": false,
							"lValueRequested": false,
							"memberName": "sender",
							"nodeType": "MemberAccess",
							"src": "912:10:1",
							"typeDescriptions": {
							  "typeIdentifier": "t_address",
							  "typeString": "address"
							}
						  },
						  "nodeType": "BinaryOperation",
						  "operator": "==",
						  "rightExpression": {
							"id": 99,
							"name": "clientAddress",
							"nodeType": "Identifier",
							"overloadedDeclarations": [],
							"referencedDeclaration": 65,
							"src": "926:13:1",
							"typeDescriptions": {
							  "typeIdentifier": "t_address",
							  "typeString": "address"
							}
						  },
						  "src": "912:27:1",
						  "typeDescriptions": {
							"typeIdentifier": "t_bool",
							"typeString": "bool"
						  }
						}
					  ],
					  "expression": {
						"argumentTypes": [
						  {
							"typeIdentifier": "t_bool",
							"typeString": "bool"
						  }
						],
						"id": 96,
						"name": "require",
						"nodeType": "Identifier",
						"overloadedDeclarations": [
						  4294967278,
						  4294967278
						],
						"referencedDeclaration": 4294967278,
						"src": "904:7:1",
						"typeDescriptions": {
						  "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
						  "typeString": "function (bool) pure"
						}
					  },
					  "id": 101,
					  "isConstant": false,
					  "isLValue": false,
					  "isPure": false,
					  "kind": "functionCall",
					  "lValueRequested": false,
					  "names": [],
					  "nodeType": "FunctionCall",
					  "src": "904:36:1",
					  "tryCall": false,
					  "typeDescriptions": {
						"typeIdentifier": "t_tuple$__$",
						"typeString": "tuple()"
					  }
					},
					"id": 102,
					"nodeType": "ExpressionStatement",
					"src": "904:36:1"
				  },
				  {
					"id": 103,
					"nodeType": "PlaceholderStatement",
					"src": "944:1:1"
				  }
				]
			  },
			  "id": 105,
			  "name": "onlyClient",
			  "nodeType": "ModifierDefinition",
			  "parameters": {
				"id": 95,
				"nodeType": "ParameterList",
				"parameters": [],
				"src": "897:2:1"
			  },
			  "src": "878:71:1",
			  "virtual": false,
			  "visibility": "internal"
			},
			{
			  "body": {
				"id": 120,
				"nodeType": "Block",
				"src": "984:89:1",
				"statements": [
				  {
					"expression": {
					  "arguments": [
						{
						  "commonType": {
							"typeIdentifier": "t_bool",
							"typeString": "bool"
						  },
						  "id": 116,
						  "isConstant": false,
						  "isLValue": false,
						  "isPure": false,
						  "lValueRequested": false,
						  "leftExpression": {
							"commonType": {
							  "typeIdentifier": "t_address",
							  "typeString": "address"
							},
							"id": 111,
							"isConstant": false,
							"isLValue": false,
							"isPure": false,
							"lValueRequested": false,
							"leftExpression": {
							  "expression": {
								"id": 108,
								"name": "msg",
								"nodeType": "Identifier",
								"overloadedDeclarations": [],
								"referencedDeclaration": 4294967281,
								"src": "996:3:1",
								"typeDescriptions": {
								  "typeIdentifier": "t_magic_message",
								  "typeString": "msg"
								}
							  },
							  "id": 109,
							  "isConstant": false,
							  "isLValue": false,
							  "isPure": false,
							  "lValueRequested": false,
							  "memberName": "sender",
							  "nodeType": "MemberAccess",
							  "src": "996:10:1",
							  "typeDescriptions": {
								"typeIdentifier": "t_address",
								"typeString": "address"
							  }
							},
							"nodeType": "BinaryOperation",
							"operator": "==",
							"rightExpression": {
							  "id": 110,
							  "name": "clientAddress",
							  "nodeType": "Identifier",
							  "overloadedDeclarations": [],
							  "referencedDeclaration": 65,
							  "src": "1010:13:1",
							  "typeDescriptions": {
								"typeIdentifier": "t_address",
								"typeString": "address"
							  }
							},
							"src": "996:27:1",
							"typeDescriptions": {
							  "typeIdentifier": "t_bool",
							  "typeString": "bool"
							}
						  },
						  "nodeType": "BinaryOperation",
						  "operator": "||",
						  "rightExpression": {
							"commonType": {
							  "typeIdentifier": "t_address",
							  "typeString": "address"
							},
							"id": 115,
							"isConstant": false,
							"isLValue": false,
							"isPure": false,
							"lValueRequested": false,
							"leftExpression": {
							  "expression": {
								"id": 112,
								"name": "msg",
								"nodeType": "Identifier",
								"overloadedDeclarations": [],
								"referencedDeclaration": 4294967281,
								"src": "1027:3:1",
								"typeDescriptions": {
								  "typeIdentifier": "t_magic_message",
								  "typeString": "msg"
								}
							  },
							  "id": 113,
							  "isConstant": false,
							  "isLValue": false,
							  "isPure": false,
							  "lValueRequested": false,
							  "memberName": "sender",
							  "nodeType": "MemberAccess",
							  "src": "1027:10:1",
							  "typeDescriptions": {
								"typeIdentifier": "t_address",
								"typeString": "address"
							  }
							},
							"nodeType": "BinaryOperation",
							"operator": "==",
							"rightExpression": {
							  "id": 114,
							  "name": "freelancerAddress",
							  "nodeType": "Identifier",
							  "overloadedDeclarations": [],
							  "referencedDeclaration": 63,
							  "src": "1041:17:1",
							  "typeDescriptions": {
								"typeIdentifier": "t_address_payable",
								"typeString": "address payable"
							  }
							},
							"src": "1027:31:1",
							"typeDescriptions": {
							  "typeIdentifier": "t_bool",
							  "typeString": "bool"
							}
						  },
						  "src": "996:62:1",
						  "typeDescriptions": {
							"typeIdentifier": "t_bool",
							"typeString": "bool"
						  }
						}
					  ],
					  "expression": {
						"argumentTypes": [
						  {
							"typeIdentifier": "t_bool",
							"typeString": "bool"
						  }
						],
						"id": 107,
						"name": "require",
						"nodeType": "Identifier",
						"overloadedDeclarations": [
						  4294967278,
						  4294967278
						],
						"referencedDeclaration": 4294967278,
						"src": "988:7:1",
						"typeDescriptions": {
						  "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
						  "typeString": "function (bool) pure"
						}
					  },
					  "id": 117,
					  "isConstant": false,
					  "isLValue": false,
					  "isPure": false,
					  "kind": "functionCall",
					  "lValueRequested": false,
					  "names": [],
					  "nodeType": "FunctionCall",
					  "src": "988:71:1",
					  "tryCall": false,
					  "typeDescriptions": {
						"typeIdentifier": "t_tuple$__$",
						"typeString": "tuple()"
					  }
					},
					"id": 118,
					"nodeType": "ExpressionStatement",
					"src": "988:71:1"
				  },
				  {
					"id": 119,
					"nodeType": "PlaceholderStatement",
					"src": "1063:1:1"
				  }
				]
			  },
			  "id": 121,
			  "name": "bothClientFreelancer",
			  "nodeType": "ModifierDefinition",
			  "parameters": {
				"id": 106,
				"nodeType": "ParameterList",
				"parameters": [],
				"src": "982:2:1"
			  },
			  "src": "953:120:1",
			  "virtual": false,
			  "visibility": "internal"
			},
			{
			  "body": {
				"id": 133,
				"nodeType": "Block",
				"src": "1121:44:1",
				"statements": [
				  {
					"expression": {
					  "arguments": [
						{
						  "commonType": {
							"typeIdentifier": "t_enum$_ProjectState_$48",
							"typeString": "enum freelancer.ProjectState"
						  },
						  "id": 129,
						  "isConstant": false,
						  "isLValue": false,
						  "isPure": false,
						  "lValueRequested": false,
						  "leftExpression": {
							"id": 127,
							"name": "projectState",
							"nodeType": "Identifier",
							"overloadedDeclarations": [],
							"referencedDeclaration": 68,
							"src": "1133:12:1",
							"typeDescriptions": {
							  "typeIdentifier": "t_enum$_ProjectState_$48",
							  "typeString": "enum freelancer.ProjectState"
							}
						  },
						  "nodeType": "BinaryOperation",
						  "operator": "==",
						  "rightExpression": {
							"id": 128,
							"name": "_state",
							"nodeType": "Identifier",
							"overloadedDeclarations": [],
							"referencedDeclaration": 124,
							"src": "1149:6:1",
							"typeDescriptions": {
							  "typeIdentifier": "t_enum$_ProjectState_$48",
							  "typeString": "enum freelancer.ProjectState"
							}
						  },
						  "src": "1133:22:1",
						  "typeDescriptions": {
							"typeIdentifier": "t_bool",
							"typeString": "bool"
						  }
						}
					  ],
					  "expression": {
						"argumentTypes": [
						  {
							"typeIdentifier": "t_bool",
							"typeString": "bool"
						  }
						],
						"id": 126,
						"name": "require",
						"nodeType": "Identifier",
						"overloadedDeclarations": [
						  4294967278,
						  4294967278
						],
						"referencedDeclaration": 4294967278,
						"src": "1125:7:1",
						"typeDescriptions": {
						  "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
						  "typeString": "function (bool) pure"
						}
					  },
					  "id": 130,
					  "isConstant": false,
					  "isLValue": false,
					  "isPure": false,
					  "kind": "functionCall",
					  "lValueRequested": false,
					  "names": [],
					  "nodeType": "FunctionCall",
					  "src": "1125:31:1",
					  "tryCall": false,
					  "typeDescriptions": {
						"typeIdentifier": "t_tuple$__$",
						"typeString": "tuple()"
					  }
					},
					"id": 131,
					"nodeType": "ExpressionStatement",
					"src": "1125:31:1"
				  },
				  {
					"id": 132,
					"nodeType": "PlaceholderStatement",
					"src": "1160:1:1"
				  }
				]
			  },
			  "id": 134,
			  "name": "inProjectState",
			  "nodeType": "ModifierDefinition",
			  "parameters": {
				"id": 125,
				"nodeType": "ParameterList",
				"parameters": [
				  {
					"constant": false,
					"id": 124,
					"mutability": "mutable",
					"name": "_state",
					"nodeType": "VariableDeclaration",
					"scope": 134,
					"src": "1100:19:1",
					"stateVariable": false,
					"storageLocation": "default",
					"typeDescriptions": {
					  "typeIdentifier": "t_enum$_ProjectState_$48",
					  "typeString": "enum freelancer.ProjectState"
					},
					"typeName": {
					  "id": 123,
					  "nodeType": "UserDefinedTypeName",
					  "pathNode": {
						"id": 122,
						"name": "ProjectState",
						"nodeType": "IdentifierPath",
						"referencedDeclaration": 48,
						"src": "1100:12:1"
					  },
					  "referencedDeclaration": 48,
					  "src": "1100:12:1",
					  "typeDescriptions": {
						"typeIdentifier": "t_enum$_ProjectState_$48",
						"typeString": "enum freelancer.ProjectState"
					  }
					},
					"visibility": "internal"
				  }
				],
				"src": "1099:21:1"
			  },
			  "src": "1076:89:1",
			  "virtual": false,
			  "visibility": "internal"
			},
			{
			  "body": {
				"id": 158,
				"nodeType": "Block",
				"src": "1237:129:1",
				"statements": [
				  {
					"expression": {
					  "arguments": [
						{
						  "commonType": {
							"typeIdentifier": "t_bool",
							"typeString": "bool"
						  },
						  "id": 154,
						  "isConstant": false,
						  "isLValue": false,
						  "isPure": false,
						  "lValueRequested": false,
						  "leftExpression": {
							"components": [
							  {
								"commonType": {
								  "typeIdentifier": "t_int256",
								  "typeString": "int256"
								},
								"id": 146,
								"isConstant": false,
								"isLValue": false,
								"isPure": false,
								"lValueRequested": false,
								"leftExpression": {
								  "id": 142,
								  "name": "_scheduleID",
								  "nodeType": "Identifier",
								  "overloadedDeclarations": [],
								  "referencedDeclaration": 136,
								  "src": "1256:11:1",
								  "typeDescriptions": {
									"typeIdentifier": "t_int256",
									"typeString": "int256"
								  }
								},
								"nodeType": "BinaryOperation",
								"operator": "<=",
								"rightExpression": {
								  "commonType": {
									"typeIdentifier": "t_int256",
									"typeString": "int256"
								  },
								  "id": 145,
								  "isConstant": false,
								  "isLValue": false,
								  "isPure": false,
								  "lValueRequested": false,
								  "leftExpression": {
									"id": 143,
									"name": "totalSchedules",
									"nodeType": "Identifier",
									"overloadedDeclarations": [],
									"referencedDeclaration": 61,
									"src": "1271:14:1",
									"typeDescriptions": {
									  "typeIdentifier": "t_int256",
									  "typeString": "int256"
									}
								  },
								  "nodeType": "BinaryOperation",
								  "operator": "-",
								  "rightExpression": {
									"hexValue": "31",
									"id": 144,
									"isConstant": false,
									"isLValue": false,
									"isPure": true,
									"kind": "number",
									"lValueRequested": false,
									"nodeType": "Literal",
									"src": "1288:1:1",
									"typeDescriptions": {
									  "typeIdentifier": "t_rational_1_by_1",
									  "typeString": "int_const 1"
									},
									"value": "1"
								  },
								  "src": "1271:18:1",
								  "typeDescriptions": {
									"typeIdentifier": "t_int256",
									"typeString": "int256"
								  }
								},
								"src": "1256:33:1",
								"typeDescriptions": {
								  "typeIdentifier": "t_bool",
								  "typeString": "bool"
								}
							  }
							],
							"id": 147,
							"isConstant": false,
							"isInlineArray": false,
							"isLValue": false,
							"isPure": false,
							"lValueRequested": false,
							"nodeType": "TupleExpression",
							"src": "1255:35:1",
							"typeDescriptions": {
							  "typeIdentifier": "t_bool",
							  "typeString": "bool"
							}
						  },
						  "nodeType": "BinaryOperation",
						  "operator": "&&",
						  "rightExpression": {
							"commonType": {
							  "typeIdentifier": "t_enum$_ScheduleState_$44",
							  "typeString": "enum freelancer.ScheduleState"
							},
							"id": 153,
							"isConstant": false,
							"isLValue": false,
							"isPure": false,
							"lValueRequested": false,
							"leftExpression": {
							  "expression": {
								"baseExpression": {
								  "id": 148,
								  "name": "scheduleRegister",
								  "nodeType": "Identifier",
								  "overloadedDeclarations": [],
								  "referencedDeclaration": 73,
								  "src": "1294:16:1",
								  "typeDescriptions": {
									"typeIdentifier": "t_mapping$_t_int256_$_t_struct$_schedule_$58_storage_$",
									"typeString": "mapping(int256 => struct freelancer.schedule storage ref)"
								  }
								},
								"id": 150,
								"indexExpression": {
								  "id": 149,
								  "name": "_scheduleID",
								  "nodeType": "Identifier",
								  "overloadedDeclarations": [],
								  "referencedDeclaration": 136,
								  "src": "1311:11:1",
								  "typeDescriptions": {
									"typeIdentifier": "t_int256",
									"typeString": "int256"
								  }
								},
								"isConstant": false,
								"isLValue": true,
								"isPure": false,
								"lValueRequested": false,
								"nodeType": "IndexAccess",
								"src": "1294:29:1",
								"typeDescriptions": {
								  "typeIdentifier": "t_struct$_schedule_$58_storage",
								  "typeString": "struct freelancer.schedule storage ref"
								}
							  },
							  "id": 151,
							  "isConstant": false,
							  "isLValue": true,
							  "isPure": false,
							  "lValueRequested": false,
							  "memberName": "scheduleState",
							  "nodeType": "MemberAccess",
							  "referencedDeclaration": 57,
							  "src": "1294:43:1",
							  "typeDescriptions": {
								"typeIdentifier": "t_enum$_ScheduleState_$44",
								"typeString": "enum freelancer.ScheduleState"
							  }
							},
							"nodeType": "BinaryOperation",
							"operator": "==",
							"rightExpression": {
							  "id": 152,
							  "name": "_state",
							  "nodeType": "Identifier",
							  "overloadedDeclarations": [],
							  "referencedDeclaration": 139,
							  "src": "1341:6:1",
							  "typeDescriptions": {
								"typeIdentifier": "t_enum$_ScheduleState_$44",
								"typeString": "enum freelancer.ScheduleState"
							  }
							},
							"src": "1294:53:1",
							"typeDescriptions": {
							  "typeIdentifier": "t_bool",
							  "typeString": "bool"
							}
						  },
						  "src": "1255:92:1",
						  "typeDescriptions": {
							"typeIdentifier": "t_bool",
							"typeString": "bool"
						  }
						}
					  ],
					  "expression": {
						"argumentTypes": [
						  {
							"typeIdentifier": "t_bool",
							"typeString": "bool"
						  }
						],
						"id": 141,
						"name": "require",
						"nodeType": "Identifier",
						"overloadedDeclarations": [
						  4294967278,
						  4294967278
						],
						"referencedDeclaration": 4294967278,
						"src": "1247:7:1",
						"typeDescriptions": {
						  "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
						  "typeString": "function (bool) pure"
						}
					  },
					  "id": 155,
					  "isConstant": false,
					  "isLValue": false,
					  "isPure": false,
					  "kind": "functionCall",
					  "lValueRequested": false,
					  "names": [],
					  "nodeType": "FunctionCall",
					  "src": "1247:101:1",
					  "tryCall": false,
					  "typeDescriptions": {
						"typeIdentifier": "t_tuple$__$",
						"typeString": "tuple()"
					  }
					},
					"id": 156,
					"nodeType": "ExpressionStatement",
					"src": "1247:101:1"
				  },
				  {
					"id": 157,
					"nodeType": "PlaceholderStatement",
					"src": "1358:1:1"
				  }
				]
			  },
			  "id": 159,
			  "name": "inScheduleState",
			  "nodeType": "ModifierDefinition",
			  "parameters": {
				"id": 140,
				"nodeType": "ParameterList",
				"parameters": [
				  {
					"constant": false,
					"id": 136,
					"mutability": "mutable",
					"name": "_scheduleID",
					"nodeType": "VariableDeclaration",
					"scope": 159,
					"src": "1196:18:1",
					"stateVariable": false,
					"storageLocation": "default",
					"typeDescriptions": {
					  "typeIdentifier": "t_int256",
					  "typeString": "int256"
					},
					"typeName": {
					  "id": 135,
					  "name": "int256",
					  "nodeType": "ElementaryTypeName",
					  "src": "1196:6:1",
					  "typeDescriptions": {
						"typeIdentifier": "t_int256",
						"typeString": "int256"
					  }
					},
					"visibility": "internal"
				  },
				  {
					"constant": false,
					"id": 139,
					"mutability": "mutable",
					"name": "_state",
					"nodeType": "VariableDeclaration",
					"scope": 159,
					"src": "1216:20:1",
					"stateVariable": false,
					"storageLocation": "default",
					"typeDescriptions": {
					  "typeIdentifier": "t_enum$_ScheduleState_$44",
					  "typeString": "enum freelancer.ScheduleState"
					},
					"typeName": {
					  "id": 138,
					  "nodeType": "UserDefinedTypeName",
					  "pathNode": {
						"id": 137,
						"name": "ScheduleState",
						"nodeType": "IdentifierPath",
						"referencedDeclaration": 44,
						"src": "1216:13:1"
					  },
					  "referencedDeclaration": 44,
					  "src": "1216:13:1",
					  "typeDescriptions": {
						"typeIdentifier": "t_enum$_ScheduleState_$44",
						"typeString": "enum freelancer.ScheduleState"
					  }
					},
					"visibility": "internal"
				  }
				],
				"src": "1195:42:1"
			  },
			  "src": "1171:195:1",
			  "virtual": false,
			  "visibility": "internal"
			},
			{
			  "body": {
				"id": 175,
				"nodeType": "Block",
				"src": "1431:84:1",
				"statements": [
				  {
					"expression": {
					  "arguments": [
						{
						  "commonType": {
							"typeIdentifier": "t_uint256",
							"typeString": "uint256"
						  },
						  "id": 171,
						  "isConstant": false,
						  "isLValue": false,
						  "isPure": false,
						  "lValueRequested": false,
						  "leftExpression": {
							"expression": {
							  "baseExpression": {
								"id": 166,
								"name": "scheduleRegister",
								"nodeType": "Identifier",
								"overloadedDeclarations": [],
								"referencedDeclaration": 73,
								"src": "1449:16:1",
								"typeDescriptions": {
								  "typeIdentifier": "t_mapping$_t_int256_$_t_struct$_schedule_$58_storage_$",
								  "typeString": "mapping(int256 => struct freelancer.schedule storage ref)"
								}
							  },
							  "id": 168,
							  "indexExpression": {
								"id": 167,
								"name": "_scheduleID",
								"nodeType": "Identifier",
								"overloadedDeclarations": [],
								"referencedDeclaration": 161,
								"src": "1466:11:1",
								"typeDescriptions": {
								  "typeIdentifier": "t_int256",
								  "typeString": "int256"
								}
							  },
							  "isConstant": false,
							  "isLValue": true,
							  "isPure": false,
							  "lValueRequested": false,
							  "nodeType": "IndexAccess",
							  "src": "1449:29:1",
							  "typeDescriptions": {
								"typeIdentifier": "t_struct$_schedule_$58_storage",
								"typeString": "struct freelancer.schedule storage ref"
							  }
							},
							"id": 169,
							"isConstant": false,
							"isLValue": true,
							"isPure": false,
							"lValueRequested": false,
							"memberName": "value",
							"nodeType": "MemberAccess",
							"referencedDeclaration": 54,
							"src": "1449:35:1",
							"typeDescriptions": {
							  "typeIdentifier": "t_uint256",
							  "typeString": "uint256"
							}
						  },
						  "nodeType": "BinaryOperation",
						  "operator": "==",
						  "rightExpression": {
							"id": 170,
							"name": "_funding",
							"nodeType": "Identifier",
							"overloadedDeclarations": [],
							"referencedDeclaration": 163,
							"src": "1488:8:1",
							"typeDescriptions": {
							  "typeIdentifier": "t_uint256",
							  "typeString": "uint256"
							}
						  },
						  "src": "1449:47:1",
						  "typeDescriptions": {
							"typeIdentifier": "t_bool",
							"typeString": "bool"
						  }
						}
					  ],
					  "expression": {
						"argumentTypes": [
						  {
							"typeIdentifier": "t_bool",
							"typeString": "bool"
						  }
						],
						"id": 165,
						"name": "require",
						"nodeType": "Identifier",
						"overloadedDeclarations": [
						  4294967278,
						  4294967278
						],
						"referencedDeclaration": 4294967278,
						"src": "1441:7:1",
						"typeDescriptions": {
						  "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
						  "typeString": "function (bool) pure"
						}
					  },
					  "id": 172,
					  "isConstant": false,
					  "isLValue": false,
					  "isPure": false,
					  "kind": "functionCall",
					  "lValueRequested": false,
					  "names": [],
					  "nodeType": "FunctionCall",
					  "src": "1441:56:1",
					  "tryCall": false,
					  "typeDescriptions": {
						"typeIdentifier": "t_tuple$__$",
						"typeString": "tuple()"
					  }
					},
					"id": 173,
					"nodeType": "ExpressionStatement",
					"src": "1441:56:1"
				  },
				  {
					"id": 174,
					"nodeType": "PlaceholderStatement",
					"src": "1507:1:1"
				  }
				]
			  },
			  "id": 176,
			  "name": "ampleFunding",
			  "nodeType": "ModifierDefinition",
			  "parameters": {
				"id": 164,
				"nodeType": "ParameterList",
				"parameters": [
				  {
					"constant": false,
					"id": 161,
					"mutability": "mutable",
					"name": "_scheduleID",
					"nodeType": "VariableDeclaration",
					"scope": 176,
					"src": "1394:18:1",
					"stateVariable": false,
					"storageLocation": "default",
					"typeDescriptions": {
					  "typeIdentifier": "t_int256",
					  "typeString": "int256"
					},
					"typeName": {
					  "id": 160,
					  "name": "int256",
					  "nodeType": "ElementaryTypeName",
					  "src": "1394:6:1",
					  "typeDescriptions": {
						"typeIdentifier": "t_int256",
						"typeString": "int256"
					  }
					},
					"visibility": "internal"
				  },
				  {
					"constant": false,
					"id": 163,
					"mutability": "mutable",
					"name": "_funding",
					"nodeType": "VariableDeclaration",
					"scope": 176,
					"src": "1414:16:1",
					"stateVariable": false,
					"storageLocation": "default",
					"typeDescriptions": {
					  "typeIdentifier": "t_uint256",
					  "typeString": "uint256"
					},
					"typeName": {
					  "id": 162,
					  "name": "uint256",
					  "nodeType": "ElementaryTypeName",
					  "src": "1414:7:1",
					  "typeDescriptions": {
						"typeIdentifier": "t_uint256",
						"typeString": "uint256"
					  }
					},
					"visibility": "internal"
				  }
				],
				"src": "1393:38:1"
			  },
			  "src": "1372:143:1",
			  "virtual": false,
			  "visibility": "internal"
			},
			{
			  "body": {
				"id": 189,
				"nodeType": "Block",
				"src": "1543:63:1",
				"statements": [
				  {
					"expression": {
					  "arguments": [
						{
						  "commonType": {
							"typeIdentifier": "t_uint256",
							"typeString": "uint256"
						  },
						  "id": 185,
						  "isConstant": false,
						  "isLValue": false,
						  "isPure": false,
						  "lValueRequested": false,
						  "leftExpression": {
							"expression": {
							  "arguments": [
								{
								  "id": 181,
								  "name": "this",
								  "nodeType": "Identifier",
								  "overloadedDeclarations": [],
								  "referencedDeclaration": 4294967268,
								  "src": "1569:4:1",
								  "typeDescriptions": {
									"typeIdentifier": "t_contract$_freelancer_$479",
									"typeString": "contract freelancer"
								  }
								}
							  ],
							  "expression": {
								"argumentTypes": [
								  {
									"typeIdentifier": "t_contract$_freelancer_$479",
									"typeString": "contract freelancer"
								  }
								],
								"id": 180,
								"isConstant": false,
								"isLValue": false,
								"isPure": true,
								"lValueRequested": false,
								"nodeType": "ElementaryTypeNameExpression",
								"src": "1561:7:1",
								"typeDescriptions": {
								  "typeIdentifier": "t_type$_t_address_$",
								  "typeString": "type(address)"
								},
								"typeName": {
								  "id": 179,
								  "name": "address",
								  "nodeType": "ElementaryTypeName",
								  "src": "1561:7:1",
								  "typeDescriptions": {}
								}
							  },
							  "id": 182,
							  "isConstant": false,
							  "isLValue": false,
							  "isPure": false,
							  "kind": "typeConversion",
							  "lValueRequested": false,
							  "names": [],
							  "nodeType": "FunctionCall",
							  "src": "1561:13:1",
							  "tryCall": false,
							  "typeDescriptions": {
								"typeIdentifier": "t_address",
								"typeString": "address"
							  }
							},
							"id": 183,
							"isConstant": false,
							"isLValue": false,
							"isPure": false,
							"lValueRequested": false,
							"memberName": "balance",
							"nodeType": "MemberAccess",
							"src": "1561:21:1",
							"typeDescriptions": {
							  "typeIdentifier": "t_uint256",
							  "typeString": "uint256"
							}
						  },
						  "nodeType": "BinaryOperation",
						  "operator": "==",
						  "rightExpression": {
							"hexValue": "30",
							"id": 184,
							"isConstant": false,
							"isLValue": false,
							"isPure": true,
							"kind": "number",
							"lValueRequested": false,
							"nodeType": "Literal",
							"src": "1586:1:1",
							"typeDescriptions": {
							  "typeIdentifier": "t_rational_0_by_1",
							  "typeString": "int_const 0"
							},
							"value": "0"
						  },
						  "src": "1561:26:1",
						  "typeDescriptions": {
							"typeIdentifier": "t_bool",
							"typeString": "bool"
						  }
						}
					  ],
					  "expression": {
						"argumentTypes": [
						  {
							"typeIdentifier": "t_bool",
							"typeString": "bool"
						  }
						],
						"id": 178,
						"name": "require",
						"nodeType": "Identifier",
						"overloadedDeclarations": [
						  4294967278,
						  4294967278
						],
						"referencedDeclaration": 4294967278,
						"src": "1553:7:1",
						"typeDescriptions": {
						  "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
						  "typeString": "function (bool) pure"
						}
					  },
					  "id": 186,
					  "isConstant": false,
					  "isLValue": false,
					  "isPure": false,
					  "kind": "functionCall",
					  "lValueRequested": false,
					  "names": [],
					  "nodeType": "FunctionCall",
					  "src": "1553:35:1",
					  "tryCall": false,
					  "typeDescriptions": {
						"typeIdentifier": "t_tuple$__$",
						"typeString": "tuple()"
					  }
					},
					"id": 187,
					"nodeType": "ExpressionStatement",
					"src": "1553:35:1"
				  },
				  {
					"id": 188,
					"nodeType": "PlaceholderStatement",
					"src": "1598:1:1"
				  }
				]
			  },
			  "id": 190,
			  "name": "noMoreFunds",
			  "nodeType": "ModifierDefinition",
			  "parameters": {
				"id": 177,
				"nodeType": "ParameterList",
				"parameters": [],
				"src": "1541:2:1"
			  },
			  "src": "1521:85:1",
			  "virtual": false,
			  "visibility": "internal"
			},
			{
			  "anonymous": false,
			  "id": 194,
			  "name": "scheduleAdded",
			  "nodeType": "EventDefinition",
			  "parameters": {
				"id": 193,
				"nodeType": "ParameterList",
				"parameters": [
				  {
					"constant": false,
					"id": 192,
					"indexed": false,
					"mutability": "mutable",
					"name": "shortCode",
					"nodeType": "VariableDeclaration",
					"scope": 194,
					"src": "1632:16:1",
					"stateVariable": false,
					"storageLocation": "default",
					"typeDescriptions": {
					  "typeIdentifier": "t_string_memory_ptr",
					  "typeString": "string"
					},
					"typeName": {
					  "id": 191,
					  "name": "string",
					  "nodeType": "ElementaryTypeName",
					  "src": "1632:6:1",
					  "typeDescriptions": {
						"typeIdentifier": "t_string_storage_ptr",
						"typeString": "string"
					  }
					},
					"visibility": "internal"
				  }
				],
				"src": "1631:18:1"
			  },
			  "src": "1612:38:1"
			},
			{
			  "anonymous": false,
			  "id": 198,
			  "name": "projectAccepted",
			  "nodeType": "EventDefinition",
			  "parameters": {
				"id": 197,
				"nodeType": "ParameterList",
				"parameters": [
				  {
					"constant": false,
					"id": 196,
					"indexed": false,
					"mutability": "mutable",
					"name": "clientAddress",
					"nodeType": "VariableDeclaration",
					"scope": 198,
					"src": "1677:21:1",
					"stateVariable": false,
					"storageLocation": "default",
					"typeDescriptions": {
					  "typeIdentifier": "t_address",
					  "typeString": "address"
					},
					"typeName": {
					  "id": 195,
					  "name": "address",
					  "nodeType": "ElementaryTypeName",
					  "src": "1677:7:1",
					  "stateMutability": "nonpayable",
					  "typeDescriptions": {
						"typeIdentifier": "t_address",
						"typeString": "address"
					  }
					},
					"visibility": "internal"
				  }
				],
				"src": "1676:23:1"
			  },
			  "src": "1655:45:1"
			},
			{
			  "anonymous": false,
			  "id": 202,
			  "name": "taskFunded",
			  "nodeType": "EventDefinition",
			  "parameters": {
				"id": 201,
				"nodeType": "ParameterList",
				"parameters": [
				  {
					"constant": false,
					"id": 200,
					"indexed": false,
					"mutability": "mutable",
					"name": "scheduleID",
					"nodeType": "VariableDeclaration",
					"scope": 202,
					"src": "1722:17:1",
					"stateVariable": false,
					"storageLocation": "default",
					"typeDescriptions": {
					  "typeIdentifier": "t_int256",
					  "typeString": "int256"
					},
					"typeName": {
					  "id": 199,
					  "name": "int256",
					  "nodeType": "ElementaryTypeName",
					  "src": "1722:6:1",
					  "typeDescriptions": {
						"typeIdentifier": "t_int256",
						"typeString": "int256"
					  }
					},
					"visibility": "internal"
				  }
				],
				"src": "1721:19:1"
			  },
			  "src": "1705:36:1"
			},
			{
			  "anonymous": false,
			  "id": 206,
			  "name": "taskStarted",
			  "nodeType": "EventDefinition",
			  "parameters": {
				"id": 205,
				"nodeType": "ParameterList",
				"parameters": [
				  {
					"constant": false,
					"id": 204,
					"indexed": false,
					"mutability": "mutable",
					"name": "scheduleID",
					"nodeType": "VariableDeclaration",
					"scope": 206,
					"src": "1764:17:1",
					"stateVariable": false,
					"storageLocation": "default",
					"typeDescriptions": {
					  "typeIdentifier": "t_int256",
					  "typeString": "int256"
					},
					"typeName": {
					  "id": 203,
					  "name": "int256",
					  "nodeType": "ElementaryTypeName",
					  "src": "1764:6:1",
					  "typeDescriptions": {
						"typeIdentifier": "t_int256",
						"typeString": "int256"
					  }
					},
					"visibility": "internal"
				  }
				],
				"src": "1763:19:1"
			  },
			  "src": "1746:37:1"
			},
			{
			  "anonymous": false,
			  "id": 210,
			  "name": "taskApproved",
			  "nodeType": "EventDefinition",
			  "parameters": {
				"id": 209,
				"nodeType": "ParameterList",
				"parameters": [
				  {
					"constant": false,
					"id": 208,
					"indexed": false,
					"mutability": "mutable",
					"name": "scheduleID",
					"nodeType": "VariableDeclaration",
					"scope": 210,
					"src": "1807:17:1",
					"stateVariable": false,
					"storageLocation": "default",
					"typeDescriptions": {
					  "typeIdentifier": "t_int256",
					  "typeString": "int256"
					},
					"typeName": {
					  "id": 207,
					  "name": "int256",
					  "nodeType": "ElementaryTypeName",
					  "src": "1807:6:1",
					  "typeDescriptions": {
						"typeIdentifier": "t_int256",
						"typeString": "int256"
					  }
					},
					"visibility": "internal"
				  }
				],
				"src": "1806:19:1"
			  },
			  "src": "1788:38:1"
			},
			{
			  "anonymous": false,
			  "id": 216,
			  "name": "fundsReleased",
			  "nodeType": "EventDefinition",
			  "parameters": {
				"id": 215,
				"nodeType": "ParameterList",
				"parameters": [
				  {
					"constant": false,
					"id": 212,
					"indexed": false,
					"mutability": "mutable",
					"name": "scheduleID",
					"nodeType": "VariableDeclaration",
					"scope": 216,
					"src": "1851:17:1",
					"stateVariable": false,
					"storageLocation": "default",
					"typeDescriptions": {
					  "typeIdentifier": "t_int256",
					  "typeString": "int256"
					},
					"typeName": {
					  "id": 211,
					  "name": "int256",
					  "nodeType": "ElementaryTypeName",
					  "src": "1851:6:1",
					  "typeDescriptions": {
						"typeIdentifier": "t_int256",
						"typeString": "int256"
					  }
					},
					"visibility": "internal"
				  },
				  {
					"constant": false,
					"id": 214,
					"indexed": false,
					"mutability": "mutable",
					"name": "valueReleased",
					"nodeType": "VariableDeclaration",
					"scope": 216,
					"src": "1870:21:1",
					"stateVariable": false,
					"storageLocation": "default",
					"typeDescriptions": {
					  "typeIdentifier": "t_uint256",
					  "typeString": "uint256"
					},
					"typeName": {
					  "id": 213,
					  "name": "uint256",
					  "nodeType": "ElementaryTypeName",
					  "src": "1870:7:1",
					  "typeDescriptions": {
						"typeIdentifier": "t_uint256",
						"typeString": "uint256"
					  }
					},
					"visibility": "internal"
				  }
				],
				"src": "1850:42:1"
			  },
			  "src": "1831:62:1"
			},
			{
			  "anonymous": false,
			  "id": 218,
			  "name": "projectEnded",
			  "nodeType": "EventDefinition",
			  "parameters": {
				"id": 217,
				"nodeType": "ParameterList",
				"parameters": [],
				"src": "1916:2:1"
			  },
			  "src": "1898:21:1"
			},
			{
			  "body": {
				"id": 234,
				"nodeType": "Block",
				"src": "1947:103:1",
				"statements": [
				  {
					"expression": {
					  "id": 227,
					  "isConstant": false,
					  "isLValue": false,
					  "isPure": false,
					  "lValueRequested": false,
					  "leftHandSide": {
						"id": 221,
						"name": "freelancerAddress",
						"nodeType": "Identifier",
						"overloadedDeclarations": [],
						"referencedDeclaration": 63,
						"src": "1957:17:1",
						"typeDescriptions": {
						  "typeIdentifier": "t_address_payable",
						  "typeString": "address payable"
						}
					  },
					  "nodeType": "Assignment",
					  "operator": "=",
					  "rightHandSide": {
						"arguments": [
						  {
							"expression": {
							  "id": 224,
							  "name": "msg",
							  "nodeType": "Identifier",
							  "overloadedDeclarations": [],
							  "referencedDeclaration": 4294967281,
							  "src": "1985:3:1",
							  "typeDescriptions": {
								"typeIdentifier": "t_magic_message",
								"typeString": "msg"
							  }
							},
							"id": 225,
							"isConstant": false,
							"isLValue": false,
							"isPure": false,
							"lValueRequested": false,
							"memberName": "sender",
							"nodeType": "MemberAccess",
							"src": "1985:10:1",
							"typeDescriptions": {
							  "typeIdentifier": "t_address",
							  "typeString": "address"
							}
						  }
						],
						"expression": {
						  "argumentTypes": [
							{
							  "typeIdentifier": "t_address",
							  "typeString": "address"
							}
						  ],
						  "id": 223,
						  "isConstant": false,
						  "isLValue": false,
						  "isPure": true,
						  "lValueRequested": false,
						  "nodeType": "ElementaryTypeNameExpression",
						  "src": "1977:8:1",
						  "typeDescriptions": {
							"typeIdentifier": "t_type$_t_address_payable_$",
							"typeString": "type(address payable)"
						  },
						  "typeName": {
							"id": 222,
							"name": "address",
							"nodeType": "ElementaryTypeName",
							"src": "1977:8:1",
							"stateMutability": "payable",
							"typeDescriptions": {}
						  }
						},
						"id": 226,
						"isConstant": false,
						"isLValue": false,
						"isPure": false,
						"kind": "typeConversion",
						"lValueRequested": false,
						"names": [],
						"nodeType": "FunctionCall",
						"src": "1977:19:1",
						"tryCall": false,
						"typeDescriptions": {
						  "typeIdentifier": "t_address_payable",
						  "typeString": "address payable"
						}
					  },
					  "src": "1957:39:1",
					  "typeDescriptions": {
						"typeIdentifier": "t_address_payable",
						"typeString": "address payable"
					  }
					},
					"id": 228,
					"nodeType": "ExpressionStatement",
					"src": "1957:39:1"
				  },
				  {
					"expression": {
					  "id": 232,
					  "isConstant": false,
					  "isLValue": false,
					  "isPure": false,
					  "lValueRequested": false,
					  "leftHandSide": {
						"id": 229,
						"name": "projectState",
						"nodeType": "Identifier",
						"overloadedDeclarations": [],
						"referencedDeclaration": 68,
						"src": "2006:12:1",
						"typeDescriptions": {
						  "typeIdentifier": "t_enum$_ProjectState_$48",
						  "typeString": "enum freelancer.ProjectState"
						}
					  },
					  "nodeType": "Assignment",
					  "operator": "=",
					  "rightHandSide": {
						"expression": {
						  "id": 230,
						  "name": "ProjectState",
						  "nodeType": "Identifier",
						  "overloadedDeclarations": [],
						  "referencedDeclaration": 48,
						  "src": "2021:12:1",
						  "typeDescriptions": {
							"typeIdentifier": "t_type$_t_enum$_ProjectState_$48_$",
							"typeString": "type(enum freelancer.ProjectState)"
						  }
						},
						"id": 231,
						"isConstant": false,
						"isLValue": false,
						"isPure": true,
						"lValueRequested": false,
						"memberName": "initiated",
						"nodeType": "MemberAccess",
						"src": "2021:22:1",
						"typeDescriptions": {
						  "typeIdentifier": "t_enum$_ProjectState_$48",
						  "typeString": "enum freelancer.ProjectState"
						}
					  },
					  "src": "2006:37:1",
					  "typeDescriptions": {
						"typeIdentifier": "t_enum$_ProjectState_$48",
						"typeString": "enum freelancer.ProjectState"
					  }
					},
					"id": 233,
					"nodeType": "ExpressionStatement",
					"src": "2006:37:1"
				  }
				]
			  },
			  "id": 235,
			  "implemented": true,
			  "kind": "constructor",
			  "modifiers": [],
			  "name": "",
			  "nodeType": "FunctionDefinition",
			  "parameters": {
				"id": 219,
				"nodeType": "ParameterList",
				"parameters": [],
				"src": "1940:2:1"
			  },
			  "returnParameters": {
				"id": 220,
				"nodeType": "ParameterList",
				"parameters": [],
				"src": "1947:0:1"
			  },
			  "scope": 479,
			  "src": "1929:121:1",
			  "stateMutability": "nonpayable",
			  "virtual": false,
			  "visibility": "public"
			},
			{
			  "body": {
				"id": 292,
				"nodeType": "Block",
				"src": "2240:293:1",
				"statements": [
				  {
					"assignments": [
					  252
					],
					"declarations": [
					  {
						"constant": false,
						"id": 252,
						"mutability": "mutable",
						"name": "s",
						"nodeType": "VariableDeclaration",
						"scope": 292,
						"src": "2250:17:1",
						"stateVariable": false,
						"storageLocation": "memory",
						"typeDescriptions": {
						  "typeIdentifier": "t_struct$_schedule_$58_memory_ptr",
						  "typeString": "struct freelancer.schedule"
						},
						"typeName": {
						  "id": 251,
						  "nodeType": "UserDefinedTypeName",
						  "pathNode": {
							"id": 250,
							"name": "schedule",
							"nodeType": "IdentifierPath",
							"referencedDeclaration": 58,
							"src": "2250:8:1"
						  },
						  "referencedDeclaration": 58,
						  "src": "2250:8:1",
						  "typeDescriptions": {
							"typeIdentifier": "t_struct$_schedule_$58_storage_ptr",
							"typeString": "struct freelancer.schedule"
						  }
						},
						"visibility": "internal"
					  }
					],
					"id": 253,
					"nodeType": "VariableDeclarationStatement",
					"src": "2250:17:1"
				  },
				  {
					"expression": {
					  "id": 258,
					  "isConstant": false,
					  "isLValue": false,
					  "isPure": false,
					  "lValueRequested": false,
					  "leftHandSide": {
						"expression": {
						  "id": 254,
						  "name": "s",
						  "nodeType": "Identifier",
						  "overloadedDeclarations": [],
						  "referencedDeclaration": 252,
						  "src": "2277:1:1",
						  "typeDescriptions": {
							"typeIdentifier": "t_struct$_schedule_$58_memory_ptr",
							"typeString": "struct freelancer.schedule memory"
						  }
						},
						"id": 256,
						"isConstant": false,
						"isLValue": true,
						"isPure": false,
						"lValueRequested": true,
						"memberName": "shortCode",
						"nodeType": "MemberAccess",
						"referencedDeclaration": 50,
						"src": "2277:11:1",
						"typeDescriptions": {
						  "typeIdentifier": "t_string_memory_ptr",
						  "typeString": "string memory"
						}
					  },
					  "nodeType": "Assignment",
					  "operator": "=",
					  "rightHandSide": {
						"id": 257,
						"name": "_shortCode",
						"nodeType": "Identifier",
						"overloadedDeclarations": [],
						"referencedDeclaration": 237,
						"src": "2291:10:1",
						"typeDescriptions": {
						  "typeIdentifier": "t_string_memory_ptr",
						  "typeString": "string memory"
						}
					  },
					  "src": "2277:24:1",
					  "typeDescriptions": {
						"typeIdentifier": "t_string_memory_ptr",
						"typeString": "string memory"
					  }
					},
					"id": 259,
					"nodeType": "ExpressionStatement",
					"src": "2277:24:1"
				  },
				  {
					"expression": {
					  "id": 264,
					  "isConstant": false,
					  "isLValue": false,
					  "isPure": false,
					  "lValueRequested": false,
					  "leftHandSide": {
						"expression": {
						  "id": 260,
						  "name": "s",
						  "nodeType": "Identifier",
						  "overloadedDeclarations": [],
						  "referencedDeclaration": 252,
						  "src": "2311:1:1",
						  "typeDescriptions": {
							"typeIdentifier": "t_struct$_schedule_$58_memory_ptr",
							"typeString": "struct freelancer.schedule memory"
						  }
						},
						"id": 262,
						"isConstant": false,
						"isLValue": true,
						"isPure": false,
						"lValueRequested": true,
						"memberName": "description",
						"nodeType": "MemberAccess",
						"referencedDeclaration": 52,
						"src": "2311:13:1",
						"typeDescriptions": {
						  "typeIdentifier": "t_string_memory_ptr",
						  "typeString": "string memory"
						}
					  },
					  "nodeType": "Assignment",
					  "operator": "=",
					  "rightHandSide": {
						"id": 263,
						"name": "_description",
						"nodeType": "Identifier",
						"overloadedDeclarations": [],
						"referencedDeclaration": 239,
						"src": "2327:12:1",
						"typeDescriptions": {
						  "typeIdentifier": "t_string_memory_ptr",
						  "typeString": "string memory"
						}
					  },
					  "src": "2311:28:1",
					  "typeDescriptions": {
						"typeIdentifier": "t_string_memory_ptr",
						"typeString": "string memory"
					  }
					},
					"id": 265,
					"nodeType": "ExpressionStatement",
					"src": "2311:28:1"
				  },
				  {
					"expression": {
					  "id": 271,
					  "isConstant": false,
					  "isLValue": false,
					  "isPure": false,
					  "lValueRequested": false,
					  "leftHandSide": {
						"expression": {
						  "id": 266,
						  "name": "s",
						  "nodeType": "Identifier",
						  "overloadedDeclarations": [],
						  "referencedDeclaration": 252,
						  "src": "2349:1:1",
						  "typeDescriptions": {
							"typeIdentifier": "t_struct$_schedule_$58_memory_ptr",
							"typeString": "struct freelancer.schedule memory"
						  }
						},
						"id": 268,
						"isConstant": false,
						"isLValue": true,
						"isPure": false,
						"lValueRequested": true,
						"memberName": "scheduleState",
						"nodeType": "MemberAccess",
						"referencedDeclaration": 57,
						"src": "2349:15:1",
						"typeDescriptions": {
						  "typeIdentifier": "t_enum$_ScheduleState_$44",
						  "typeString": "enum freelancer.ScheduleState"
						}
					  },
					  "nodeType": "Assignment",
					  "operator": "=",
					  "rightHandSide": {
						"expression": {
						  "id": 269,
						  "name": "ScheduleState",
						  "nodeType": "Identifier",
						  "overloadedDeclarations": [],
						  "referencedDeclaration": 44,
						  "src": "2367:13:1",
						  "typeDescriptions": {
							"typeIdentifier": "t_type$_t_enum$_ScheduleState_$44_$",
							"typeString": "type(enum freelancer.ScheduleState)"
						  }
						},
						"id": 270,
						"isConstant": false,
						"isLValue": false,
						"isPure": true,
						"lValueRequested": false,
						"memberName": "planned",
						"nodeType": "MemberAccess",
						"src": "2367:21:1",
						"typeDescriptions": {
						  "typeIdentifier": "t_enum$_ScheduleState_$44",
						  "typeString": "enum freelancer.ScheduleState"
						}
					  },
					  "src": "2349:39:1",
					  "typeDescriptions": {
						"typeIdentifier": "t_enum$_ScheduleState_$44",
						"typeString": "enum freelancer.ScheduleState"
					  }
					},
					"id": 272,
					"nodeType": "ExpressionStatement",
					"src": "2349:39:1"
				  },
				  {
					"expression": {
					  "id": 277,
					  "isConstant": false,
					  "isLValue": false,
					  "isPure": false,
					  "lValueRequested": false,
					  "leftHandSide": {
						"expression": {
						  "id": 273,
						  "name": "s",
						  "nodeType": "Identifier",
						  "overloadedDeclarations": [],
						  "referencedDeclaration": 252,
						  "src": "2398:1:1",
						  "typeDescriptions": {
							"typeIdentifier": "t_struct$_schedule_$58_memory_ptr",
							"typeString": "struct freelancer.schedule memory"
						  }
						},
						"id": 275,
						"isConstant": false,
						"isLValue": true,
						"isPure": false,
						"lValueRequested": true,
						"memberName": "value",
						"nodeType": "MemberAccess",
						"referencedDeclaration": 54,
						"src": "2398:7:1",
						"typeDescriptions": {
						  "typeIdentifier": "t_uint256",
						  "typeString": "uint256"
						}
					  },
					  "nodeType": "Assignment",
					  "operator": "=",
					  "rightHandSide": {
						"id": 276,
						"name": "_value",
						"nodeType": "Identifier",
						"overloadedDeclarations": [],
						"referencedDeclaration": 241,
						"src": "2408:6:1",
						"typeDescriptions": {
						  "typeIdentifier": "t_uint256",
						  "typeString": "uint256"
						}
					  },
					  "src": "2398:16:1",
					  "typeDescriptions": {
						"typeIdentifier": "t_uint256",
						"typeString": "uint256"
					  }
					},
					"id": 278,
					"nodeType": "ExpressionStatement",
					"src": "2398:16:1"
				  },
				  {
					"expression": {
					  "id": 283,
					  "isConstant": false,
					  "isLValue": false,
					  "isPure": false,
					  "lValueRequested": false,
					  "leftHandSide": {
						"baseExpression": {
						  "id": 279,
						  "name": "scheduleRegister",
						  "nodeType": "Identifier",
						  "overloadedDeclarations": [],
						  "referencedDeclaration": 73,
						  "src": "2424:16:1",
						  "typeDescriptions": {
							"typeIdentifier": "t_mapping$_t_int256_$_t_struct$_schedule_$58_storage_$",
							"typeString": "mapping(int256 => struct freelancer.schedule storage ref)"
						  }
						},
						"id": 281,
						"indexExpression": {
						  "id": 280,
						  "name": "totalSchedules",
						  "nodeType": "Identifier",
						  "overloadedDeclarations": [],
						  "referencedDeclaration": 61,
						  "src": "2441:14:1",
						  "typeDescriptions": {
							"typeIdentifier": "t_int256",
							"typeString": "int256"
						  }
						},
						"isConstant": false,
						"isLValue": true,
						"isPure": false,
						"lValueRequested": true,
						"nodeType": "IndexAccess",
						"src": "2424:32:1",
						"typeDescriptions": {
						  "typeIdentifier": "t_struct$_schedule_$58_storage",
						  "typeString": "struct freelancer.schedule storage ref"
						}
					  },
					  "nodeType": "Assignment",
					  "operator": "=",
					  "rightHandSide": {
						"id": 282,
						"name": "s",
						"nodeType": "Identifier",
						"overloadedDeclarations": [],
						"referencedDeclaration": 252,
						"src": "2459:1:1",
						"typeDescriptions": {
						  "typeIdentifier": "t_struct$_schedule_$58_memory_ptr",
						  "typeString": "struct freelancer.schedule memory"
						}
					  },
					  "src": "2424:36:1",
					  "typeDescriptions": {
						"typeIdentifier": "t_struct$_schedule_$58_storage",
						"typeString": "struct freelancer.schedule storage ref"
					  }
					},
					"id": 284,
					"nodeType": "ExpressionStatement",
					"src": "2424:36:1"
				  },
				  {
					"expression": {
					  "id": 286,
					  "isConstant": false,
					  "isLValue": false,
					  "isPure": false,
					  "lValueRequested": false,
					  "nodeType": "UnaryOperation",
					  "operator": "++",
					  "prefix": false,
					  "src": "2470:16:1",
					  "subExpression": {
						"id": 285,
						"name": "totalSchedules",
						"nodeType": "Identifier",
						"overloadedDeclarations": [],
						"referencedDeclaration": 61,
						"src": "2470:14:1",
						"typeDescriptions": {
						  "typeIdentifier": "t_int256",
						  "typeString": "int256"
						}
					  },
					  "typeDescriptions": {
						"typeIdentifier": "t_int256",
						"typeString": "int256"
					  }
					},
					"id": 287,
					"nodeType": "ExpressionStatement",
					"src": "2470:16:1"
				  },
				  {
					"eventCall": {
					  "arguments": [
						{
						  "id": 289,
						  "name": "_shortCode",
						  "nodeType": "Identifier",
						  "overloadedDeclarations": [],
						  "referencedDeclaration": 237,
						  "src": "2515:10:1",
						  "typeDescriptions": {
							"typeIdentifier": "t_string_memory_ptr",
							"typeString": "string memory"
						  }
						}
					  ],
					  "expression": {
						"argumentTypes": [
						  {
							"typeIdentifier": "t_string_memory_ptr",
							"typeString": "string memory"
						  }
						],
						"id": 288,
						"name": "scheduleAdded",
						"nodeType": "Identifier",
						"overloadedDeclarations": [],
						"referencedDeclaration": 194,
						"src": "2501:13:1",
						"typeDescriptions": {
						  "typeIdentifier": "t_function_event_nonpayable$_t_string_memory_ptr_$returns$__$",
						  "typeString": "function (string memory)"
						}
					  },
					  "id": 290,
					  "isConstant": false,
					  "isLValue": false,
					  "isPure": false,
					  "kind": "functionCall",
					  "lValueRequested": false,
					  "names": [],
					  "nodeType": "FunctionCall",
					  "src": "2501:25:1",
					  "tryCall": false,
					  "typeDescriptions": {
						"typeIdentifier": "t_tuple$__$",
						"typeString": "tuple()"
					  }
					},
					"id": 291,
					"nodeType": "EmitStatement",
					"src": "2496:30:1"
				  }
				]
			  },
			  "functionSelector": "84bf66ac",
			  "id": 293,
			  "implemented": true,
			  "kind": "function",
			  "modifiers": [
				{
				  "arguments": [
					{
					  "expression": {
						"id": 244,
						"name": "ProjectState",
						"nodeType": "Identifier",
						"overloadedDeclarations": [],
						"referencedDeclaration": 48,
						"src": "2189:12:1",
						"typeDescriptions": {
						  "typeIdentifier": "t_type$_t_enum$_ProjectState_$48_$",
						  "typeString": "type(enum freelancer.ProjectState)"
						}
					  },
					  "id": 245,
					  "isConstant": false,
					  "isLValue": false,
					  "isPure": true,
					  "lValueRequested": false,
					  "memberName": "initiated",
					  "nodeType": "MemberAccess",
					  "src": "2189:22:1",
					  "typeDescriptions": {
						"typeIdentifier": "t_enum$_ProjectState_$48",
						"typeString": "enum freelancer.ProjectState"
					  }
					}
				  ],
				  "id": 246,
				  "modifierName": {
					"id": 243,
					"name": "inProjectState",
					"nodeType": "IdentifierPath",
					"referencedDeclaration": 134,
					"src": "2174:14:1"
				  },
				  "nodeType": "ModifierInvocation",
				  "src": "2174:38:1"
				},
				{
				  "id": 248,
				  "modifierName": {
					"id": 247,
					"name": "onlyFreelancer",
					"nodeType": "IdentifierPath",
					"referencedDeclaration": 94,
					"src": "2221:14:1"
				  },
				  "nodeType": "ModifierInvocation",
				  "src": "2221:14:1"
				}
			  ],
			  "name": "addSchedule",
			  "nodeType": "FunctionDefinition",
			  "parameters": {
				"id": 242,
				"nodeType": "ParameterList",
				"parameters": [
				  {
					"constant": false,
					"id": 237,
					"mutability": "mutable",
					"name": "_shortCode",
					"nodeType": "VariableDeclaration",
					"scope": 293,
					"src": "2081:24:1",
					"stateVariable": false,
					"storageLocation": "memory",
					"typeDescriptions": {
					  "typeIdentifier": "t_string_memory_ptr",
					  "typeString": "string"
					},
					"typeName": {
					  "id": 236,
					  "name": "string",
					  "nodeType": "ElementaryTypeName",
					  "src": "2081:6:1",
					  "typeDescriptions": {
						"typeIdentifier": "t_string_storage_ptr",
						"typeString": "string"
					  }
					},
					"visibility": "internal"
				  },
				  {
					"constant": false,
					"id": 239,
					"mutability": "mutable",
					"name": "_description",
					"nodeType": "VariableDeclaration",
					"scope": 293,
					"src": "2107:26:1",
					"stateVariable": false,
					"storageLocation": "memory",
					"typeDescriptions": {
					  "typeIdentifier": "t_string_memory_ptr",
					  "typeString": "string"
					},
					"typeName": {
					  "id": 238,
					  "name": "string",
					  "nodeType": "ElementaryTypeName",
					  "src": "2107:6:1",
					  "typeDescriptions": {
						"typeIdentifier": "t_string_storage_ptr",
						"typeString": "string"
					  }
					},
					"visibility": "internal"
				  },
				  {
					"constant": false,
					"id": 241,
					"mutability": "mutable",
					"name": "_value",
					"nodeType": "VariableDeclaration",
					"scope": 293,
					"src": "2135:14:1",
					"stateVariable": false,
					"storageLocation": "default",
					"typeDescriptions": {
					  "typeIdentifier": "t_uint256",
					  "typeString": "uint256"
					},
					"typeName": {
					  "id": 240,
					  "name": "uint256",
					  "nodeType": "ElementaryTypeName",
					  "src": "2135:7:1",
					  "typeDescriptions": {
						"typeIdentifier": "t_uint256",
						"typeString": "uint256"
					  }
					},
					"visibility": "internal"
				  }
				],
				"src": "2080:70:1"
			  },
			  "returnParameters": {
				"id": 249,
				"nodeType": "ParameterList",
				"parameters": [],
				"src": "2240:0:1"
			  },
			  "scope": 479,
			  "src": "2060:473:1",
			  "stateMutability": "nonpayable",
			  "virtual": false,
			  "visibility": "public"
			},
			{
			  "body": {
				"id": 315,
				"nodeType": "Block",
				"src": "2634:131:1",
				"statements": [
				  {
					"expression": {
					  "id": 303,
					  "isConstant": false,
					  "isLValue": false,
					  "isPure": false,
					  "lValueRequested": false,
					  "leftHandSide": {
						"id": 300,
						"name": "clientAddress",
						"nodeType": "Identifier",
						"overloadedDeclarations": [],
						"referencedDeclaration": 65,
						"src": "2644:13:1",
						"typeDescriptions": {
						  "typeIdentifier": "t_address",
						  "typeString": "address"
						}
					  },
					  "nodeType": "Assignment",
					  "operator": "=",
					  "rightHandSide": {
						"expression": {
						  "id": 301,
						  "name": "msg",
						  "nodeType": "Identifier",
						  "overloadedDeclarations": [],
						  "referencedDeclaration": 4294967281,
						  "src": "2660:3:1",
						  "typeDescriptions": {
							"typeIdentifier": "t_magic_message",
							"typeString": "msg"
						  }
						},
						"id": 302,
						"isConstant": false,
						"isLValue": false,
						"isPure": false,
						"lValueRequested": false,
						"memberName": "sender",
						"nodeType": "MemberAccess",
						"src": "2660:10:1",
						"typeDescriptions": {
						  "typeIdentifier": "t_address",
						  "typeString": "address"
						}
					  },
					  "src": "2644:26:1",
					  "typeDescriptions": {
						"typeIdentifier": "t_address",
						"typeString": "address"
					  }
					},
					"id": 304,
					"nodeType": "ExpressionStatement",
					"src": "2644:26:1"
				  },
				  {
					"expression": {
					  "id": 308,
					  "isConstant": false,
					  "isLValue": false,
					  "isPure": false,
					  "lValueRequested": false,
					  "leftHandSide": {
						"id": 305,
						"name": "projectState",
						"nodeType": "Identifier",
						"overloadedDeclarations": [],
						"referencedDeclaration": 68,
						"src": "2680:12:1",
						"typeDescriptions": {
						  "typeIdentifier": "t_enum$_ProjectState_$48",
						  "typeString": "enum freelancer.ProjectState"
						}
					  },
					  "nodeType": "Assignment",
					  "operator": "=",
					  "rightHandSide": {
						"expression": {
						  "id": 306,
						  "name": "ProjectState",
						  "nodeType": "Identifier",
						  "overloadedDeclarations": [],
						  "referencedDeclaration": 48,
						  "src": "2695:12:1",
						  "typeDescriptions": {
							"typeIdentifier": "t_type$_t_enum$_ProjectState_$48_$",
							"typeString": "type(enum freelancer.ProjectState)"
						  }
						},
						"id": 307,
						"isConstant": false,
						"isLValue": false,
						"isPure": true,
						"lValueRequested": false,
						"memberName": "accepted",
						"nodeType": "MemberAccess",
						"src": "2695:21:1",
						"typeDescriptions": {
						  "typeIdentifier": "t_enum$_ProjectState_$48",
						  "typeString": "enum freelancer.ProjectState"
						}
					  },
					  "src": "2680:36:1",
					  "typeDescriptions": {
						"typeIdentifier": "t_enum$_ProjectState_$48",
						"typeString": "enum freelancer.ProjectState"
					  }
					},
					"id": 309,
					"nodeType": "ExpressionStatement",
					"src": "2680:36:1"
				  },
				  {
					"eventCall": {
					  "arguments": [
						{
						  "expression": {
							"id": 311,
							"name": "msg",
							"nodeType": "Identifier",
							"overloadedDeclarations": [],
							"referencedDeclaration": 4294967281,
							"src": "2747:3:1",
							"typeDescriptions": {
							  "typeIdentifier": "t_magic_message",
							  "typeString": "msg"
							}
						  },
						  "id": 312,
						  "isConstant": false,
						  "isLValue": false,
						  "isPure": false,
						  "lValueRequested": false,
						  "memberName": "sender",
						  "nodeType": "MemberAccess",
						  "src": "2747:10:1",
						  "typeDescriptions": {
							"typeIdentifier": "t_address",
							"typeString": "address"
						  }
						}
					  ],
					  "expression": {
						"argumentTypes": [
						  {
							"typeIdentifier": "t_address",
							"typeString": "address"
						  }
						],
						"id": 310,
						"name": "projectAccepted",
						"nodeType": "Identifier",
						"overloadedDeclarations": [],
						"referencedDeclaration": 198,
						"src": "2731:15:1",
						"typeDescriptions": {
						  "typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
						  "typeString": "function (address)"
						}
					  },
					  "id": 313,
					  "isConstant": false,
					  "isLValue": false,
					  "isPure": false,
					  "kind": "functionCall",
					  "lValueRequested": false,
					  "names": [],
					  "nodeType": "FunctionCall",
					  "src": "2731:27:1",
					  "tryCall": false,
					  "typeDescriptions": {
						"typeIdentifier": "t_tuple$__$",
						"typeString": "tuple()"
					  }
					},
					"id": 314,
					"nodeType": "EmitStatement",
					"src": "2726:32:1"
				  }
				]
			  },
			  "functionSelector": "c916b6de",
			  "id": 316,
			  "implemented": true,
			  "kind": "function",
			  "modifiers": [
				{
				  "arguments": [
					{
					  "expression": {
						"id": 296,
						"name": "ProjectState",
						"nodeType": "Identifier",
						"overloadedDeclarations": [],
						"referencedDeclaration": 48,
						"src": "2606:12:1",
						"typeDescriptions": {
						  "typeIdentifier": "t_type$_t_enum$_ProjectState_$48_$",
						  "typeString": "type(enum freelancer.ProjectState)"
						}
					  },
					  "id": 297,
					  "isConstant": false,
					  "isLValue": false,
					  "isPure": true,
					  "lValueRequested": false,
					  "memberName": "initiated",
					  "nodeType": "MemberAccess",
					  "src": "2606:22:1",
					  "typeDescriptions": {
						"typeIdentifier": "t_enum$_ProjectState_$48",
						"typeString": "enum freelancer.ProjectState"
					  }
					}
				  ],
				  "id": 298,
				  "modifierName": {
					"id": 295,
					"name": "inProjectState",
					"nodeType": "IdentifierPath",
					"referencedDeclaration": 134,
					"src": "2591:14:1"
				  },
				  "nodeType": "ModifierInvocation",
				  "src": "2591:38:1"
				}
			  ],
			  "name": "acceptProject",
			  "nodeType": "FunctionDefinition",
			  "parameters": {
				"id": 294,
				"nodeType": "ParameterList",
				"parameters": [],
				"src": "2565:2:1"
			  },
			  "returnParameters": {
				"id": 299,
				"nodeType": "ParameterList",
				"parameters": [],
				"src": "2634:0:1"
			  },
			  "scope": 479,
			  "src": "2543:222:1",
			  "stateMutability": "nonpayable",
			  "virtual": false,
			  "visibility": "public"
			},
			{
			  "body": {
				"id": 349,
				"nodeType": "Block",
				"src": "3018:121:1",
				"statements": [
				  {
					"expression": {
					  "id": 343,
					  "isConstant": false,
					  "isLValue": false,
					  "isPure": false,
					  "lValueRequested": false,
					  "leftHandSide": {
						"expression": {
						  "baseExpression": {
							"id": 337,
							"name": "scheduleRegister",
							"nodeType": "Identifier",
							"overloadedDeclarations": [],
							"referencedDeclaration": 73,
							"src": "3028:16:1",
							"typeDescriptions": {
							  "typeIdentifier": "t_mapping$_t_int256_$_t_struct$_schedule_$58_storage_$",
							  "typeString": "mapping(int256 => struct freelancer.schedule storage ref)"
							}
						  },
						  "id": 339,
						  "indexExpression": {
							"id": 338,
							"name": "_scheduleID",
							"nodeType": "Identifier",
							"overloadedDeclarations": [],
							"referencedDeclaration": 318,
							"src": "3045:11:1",
							"typeDescriptions": {
							  "typeIdentifier": "t_int256",
							  "typeString": "int256"
							}
						  },
						  "isConstant": false,
						  "isLValue": true,
						  "isPure": false,
						  "lValueRequested": false,
						  "nodeType": "IndexAccess",
						  "src": "3028:29:1",
						  "typeDescriptions": {
							"typeIdentifier": "t_struct$_schedule_$58_storage",
							"typeString": "struct freelancer.schedule storage ref"
						  }
						},
						"id": 340,
						"isConstant": false,
						"isLValue": true,
						"isPure": false,
						"lValueRequested": true,
						"memberName": "scheduleState",
						"nodeType": "MemberAccess",
						"referencedDeclaration": 57,
						"src": "3028:43:1",
						"typeDescriptions": {
						  "typeIdentifier": "t_enum$_ScheduleState_$44",
						  "typeString": "enum freelancer.ScheduleState"
						}
					  },
					  "nodeType": "Assignment",
					  "operator": "=",
					  "rightHandSide": {
						"expression": {
						  "id": 341,
						  "name": "ScheduleState",
						  "nodeType": "Identifier",
						  "overloadedDeclarations": [],
						  "referencedDeclaration": 44,
						  "src": "3074:13:1",
						  "typeDescriptions": {
							"typeIdentifier": "t_type$_t_enum$_ScheduleState_$44_$",
							"typeString": "type(enum freelancer.ScheduleState)"
						  }
						},
						"id": 342,
						"isConstant": false,
						"isLValue": false,
						"isPure": true,
						"lValueRequested": false,
						"memberName": "funded",
						"nodeType": "MemberAccess",
						"src": "3074:20:1",
						"typeDescriptions": {
						  "typeIdentifier": "t_enum$_ScheduleState_$44",
						  "typeString": "enum freelancer.ScheduleState"
						}
					  },
					  "src": "3028:66:1",
					  "typeDescriptions": {
						"typeIdentifier": "t_enum$_ScheduleState_$44",
						"typeString": "enum freelancer.ScheduleState"
					  }
					},
					"id": 344,
					"nodeType": "ExpressionStatement",
					"src": "3028:66:1"
				  },
				  {
					"eventCall": {
					  "arguments": [
						{
						  "id": 346,
						  "name": "_scheduleID",
						  "nodeType": "Identifier",
						  "overloadedDeclarations": [],
						  "referencedDeclaration": 318,
						  "src": "3120:11:1",
						  "typeDescriptions": {
							"typeIdentifier": "t_int256",
							"typeString": "int256"
						  }
						}
					  ],
					  "expression": {
						"argumentTypes": [
						  {
							"typeIdentifier": "t_int256",
							"typeString": "int256"
						  }
						],
						"id": 345,
						"name": "taskFunded",
						"nodeType": "Identifier",
						"overloadedDeclarations": [],
						"referencedDeclaration": 202,
						"src": "3109:10:1",
						"typeDescriptions": {
						  "typeIdentifier": "t_function_event_nonpayable$_t_int256_$returns$__$",
						  "typeString": "function (int256)"
						}
					  },
					  "id": 347,
					  "isConstant": false,
					  "isLValue": false,
					  "isPure": false,
					  "kind": "functionCall",
					  "lValueRequested": false,
					  "names": [],
					  "nodeType": "FunctionCall",
					  "src": "3109:23:1",
					  "tryCall": false,
					  "typeDescriptions": {
						"typeIdentifier": "t_tuple$__$",
						"typeString": "tuple()"
					  }
					},
					"id": 348,
					"nodeType": "EmitStatement",
					"src": "3104:28:1"
				  }
				]
			  },
			  "functionSelector": "054f84ed",
			  "id": 350,
			  "implemented": true,
			  "kind": "function",
			  "modifiers": [
				{
				  "arguments": [
					{
					  "expression": {
						"id": 321,
						"name": "ProjectState",
						"nodeType": "Identifier",
						"overloadedDeclarations": [],
						"referencedDeclaration": 48,
						"src": "2867:12:1",
						"typeDescriptions": {
						  "typeIdentifier": "t_type$_t_enum$_ProjectState_$48_$",
						  "typeString": "type(enum freelancer.ProjectState)"
						}
					  },
					  "id": 322,
					  "isConstant": false,
					  "isLValue": false,
					  "isPure": true,
					  "lValueRequested": false,
					  "memberName": "accepted",
					  "nodeType": "MemberAccess",
					  "src": "2867:21:1",
					  "typeDescriptions": {
						"typeIdentifier": "t_enum$_ProjectState_$48",
						"typeString": "enum freelancer.ProjectState"
					  }
					}
				  ],
				  "id": 323,
				  "modifierName": {
					"id": 320,
					"name": "inProjectState",
					"nodeType": "IdentifierPath",
					"referencedDeclaration": 134,
					"src": "2852:14:1"
				  },
				  "nodeType": "ModifierInvocation",
				  "src": "2852:37:1"
				},
				{
				  "arguments": [
					{
					  "id": 325,
					  "name": "_scheduleID",
					  "nodeType": "Identifier",
					  "overloadedDeclarations": [],
					  "referencedDeclaration": 318,
					  "src": "2914:11:1",
					  "typeDescriptions": {
						"typeIdentifier": "t_int256",
						"typeString": "int256"
					  }
					},
					{
					  "expression": {
						"id": 326,
						"name": "ScheduleState",
						"nodeType": "Identifier",
						"overloadedDeclarations": [],
						"referencedDeclaration": 44,
						"src": "2927:13:1",
						"typeDescriptions": {
						  "typeIdentifier": "t_type$_t_enum$_ScheduleState_$44_$",
						  "typeString": "type(enum freelancer.ScheduleState)"
						}
					  },
					  "id": 327,
					  "isConstant": false,
					  "isLValue": false,
					  "isPure": true,
					  "lValueRequested": false,
					  "memberName": "planned",
					  "nodeType": "MemberAccess",
					  "src": "2927:21:1",
					  "typeDescriptions": {
						"typeIdentifier": "t_enum$_ScheduleState_$44",
						"typeString": "enum freelancer.ScheduleState"
					  }
					}
				  ],
				  "id": 328,
				  "modifierName": {
					"id": 324,
					"name": "inScheduleState",
					"nodeType": "IdentifierPath",
					"referencedDeclaration": 159,
					"src": "2898:15:1"
				  },
				  "nodeType": "ModifierInvocation",
				  "src": "2898:51:1"
				},
				{
				  "arguments": [
					{
					  "id": 330,
					  "name": "_scheduleID",
					  "nodeType": "Identifier",
					  "overloadedDeclarations": [],
					  "referencedDeclaration": 318,
					  "src": "2971:11:1",
					  "typeDescriptions": {
						"typeIdentifier": "t_int256",
						"typeString": "int256"
					  }
					},
					{
					  "expression": {
						"id": 331,
						"name": "msg",
						"nodeType": "Identifier",
						"overloadedDeclarations": [],
						"referencedDeclaration": 4294967281,
						"src": "2984:3:1",
						"typeDescriptions": {
						  "typeIdentifier": "t_magic_message",
						  "typeString": "msg"
						}
					  },
					  "id": 332,
					  "isConstant": false,
					  "isLValue": false,
					  "isPure": false,
					  "lValueRequested": false,
					  "memberName": "value",
					  "nodeType": "MemberAccess",
					  "src": "2984:9:1",
					  "typeDescriptions": {
						"typeIdentifier": "t_uint256",
						"typeString": "uint256"
					  }
					}
				  ],
				  "id": 333,
				  "modifierName": {
					"id": 329,
					"name": "ampleFunding",
					"nodeType": "IdentifierPath",
					"referencedDeclaration": 176,
					"src": "2958:12:1"
				  },
				  "nodeType": "ModifierInvocation",
				  "src": "2958:36:1"
				},
				{
				  "id": 335,
				  "modifierName": {
					"id": 334,
					"name": "onlyClient",
					"nodeType": "IdentifierPath",
					"referencedDeclaration": 105,
					"src": "3003:10:1"
				  },
				  "nodeType": "ModifierInvocation",
				  "src": "3003:10:1"
				}
			  ],
			  "name": "fundTask",
			  "nodeType": "FunctionDefinition",
			  "parameters": {
				"id": 319,
				"nodeType": "ParameterList",
				"parameters": [
				  {
					"constant": false,
					"id": 318,
					"mutability": "mutable",
					"name": "_scheduleID",
					"nodeType": "VariableDeclaration",
					"scope": 350,
					"src": "2793:18:1",
					"stateVariable": false,
					"storageLocation": "default",
					"typeDescriptions": {
					  "typeIdentifier": "t_int256",
					  "typeString": "int256"
					},
					"typeName": {
					  "id": 317,
					  "name": "int256",
					  "nodeType": "ElementaryTypeName",
					  "src": "2793:6:1",
					  "typeDescriptions": {
						"typeIdentifier": "t_int256",
						"typeString": "int256"
					  }
					},
					"visibility": "internal"
				  }
				],
				"src": "2792:20:1"
			  },
			  "returnParameters": {
				"id": 336,
				"nodeType": "ParameterList",
				"parameters": [],
				"src": "3018:0:1"
			  },
			  "scope": 479,
			  "src": "2775:364:1",
			  "stateMutability": "payable",
			  "virtual": false,
			  "visibility": "public"
			},
			{
			  "body": {
				"id": 378,
				"nodeType": "Block",
				"src": "3335:123:1",
				"statements": [
				  {
					"expression": {
					  "id": 372,
					  "isConstant": false,
					  "isLValue": false,
					  "isPure": false,
					  "lValueRequested": false,
					  "leftHandSide": {
						"expression": {
						  "baseExpression": {
							"id": 366,
							"name": "scheduleRegister",
							"nodeType": "Identifier",
							"overloadedDeclarations": [],
							"referencedDeclaration": 73,
							"src": "3345:16:1",
							"typeDescriptions": {
							  "typeIdentifier": "t_mapping$_t_int256_$_t_struct$_schedule_$58_storage_$",
							  "typeString": "mapping(int256 => struct freelancer.schedule storage ref)"
							}
						  },
						  "id": 368,
						  "indexExpression": {
							"id": 367,
							"name": "_scheduleID",
							"nodeType": "Identifier",
							"overloadedDeclarations": [],
							"referencedDeclaration": 352,
							"src": "3362:11:1",
							"typeDescriptions": {
							  "typeIdentifier": "t_int256",
							  "typeString": "int256"
							}
						  },
						  "isConstant": false,
						  "isLValue": true,
						  "isPure": false,
						  "lValueRequested": false,
						  "nodeType": "IndexAccess",
						  "src": "3345:29:1",
						  "typeDescriptions": {
							"typeIdentifier": "t_struct$_schedule_$58_storage",
							"typeString": "struct freelancer.schedule storage ref"
						  }
						},
						"id": 369,
						"isConstant": false,
						"isLValue": true,
						"isPure": false,
						"lValueRequested": true,
						"memberName": "scheduleState",
						"nodeType": "MemberAccess",
						"referencedDeclaration": 57,
						"src": "3345:43:1",
						"typeDescriptions": {
						  "typeIdentifier": "t_enum$_ScheduleState_$44",
						  "typeString": "enum freelancer.ScheduleState"
						}
					  },
					  "nodeType": "Assignment",
					  "operator": "=",
					  "rightHandSide": {
						"expression": {
						  "id": 370,
						  "name": "ScheduleState",
						  "nodeType": "Identifier",
						  "overloadedDeclarations": [],
						  "referencedDeclaration": 44,
						  "src": "3391:13:1",
						  "typeDescriptions": {
							"typeIdentifier": "t_type$_t_enum$_ScheduleState_$44_$",
							"typeString": "type(enum freelancer.ScheduleState)"
						  }
						},
						"id": 371,
						"isConstant": false,
						"isLValue": false,
						"isPure": true,
						"lValueRequested": false,
						"memberName": "started",
						"nodeType": "MemberAccess",
						"src": "3391:21:1",
						"typeDescriptions": {
						  "typeIdentifier": "t_enum$_ScheduleState_$44",
						  "typeString": "enum freelancer.ScheduleState"
						}
					  },
					  "src": "3345:67:1",
					  "typeDescriptions": {
						"typeIdentifier": "t_enum$_ScheduleState_$44",
						"typeString": "enum freelancer.ScheduleState"
					  }
					},
					"id": 373,
					"nodeType": "ExpressionStatement",
					"src": "3345:67:1"
				  },
				  {
					"eventCall": {
					  "arguments": [
						{
						  "id": 375,
						  "name": "_scheduleID",
						  "nodeType": "Identifier",
						  "overloadedDeclarations": [],
						  "referencedDeclaration": 352,
						  "src": "3439:11:1",
						  "typeDescriptions": {
							"typeIdentifier": "t_int256",
							"typeString": "int256"
						  }
						}
					  ],
					  "expression": {
						"argumentTypes": [
						  {
							"typeIdentifier": "t_int256",
							"typeString": "int256"
						  }
						],
						"id": 374,
						"name": "taskStarted",
						"nodeType": "Identifier",
						"overloadedDeclarations": [],
						"referencedDeclaration": 206,
						"src": "3427:11:1",
						"typeDescriptions": {
						  "typeIdentifier": "t_function_event_nonpayable$_t_int256_$returns$__$",
						  "typeString": "function (int256)"
						}
					  },
					  "id": 376,
					  "isConstant": false,
					  "isLValue": false,
					  "isPure": false,
					  "kind": "functionCall",
					  "lValueRequested": false,
					  "names": [],
					  "nodeType": "FunctionCall",
					  "src": "3427:24:1",
					  "tryCall": false,
					  "typeDescriptions": {
						"typeIdentifier": "t_tuple$__$",
						"typeString": "tuple()"
					  }
					},
					"id": 377,
					"nodeType": "EmitStatement",
					"src": "3422:29:1"
				  }
				]
			  },
			  "functionSelector": "b7896a30",
			  "id": 379,
			  "implemented": true,
			  "kind": "function",
			  "modifiers": [
				{
				  "arguments": [
					{
					  "expression": {
						"id": 355,
						"name": "ProjectState",
						"nodeType": "Identifier",
						"overloadedDeclarations": [],
						"referencedDeclaration": 48,
						"src": "3226:12:1",
						"typeDescriptions": {
						  "typeIdentifier": "t_type$_t_enum$_ProjectState_$48_$",
						  "typeString": "type(enum freelancer.ProjectState)"
						}
					  },
					  "id": 356,
					  "isConstant": false,
					  "isLValue": false,
					  "isPure": true,
					  "lValueRequested": false,
					  "memberName": "accepted",
					  "nodeType": "MemberAccess",
					  "src": "3226:21:1",
					  "typeDescriptions": {
						"typeIdentifier": "t_enum$_ProjectState_$48",
						"typeString": "enum freelancer.ProjectState"
					  }
					}
				  ],
				  "id": 357,
				  "modifierName": {
					"id": 354,
					"name": "inProjectState",
					"nodeType": "IdentifierPath",
					"referencedDeclaration": 134,
					"src": "3211:14:1"
				  },
				  "nodeType": "ModifierInvocation",
				  "src": "3211:37:1"
				},
				{
				  "arguments": [
					{
					  "id": 359,
					  "name": "_scheduleID",
					  "nodeType": "Identifier",
					  "overloadedDeclarations": [],
					  "referencedDeclaration": 352,
					  "src": "3273:11:1",
					  "typeDescriptions": {
						"typeIdentifier": "t_int256",
						"typeString": "int256"
					  }
					},
					{
					  "expression": {
						"id": 360,
						"name": "ScheduleState",
						"nodeType": "Identifier",
						"overloadedDeclarations": [],
						"referencedDeclaration": 44,
						"src": "3286:13:1",
						"typeDescriptions": {
						  "typeIdentifier": "t_type$_t_enum$_ScheduleState_$44_$",
						  "typeString": "type(enum freelancer.ScheduleState)"
						}
					  },
					  "id": 361,
					  "isConstant": false,
					  "isLValue": false,
					  "isPure": true,
					  "lValueRequested": false,
					  "memberName": "funded",
					  "nodeType": "MemberAccess",
					  "src": "3286:20:1",
					  "typeDescriptions": {
						"typeIdentifier": "t_enum$_ScheduleState_$44",
						"typeString": "enum freelancer.ScheduleState"
					  }
					}
				  ],
				  "id": 362,
				  "modifierName": {
					"id": 358,
					"name": "inScheduleState",
					"nodeType": "IdentifierPath",
					"referencedDeclaration": 159,
					"src": "3257:15:1"
				  },
				  "nodeType": "ModifierInvocation",
				  "src": "3257:50:1"
				},
				{
				  "id": 364,
				  "modifierName": {
					"id": 363,
					"name": "onlyFreelancer",
					"nodeType": "IdentifierPath",
					"referencedDeclaration": 94,
					"src": "3316:14:1"
				  },
				  "nodeType": "ModifierInvocation",
				  "src": "3316:14:1"
				}
			  ],
			  "name": "startTask",
			  "nodeType": "FunctionDefinition",
			  "parameters": {
				"id": 353,
				"nodeType": "ParameterList",
				"parameters": [
				  {
					"constant": false,
					"id": 352,
					"mutability": "mutable",
					"name": "_scheduleID",
					"nodeType": "VariableDeclaration",
					"scope": 379,
					"src": "3168:18:1",
					"stateVariable": false,
					"storageLocation": "default",
					"typeDescriptions": {
					  "typeIdentifier": "t_int256",
					  "typeString": "int256"
					},
					"typeName": {
					  "id": 351,
					  "name": "int256",
					  "nodeType": "ElementaryTypeName",
					  "src": "3168:6:1",
					  "typeDescriptions": {
						"typeIdentifier": "t_int256",
						"typeString": "int256"
					  }
					},
					"visibility": "internal"
				  }
				],
				"src": "3167:20:1"
			  },
			  "returnParameters": {
				"id": 365,
				"nodeType": "ParameterList",
				"parameters": [],
				"src": "3335:0:1"
			  },
			  "scope": 479,
			  "src": "3149:309:1",
			  "stateMutability": "nonpayable",
			  "virtual": false,
			  "visibility": "public"
			},
			{
			  "body": {
				"id": 407,
				"nodeType": "Block",
				"src": "3649:125:1",
				"statements": [
				  {
					"expression": {
					  "id": 401,
					  "isConstant": false,
					  "isLValue": false,
					  "isPure": false,
					  "lValueRequested": false,
					  "leftHandSide": {
						"expression": {
						  "baseExpression": {
							"id": 395,
							"name": "scheduleRegister",
							"nodeType": "Identifier",
							"overloadedDeclarations": [],
							"referencedDeclaration": 73,
							"src": "3659:16:1",
							"typeDescriptions": {
							  "typeIdentifier": "t_mapping$_t_int256_$_t_struct$_schedule_$58_storage_$",
							  "typeString": "mapping(int256 => struct freelancer.schedule storage ref)"
							}
						  },
						  "id": 397,
						  "indexExpression": {
							"id": 396,
							"name": "_scheduleID",
							"nodeType": "Identifier",
							"overloadedDeclarations": [],
							"referencedDeclaration": 381,
							"src": "3676:11:1",
							"typeDescriptions": {
							  "typeIdentifier": "t_int256",
							  "typeString": "int256"
							}
						  },
						  "isConstant": false,
						  "isLValue": true,
						  "isPure": false,
						  "lValueRequested": false,
						  "nodeType": "IndexAccess",
						  "src": "3659:29:1",
						  "typeDescriptions": {
							"typeIdentifier": "t_struct$_schedule_$58_storage",
							"typeString": "struct freelancer.schedule storage ref"
						  }
						},
						"id": 398,
						"isConstant": false,
						"isLValue": true,
						"isPure": false,
						"lValueRequested": true,
						"memberName": "scheduleState",
						"nodeType": "MemberAccess",
						"referencedDeclaration": 57,
						"src": "3659:43:1",
						"typeDescriptions": {
						  "typeIdentifier": "t_enum$_ScheduleState_$44",
						  "typeString": "enum freelancer.ScheduleState"
						}
					  },
					  "nodeType": "Assignment",
					  "operator": "=",
					  "rightHandSide": {
						"expression": {
						  "id": 399,
						  "name": "ScheduleState",
						  "nodeType": "Identifier",
						  "overloadedDeclarations": [],
						  "referencedDeclaration": 44,
						  "src": "3705:13:1",
						  "typeDescriptions": {
							"typeIdentifier": "t_type$_t_enum$_ScheduleState_$44_$",
							"typeString": "type(enum freelancer.ScheduleState)"
						  }
						},
						"id": 400,
						"isConstant": false,
						"isLValue": false,
						"isPure": true,
						"lValueRequested": false,
						"memberName": "approved",
						"nodeType": "MemberAccess",
						"src": "3705:22:1",
						"typeDescriptions": {
						  "typeIdentifier": "t_enum$_ScheduleState_$44",
						  "typeString": "enum freelancer.ScheduleState"
						}
					  },
					  "src": "3659:68:1",
					  "typeDescriptions": {
						"typeIdentifier": "t_enum$_ScheduleState_$44",
						"typeString": "enum freelancer.ScheduleState"
					  }
					},
					"id": 402,
					"nodeType": "ExpressionStatement",
					"src": "3659:68:1"
				  },
				  {
					"eventCall": {
					  "arguments": [
						{
						  "id": 404,
						  "name": "_scheduleID",
						  "nodeType": "Identifier",
						  "overloadedDeclarations": [],
						  "referencedDeclaration": 381,
						  "src": "3755:11:1",
						  "typeDescriptions": {
							"typeIdentifier": "t_int256",
							"typeString": "int256"
						  }
						}
					  ],
					  "expression": {
						"argumentTypes": [
						  {
							"typeIdentifier": "t_int256",
							"typeString": "int256"
						  }
						],
						"id": 403,
						"name": "taskApproved",
						"nodeType": "Identifier",
						"overloadedDeclarations": [],
						"referencedDeclaration": 210,
						"src": "3742:12:1",
						"typeDescriptions": {
						  "typeIdentifier": "t_function_event_nonpayable$_t_int256_$returns$__$",
						  "typeString": "function (int256)"
						}
					  },
					  "id": 405,
					  "isConstant": false,
					  "isLValue": false,
					  "isPure": false,
					  "kind": "functionCall",
					  "lValueRequested": false,
					  "names": [],
					  "nodeType": "FunctionCall",
					  "src": "3742:25:1",
					  "tryCall": false,
					  "typeDescriptions": {
						"typeIdentifier": "t_tuple$__$",
						"typeString": "tuple()"
					  }
					},
					"id": 406,
					"nodeType": "EmitStatement",
					"src": "3737:30:1"
				  }
				]
			  },
			  "functionSelector": "6dc5434c",
			  "id": 408,
			  "implemented": true,
			  "kind": "function",
			  "modifiers": [
				{
				  "arguments": [
					{
					  "expression": {
						"id": 384,
						"name": "ProjectState",
						"nodeType": "Identifier",
						"overloadedDeclarations": [],
						"referencedDeclaration": 48,
						"src": "3543:12:1",
						"typeDescriptions": {
						  "typeIdentifier": "t_type$_t_enum$_ProjectState_$48_$",
						  "typeString": "type(enum freelancer.ProjectState)"
						}
					  },
					  "id": 385,
					  "isConstant": false,
					  "isLValue": false,
					  "isPure": true,
					  "lValueRequested": false,
					  "memberName": "accepted",
					  "nodeType": "MemberAccess",
					  "src": "3543:21:1",
					  "typeDescriptions": {
						"typeIdentifier": "t_enum$_ProjectState_$48",
						"typeString": "enum freelancer.ProjectState"
					  }
					}
				  ],
				  "id": 386,
				  "modifierName": {
					"id": 383,
					"name": "inProjectState",
					"nodeType": "IdentifierPath",
					"referencedDeclaration": 134,
					"src": "3528:14:1"
				  },
				  "nodeType": "ModifierInvocation",
				  "src": "3528:37:1"
				},
				{
				  "arguments": [
					{
					  "id": 388,
					  "name": "_scheduleID",
					  "nodeType": "Identifier",
					  "overloadedDeclarations": [],
					  "referencedDeclaration": 381,
					  "src": "3590:11:1",
					  "typeDescriptions": {
						"typeIdentifier": "t_int256",
						"typeString": "int256"
					  }
					},
					{
					  "expression": {
						"id": 389,
						"name": "ScheduleState",
						"nodeType": "Identifier",
						"overloadedDeclarations": [],
						"referencedDeclaration": 44,
						"src": "3603:13:1",
						"typeDescriptions": {
						  "typeIdentifier": "t_type$_t_enum$_ScheduleState_$44_$",
						  "typeString": "type(enum freelancer.ScheduleState)"
						}
					  },
					  "id": 390,
					  "isConstant": false,
					  "isLValue": false,
					  "isPure": true,
					  "lValueRequested": false,
					  "memberName": "started",
					  "nodeType": "MemberAccess",
					  "src": "3603:21:1",
					  "typeDescriptions": {
						"typeIdentifier": "t_enum$_ScheduleState_$44",
						"typeString": "enum freelancer.ScheduleState"
					  }
					}
				  ],
				  "id": 391,
				  "modifierName": {
					"id": 387,
					"name": "inScheduleState",
					"nodeType": "IdentifierPath",
					"referencedDeclaration": 159,
					"src": "3574:15:1"
				  },
				  "nodeType": "ModifierInvocation",
				  "src": "3574:51:1"
				},
				{
				  "id": 393,
				  "modifierName": {
					"id": 392,
					"name": "onlyClient",
					"nodeType": "IdentifierPath",
					"referencedDeclaration": 105,
					"src": "3634:10:1"
				  },
				  "nodeType": "ModifierInvocation",
				  "src": "3634:10:1"
				}
			  ],
			  "name": "approveTask",
			  "nodeType": "FunctionDefinition",
			  "parameters": {
				"id": 382,
				"nodeType": "ParameterList",
				"parameters": [
				  {
					"constant": false,
					"id": 381,
					"mutability": "mutable",
					"name": "_scheduleID",
					"nodeType": "VariableDeclaration",
					"scope": 408,
					"src": "3485:18:1",
					"stateVariable": false,
					"storageLocation": "default",
					"typeDescriptions": {
					  "typeIdentifier": "t_int256",
					  "typeString": "int256"
					},
					"typeName": {
					  "id": 380,
					  "name": "int256",
					  "nodeType": "ElementaryTypeName",
					  "src": "3485:6:1",
					  "typeDescriptions": {
						"typeIdentifier": "t_int256",
						"typeString": "int256"
					  }
					},
					"visibility": "internal"
				  }
				],
				"src": "3484:20:1"
			  },
			  "returnParameters": {
				"id": 394,
				"nodeType": "ParameterList",
				"parameters": [],
				"src": "3649:0:1"
			  },
			  "scope": 479,
			  "src": "3464:310:1",
			  "stateMutability": "nonpayable",
			  "virtual": false,
			  "visibility": "public"
			},
			{
			  "body": {
				"id": 449,
				"nodeType": "Block",
				"src": "3991:236:1",
				"statements": [
				  {
					"expression": {
					  "arguments": [
						{
						  "expression": {
							"baseExpression": {
							  "id": 427,
							  "name": "scheduleRegister",
							  "nodeType": "Identifier",
							  "overloadedDeclarations": [],
							  "referencedDeclaration": 73,
							  "src": "4028:16:1",
							  "typeDescriptions": {
								"typeIdentifier": "t_mapping$_t_int256_$_t_struct$_schedule_$58_storage_$",
								"typeString": "mapping(int256 => struct freelancer.schedule storage ref)"
							  }
							},
							"id": 429,
							"indexExpression": {
							  "id": 428,
							  "name": "_scheduleID",
							  "nodeType": "Identifier",
							  "overloadedDeclarations": [],
							  "referencedDeclaration": 410,
							  "src": "4045:11:1",
							  "typeDescriptions": {
								"typeIdentifier": "t_int256",
								"typeString": "int256"
							  }
							},
							"isConstant": false,
							"isLValue": true,
							"isPure": false,
							"lValueRequested": false,
							"nodeType": "IndexAccess",
							"src": "4028:29:1",
							"typeDescriptions": {
							  "typeIdentifier": "t_struct$_schedule_$58_storage",
							  "typeString": "struct freelancer.schedule storage ref"
							}
						  },
						  "id": 430,
						  "isConstant": false,
						  "isLValue": true,
						  "isPure": false,
						  "lValueRequested": false,
						  "memberName": "value",
						  "nodeType": "MemberAccess",
						  "referencedDeclaration": 54,
						  "src": "4028:35:1",
						  "typeDescriptions": {
							"typeIdentifier": "t_uint256",
							"typeString": "uint256"
						  }
						}
					  ],
					  "expression": {
						"argumentTypes": [
						  {
							"typeIdentifier": "t_uint256",
							"typeString": "uint256"
						  }
						],
						"expression": {
						  "id": 424,
						  "name": "freelancerAddress",
						  "nodeType": "Identifier",
						  "overloadedDeclarations": [],
						  "referencedDeclaration": 63,
						  "src": "4001:17:1",
						  "typeDescriptions": {
							"typeIdentifier": "t_address_payable",
							"typeString": "address payable"
						  }
						},
						"id": 426,
						"isConstant": false,
						"isLValue": false,
						"isPure": false,
						"lValueRequested": false,
						"memberName": "transfer",
						"nodeType": "MemberAccess",
						"src": "4001:26:1",
						"typeDescriptions": {
						  "typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
						  "typeString": "function (uint256)"
						}
					  },
					  "id": 431,
					  "isConstant": false,
					  "isLValue": false,
					  "isPure": false,
					  "kind": "functionCall",
					  "lValueRequested": false,
					  "names": [],
					  "nodeType": "FunctionCall",
					  "src": "4001:63:1",
					  "tryCall": false,
					  "typeDescriptions": {
						"typeIdentifier": "t_tuple$__$",
						"typeString": "tuple()"
					  }
					},
					"id": 432,
					"nodeType": "ExpressionStatement",
					"src": "4001:63:1"
				  },
				  {
					"expression": {
					  "id": 439,
					  "isConstant": false,
					  "isLValue": false,
					  "isPure": false,
					  "lValueRequested": false,
					  "leftHandSide": {
						"expression": {
						  "baseExpression": {
							"id": 433,
							"name": "scheduleRegister",
							"nodeType": "Identifier",
							"overloadedDeclarations": [],
							"referencedDeclaration": 73,
							"src": "4074:16:1",
							"typeDescriptions": {
							  "typeIdentifier": "t_mapping$_t_int256_$_t_struct$_schedule_$58_storage_$",
							  "typeString": "mapping(int256 => struct freelancer.schedule storage ref)"
							}
						  },
						  "id": 435,
						  "indexExpression": {
							"id": 434,
							"name": "_scheduleID",
							"nodeType": "Identifier",
							"overloadedDeclarations": [],
							"referencedDeclaration": 410,
							"src": "4091:11:1",
							"typeDescriptions": {
							  "typeIdentifier": "t_int256",
							  "typeString": "int256"
							}
						  },
						  "isConstant": false,
						  "isLValue": true,
						  "isPure": false,
						  "lValueRequested": false,
						  "nodeType": "IndexAccess",
						  "src": "4074:29:1",
						  "typeDescriptions": {
							"typeIdentifier": "t_struct$_schedule_$58_storage",
							"typeString": "struct freelancer.schedule storage ref"
						  }
						},
						"id": 436,
						"isConstant": false,
						"isLValue": true,
						"isPure": false,
						"lValueRequested": true,
						"memberName": "scheduleState",
						"nodeType": "MemberAccess",
						"referencedDeclaration": 57,
						"src": "4074:43:1",
						"typeDescriptions": {
						  "typeIdentifier": "t_enum$_ScheduleState_$44",
						  "typeString": "enum freelancer.ScheduleState"
						}
					  },
					  "nodeType": "Assignment",
					  "operator": "=",
					  "rightHandSide": {
						"expression": {
						  "id": 437,
						  "name": "ScheduleState",
						  "nodeType": "Identifier",
						  "overloadedDeclarations": [],
						  "referencedDeclaration": 44,
						  "src": "4120:13:1",
						  "typeDescriptions": {
							"typeIdentifier": "t_type$_t_enum$_ScheduleState_$44_$",
							"typeString": "type(enum freelancer.ScheduleState)"
						  }
						},
						"id": 438,
						"isConstant": false,
						"isLValue": false,
						"isPure": true,
						"lValueRequested": false,
						"memberName": "released",
						"nodeType": "MemberAccess",
						"src": "4120:22:1",
						"typeDescriptions": {
						  "typeIdentifier": "t_enum$_ScheduleState_$44",
						  "typeString": "enum freelancer.ScheduleState"
						}
					  },
					  "src": "4074:68:1",
					  "typeDescriptions": {
						"typeIdentifier": "t_enum$_ScheduleState_$44",
						"typeString": "enum freelancer.ScheduleState"
					  }
					},
					"id": 440,
					"nodeType": "ExpressionStatement",
					"src": "4074:68:1"
				  },
				  {
					"eventCall": {
					  "arguments": [
						{
						  "id": 442,
						  "name": "_scheduleID",
						  "nodeType": "Identifier",
						  "overloadedDeclarations": [],
						  "referencedDeclaration": 410,
						  "src": "4171:11:1",
						  "typeDescriptions": {
							"typeIdentifier": "t_int256",
							"typeString": "int256"
						  }
						},
						{
						  "expression": {
							"baseExpression": {
							  "id": 443,
							  "name": "scheduleRegister",
							  "nodeType": "Identifier",
							  "overloadedDeclarations": [],
							  "referencedDeclaration": 73,
							  "src": "4184:16:1",
							  "typeDescriptions": {
								"typeIdentifier": "t_mapping$_t_int256_$_t_struct$_schedule_$58_storage_$",
								"typeString": "mapping(int256 => struct freelancer.schedule storage ref)"
							  }
							},
							"id": 445,
							"indexExpression": {
							  "id": 444,
							  "name": "_scheduleID",
							  "nodeType": "Identifier",
							  "overloadedDeclarations": [],
							  "referencedDeclaration": 410,
							  "src": "4201:11:1",
							  "typeDescriptions": {
								"typeIdentifier": "t_int256",
								"typeString": "int256"
							  }
							},
							"isConstant": false,
							"isLValue": true,
							"isPure": false,
							"lValueRequested": false,
							"nodeType": "IndexAccess",
							"src": "4184:29:1",
							"typeDescriptions": {
							  "typeIdentifier": "t_struct$_schedule_$58_storage",
							  "typeString": "struct freelancer.schedule storage ref"
							}
						  },
						  "id": 446,
						  "isConstant": false,
						  "isLValue": true,
						  "isPure": false,
						  "lValueRequested": false,
						  "memberName": "value",
						  "nodeType": "MemberAccess",
						  "referencedDeclaration": 54,
						  "src": "4184:35:1",
						  "typeDescriptions": {
							"typeIdentifier": "t_uint256",
							"typeString": "uint256"
						  }
						}
					  ],
					  "expression": {
						"argumentTypes": [
						  {
							"typeIdentifier": "t_int256",
							"typeString": "int256"
						  },
						  {
							"typeIdentifier": "t_uint256",
							"typeString": "uint256"
						  }
						],
						"id": 441,
						"name": "fundsReleased",
						"nodeType": "Identifier",
						"overloadedDeclarations": [],
						"referencedDeclaration": 216,
						"src": "4157:13:1",
						"typeDescriptions": {
						  "typeIdentifier": "t_function_event_nonpayable$_t_int256_$_t_uint256_$returns$__$",
						  "typeString": "function (int256,uint256)"
						}
					  },
					  "id": 447,
					  "isConstant": false,
					  "isLValue": false,
					  "isPure": false,
					  "kind": "functionCall",
					  "lValueRequested": false,
					  "names": [],
					  "nodeType": "FunctionCall",
					  "src": "4157:63:1",
					  "tryCall": false,
					  "typeDescriptions": {
						"typeIdentifier": "t_tuple$__$",
						"typeString": "tuple()"
					  }
					},
					"id": 448,
					"nodeType": "EmitStatement",
					"src": "4152:68:1"
				  }
				]
			  },
			  "functionSelector": "bb6fc950",
			  "id": 450,
			  "implemented": true,
			  "kind": "function",
			  "modifiers": [
				{
				  "arguments": [
					{
					  "expression": {
						"id": 413,
						"name": "ProjectState",
						"nodeType": "Identifier",
						"overloadedDeclarations": [],
						"referencedDeclaration": 48,
						"src": "3880:12:1",
						"typeDescriptions": {
						  "typeIdentifier": "t_type$_t_enum$_ProjectState_$48_$",
						  "typeString": "type(enum freelancer.ProjectState)"
						}
					  },
					  "id": 414,
					  "isConstant": false,
					  "isLValue": false,
					  "isPure": true,
					  "lValueRequested": false,
					  "memberName": "accepted",
					  "nodeType": "MemberAccess",
					  "src": "3880:21:1",
					  "typeDescriptions": {
						"typeIdentifier": "t_enum$_ProjectState_$48",
						"typeString": "enum freelancer.ProjectState"
					  }
					}
				  ],
				  "id": 415,
				  "modifierName": {
					"id": 412,
					"name": "inProjectState",
					"nodeType": "IdentifierPath",
					"referencedDeclaration": 134,
					"src": "3865:14:1"
				  },
				  "nodeType": "ModifierInvocation",
				  "src": "3865:37:1"
				},
				{
				  "arguments": [
					{
					  "id": 417,
					  "name": "_scheduleID",
					  "nodeType": "Identifier",
					  "overloadedDeclarations": [],
					  "referencedDeclaration": 410,
					  "src": "3927:11:1",
					  "typeDescriptions": {
						"typeIdentifier": "t_int256",
						"typeString": "int256"
					  }
					},
					{
					  "expression": {
						"id": 418,
						"name": "ScheduleState",
						"nodeType": "Identifier",
						"overloadedDeclarations": [],
						"referencedDeclaration": 44,
						"src": "3940:13:1",
						"typeDescriptions": {
						  "typeIdentifier": "t_type$_t_enum$_ScheduleState_$44_$",
						  "typeString": "type(enum freelancer.ScheduleState)"
						}
					  },
					  "id": 419,
					  "isConstant": false,
					  "isLValue": false,
					  "isPure": true,
					  "lValueRequested": false,
					  "memberName": "approved",
					  "nodeType": "MemberAccess",
					  "src": "3940:22:1",
					  "typeDescriptions": {
						"typeIdentifier": "t_enum$_ScheduleState_$44",
						"typeString": "enum freelancer.ScheduleState"
					  }
					}
				  ],
				  "id": 420,
				  "modifierName": {
					"id": 416,
					"name": "inScheduleState",
					"nodeType": "IdentifierPath",
					"referencedDeclaration": 159,
					"src": "3911:15:1"
				  },
				  "nodeType": "ModifierInvocation",
				  "src": "3911:52:1"
				},
				{
				  "id": 422,
				  "modifierName": {
					"id": 421,
					"name": "onlyFreelancer",
					"nodeType": "IdentifierPath",
					"referencedDeclaration": 94,
					"src": "3972:14:1"
				  },
				  "nodeType": "ModifierInvocation",
				  "src": "3972:14:1"
				}
			  ],
			  "name": "releaseFunds",
			  "nodeType": "FunctionDefinition",
			  "parameters": {
				"id": 411,
				"nodeType": "ParameterList",
				"parameters": [
				  {
					"constant": false,
					"id": 410,
					"mutability": "mutable",
					"name": "_scheduleID",
					"nodeType": "VariableDeclaration",
					"scope": 450,
					"src": "3806:18:1",
					"stateVariable": false,
					"storageLocation": "default",
					"typeDescriptions": {
					  "typeIdentifier": "t_int256",
					  "typeString": "int256"
					},
					"typeName": {
					  "id": 409,
					  "name": "int256",
					  "nodeType": "ElementaryTypeName",
					  "src": "3806:6:1",
					  "typeDescriptions": {
						"typeIdentifier": "t_int256",
						"typeString": "int256"
					  }
					},
					"visibility": "internal"
				  }
				],
				"src": "3805:20:1"
			  },
			  "returnParameters": {
				"id": 423,
				"nodeType": "ParameterList",
				"parameters": [],
				"src": "3991:0:1"
			  },
			  "scope": 479,
			  "src": "3784:443:1",
			  "stateMutability": "payable",
			  "virtual": false,
			  "visibility": "public"
			},
			{
			  "body": {
				"id": 465,
				"nodeType": "Block",
				"src": "4327:80:1",
				"statements": [
				  {
					"expression": {
					  "id": 460,
					  "isConstant": false,
					  "isLValue": false,
					  "isPure": false,
					  "lValueRequested": false,
					  "leftHandSide": {
						"id": 457,
						"name": "projectState",
						"nodeType": "Identifier",
						"overloadedDeclarations": [],
						"referencedDeclaration": 68,
						"src": "4337:12:1",
						"typeDescriptions": {
						  "typeIdentifier": "t_enum$_ProjectState_$48",
						  "typeString": "enum freelancer.ProjectState"
						}
					  },
					  "nodeType": "Assignment",
					  "operator": "=",
					  "rightHandSide": {
						"expression": {
						  "id": 458,
						  "name": "ProjectState",
						  "nodeType": "Identifier",
						  "overloadedDeclarations": [],
						  "referencedDeclaration": 48,
						  "src": "4352:12:1",
						  "typeDescriptions": {
							"typeIdentifier": "t_type$_t_enum$_ProjectState_$48_$",
							"typeString": "type(enum freelancer.ProjectState)"
						  }
						},
						"id": 459,
						"isConstant": false,
						"isLValue": false,
						"isPure": true,
						"lValueRequested": false,
						"memberName": "closed",
						"nodeType": "MemberAccess",
						"src": "4352:19:1",
						"typeDescriptions": {
						  "typeIdentifier": "t_enum$_ProjectState_$48",
						  "typeString": "enum freelancer.ProjectState"
						}
					  },
					  "src": "4337:34:1",
					  "typeDescriptions": {
						"typeIdentifier": "t_enum$_ProjectState_$48",
						"typeString": "enum freelancer.ProjectState"
					  }
					},
					"id": 461,
					"nodeType": "ExpressionStatement",
					"src": "4337:34:1"
				  },
				  {
					"eventCall": {
					  "arguments": [],
					  "expression": {
						"argumentTypes": [],
						"id": 462,
						"name": "projectEnded",
						"nodeType": "Identifier",
						"overloadedDeclarations": [],
						"referencedDeclaration": 218,
						"src": "4386:12:1",
						"typeDescriptions": {
						  "typeIdentifier": "t_function_event_nonpayable$__$returns$__$",
						  "typeString": "function ()"
						}
					  },
					  "id": 463,
					  "isConstant": false,
					  "isLValue": false,
					  "isPure": false,
					  "kind": "functionCall",
					  "lValueRequested": false,
					  "names": [],
					  "nodeType": "FunctionCall",
					  "src": "4386:14:1",
					  "tryCall": false,
					  "typeDescriptions": {
						"typeIdentifier": "t_tuple$__$",
						"typeString": "tuple()"
					  }
					},
					"id": 464,
					"nodeType": "EmitStatement",
					"src": "4381:19:1"
				  }
				]
			  },
			  "functionSelector": "c3966409",
			  "id": 466,
			  "implemented": true,
			  "kind": "function",
			  "modifiers": [
				{
				  "id": 453,
				  "modifierName": {
					"id": 452,
					"name": "bothClientFreelancer",
					"nodeType": "IdentifierPath",
					"referencedDeclaration": 121,
					"src": "4282:20:1"
				  },
				  "nodeType": "ModifierInvocation",
				  "src": "4282:20:1"
				},
				{
				  "id": 455,
				  "modifierName": {
					"id": 454,
					"name": "noMoreFunds",
					"nodeType": "IdentifierPath",
					"referencedDeclaration": 190,
					"src": "4311:11:1"
				  },
				  "nodeType": "ModifierInvocation",
				  "src": "4311:11:1"
				}
			  ],
			  "name": "endProject",
			  "nodeType": "FunctionDefinition",
			  "parameters": {
				"id": 451,
				"nodeType": "ParameterList",
				"parameters": [],
				"src": "4256:2:1"
			  },
			  "returnParameters": {
				"id": 456,
				"nodeType": "ParameterList",
				"parameters": [],
				"src": "4327:0:1"
			  },
			  "scope": 479,
			  "src": "4237:170:1",
			  "stateMutability": "nonpayable",
			  "virtual": false,
			  "visibility": "public"
			},
			{
			  "body": {
				"id": 477,
				"nodeType": "Block",
				"src": "4505:45:1",
				"statements": [
				  {
					"expression": {
					  "expression": {
						"arguments": [
						  {
							"id": 473,
							"name": "this",
							"nodeType": "Identifier",
							"overloadedDeclarations": [],
							"referencedDeclaration": 4294967268,
							"src": "4530:4:1",
							"typeDescriptions": {
							  "typeIdentifier": "t_contract$_freelancer_$479",
							  "typeString": "contract freelancer"
							}
						  }
						],
						"expression": {
						  "argumentTypes": [
							{
							  "typeIdentifier": "t_contract$_freelancer_$479",
							  "typeString": "contract freelancer"
							}
						  ],
						  "id": 472,
						  "isConstant": false,
						  "isLValue": false,
						  "isPure": true,
						  "lValueRequested": false,
						  "nodeType": "ElementaryTypeNameExpression",
						  "src": "4522:7:1",
						  "typeDescriptions": {
							"typeIdentifier": "t_type$_t_address_$",
							"typeString": "type(address)"
						  },
						  "typeName": {
							"id": 471,
							"name": "address",
							"nodeType": "ElementaryTypeName",
							"src": "4522:7:1",
							"typeDescriptions": {}
						  }
						},
						"id": 474,
						"isConstant": false,
						"isLValue": false,
						"isPure": false,
						"kind": "typeConversion",
						"lValueRequested": false,
						"names": [],
						"nodeType": "FunctionCall",
						"src": "4522:13:1",
						"tryCall": false,
						"typeDescriptions": {
						  "typeIdentifier": "t_address",
						  "typeString": "address"
						}
					  },
					  "id": 475,
					  "isConstant": false,
					  "isLValue": false,
					  "isPure": false,
					  "lValueRequested": false,
					  "memberName": "balance",
					  "nodeType": "MemberAccess",
					  "src": "4522:21:1",
					  "typeDescriptions": {
						"typeIdentifier": "t_uint256",
						"typeString": "uint256"
					  }
					},
					"functionReturnParameters": 470,
					"id": 476,
					"nodeType": "Return",
					"src": "4515:28:1"
				  }
				]
			  },
			  "functionSelector": "12065fe0",
			  "id": 478,
			  "implemented": true,
			  "kind": "function",
			  "modifiers": [],
			  "name": "getBalance",
			  "nodeType": "FunctionDefinition",
			  "parameters": {
				"id": 467,
				"nodeType": "ParameterList",
				"parameters": [],
				"src": "4436:2:1"
			  },
			  "returnParameters": {
				"id": 470,
				"nodeType": "ParameterList",
				"parameters": [
				  {
					"constant": false,
					"id": 469,
					"mutability": "mutable",
					"name": "balance",
					"nodeType": "VariableDeclaration",
					"scope": 478,
					"src": "4484:15:1",
					"stateVariable": false,
					"storageLocation": "default",
					"typeDescriptions": {
					  "typeIdentifier": "t_uint256",
					  "typeString": "uint256"
					},
					"typeName": {
					  "id": 468,
					  "name": "uint256",
					  "nodeType": "ElementaryTypeName",
					  "src": "4484:7:1",
					  "typeDescriptions": {
						"typeIdentifier": "t_uint256",
						"typeString": "uint256"
					  }
					},
					"visibility": "internal"
				  }
				],
				"src": "4483:17:1"
			  },
			  "scope": 479,
			  "src": "4417:133:1",
			  "stateMutability": "view",
			  "virtual": false,
			  "visibility": "public"
			}
		  ],
		  "scope": 480,
		  "src": "204:4348:1"
		}
	  ],
	  "src": "179:4374:1"
	},
	"legacyAST": {
	  "absolutePath": "project:/contracts/freelancer.sol",
	  "exportedSymbols": {
		"freelancer": [
		  479
		]
	  },
	  "id": 480,
	  "license": "MIT",
	  "nodeType": "SourceUnit",
	  "nodes": [
		{
		  "id": 38,
		  "literals": [
			"solidity",
			"^",
			"0.8",
			".0"
		  ],
		  "nodeType": "PragmaDirective",
		  "src": "179:23:1"
		},
		{
		  "abstract": false,
		  "baseContracts": [],
		  "contractDependencies": [],
		  "contractKind": "contract",
		  "fullyImplemented": true,
		  "id": 479,
		  "linearizedBaseContracts": [
			479
		  ],
		  "name": "freelancer",
		  "nodeType": "ContractDefinition",
		  "nodes": [
			{
			  "canonicalName": "freelancer.ScheduleState",
			  "id": 44,
			  "members": [
				{
				  "id": 39,
				  "name": "planned",
				  "nodeType": "EnumValue",
				  "src": "254:7:1"
				},
				{
				  "id": 40,
				  "name": "funded",
				  "nodeType": "EnumValue",
				  "src": "263:6:1"
				},
				{
				  "id": 41,
				  "name": "started",
				  "nodeType": "EnumValue",
				  "src": "271:7:1"
				},
				{
				  "id": 42,
				  "name": "approved",
				  "nodeType": "EnumValue",
				  "src": "280:8:1"
				},
				{
				  "id": 43,
				  "name": "released",
				  "nodeType": "EnumValue",
				  "src": "290:8:1"
				}
			  ],
			  "name": "ScheduleState",
			  "nodeType": "EnumDefinition",
			  "src": "234:65:1"
			},
			{
			  "canonicalName": "freelancer.ProjectState",
			  "id": 48,
			  "members": [
				{
				  "id": 45,
				  "name": "initiated",
				  "nodeType": "EnumValue",
				  "src": "323:9:1"
				},
				{
				  "id": 46,
				  "name": "accepted",
				  "nodeType": "EnumValue",
				  "src": "334:8:1"
				},
				{
				  "id": 47,
				  "name": "closed",
				  "nodeType": "EnumValue",
				  "src": "344:6:1"
				}
			  ],
			  "name": "ProjectState",
			  "nodeType": "EnumDefinition",
			  "src": "304:47:1"
			},
			{
			  "canonicalName": "freelancer.schedule",
			  "id": 58,
			  "members": [
				{
				  "constant": false,
				  "id": 50,
				  "mutability": "mutable",
				  "name": "shortCode",
				  "nodeType": "VariableDeclaration",
				  "scope": 58,
				  "src": "386:16:1",
				  "stateVariable": false,
				  "storageLocation": "default",
				  "typeDescriptions": {
					"typeIdentifier": "t_string_storage_ptr",
					"typeString": "string"
				  },
				  "typeName": {
					"id": 49,
					"name": "string",
					"nodeType": "ElementaryTypeName",
					"src": "386:6:1",
					"typeDescriptions": {
					  "typeIdentifier": "t_string_storage_ptr",
					  "typeString": "string"
					}
				  },
				  "visibility": "internal"
				},
				{
				  "constant": false,
				  "id": 52,
				  "mutability": "mutable",
				  "name": "description",
				  "nodeType": "VariableDeclaration",
				  "scope": 58,
				  "src": "412:18:1",
				  "stateVariable": false,
				  "storageLocation": "default",
				  "typeDescriptions": {
					"typeIdentifier": "t_string_storage_ptr",
					"typeString": "string"
				  },
				  "typeName": {
					"id": 51,
					"name": "string",
					"nodeType": "ElementaryTypeName",
					"src": "412:6:1",
					"typeDescriptions": {
					  "typeIdentifier": "t_string_storage_ptr",
					  "typeString": "string"
					}
				  },
				  "visibility": "internal"
				},
				{
				  "constant": false,
				  "id": 54,
				  "mutability": "mutable",
				  "name": "value",
				  "nodeType": "VariableDeclaration",
				  "scope": 58,
				  "src": "440:13:1",
				  "stateVariable": false,
				  "storageLocation": "default",
				  "typeDescriptions": {
					"typeIdentifier": "t_uint256",
					"typeString": "uint256"
				  },
				  "typeName": {
					"id": 53,
					"name": "uint256",
					"nodeType": "ElementaryTypeName",
					"src": "440:7:1",
					"typeDescriptions": {
					  "typeIdentifier": "t_uint256",
					  "typeString": "uint256"
					}
				  },
				  "visibility": "internal"
				},
				{
				  "constant": false,
				  "id": 57,
				  "mutability": "mutable",
				  "name": "scheduleState",
				  "nodeType": "VariableDeclaration",
				  "scope": 58,
				  "src": "463:27:1",
				  "stateVariable": false,
				  "storageLocation": "default",
				  "typeDescriptions": {
					"typeIdentifier": "t_enum$_ScheduleState_$44",
					"typeString": "enum freelancer.ScheduleState"
				  },
				  "typeName": {
					"id": 56,
					"nodeType": "UserDefinedTypeName",
					"pathNode": {
					  "id": 55,
					  "name": "ScheduleState",
					  "nodeType": "IdentifierPath",
					  "referencedDeclaration": 44,
					  "src": "463:13:1"
					},
					"referencedDeclaration": 44,
					"src": "463:13:1",
					"typeDescriptions": {
					  "typeIdentifier": "t_enum$_ScheduleState_$44",
					  "typeString": "enum freelancer.ScheduleState"
					}
				  },
				  "visibility": "internal"
				}
			  ],
			  "name": "schedule",
			  "nodeType": "StructDefinition",
			  "scope": 479,
			  "src": "361:136:1",
			  "visibility": "public"
			},
			{
			  "constant": false,
			  "functionSelector": "965720af",
			  "id": 61,
			  "mutability": "mutable",
			  "name": "totalSchedules",
			  "nodeType": "VariableDeclaration",
			  "scope": 479,
			  "src": "507:32:1",
			  "stateVariable": true,
			  "storageLocation": "default",
			  "typeDescriptions": {
				"typeIdentifier": "t_int256",
				"typeString": "int256"
			  },
			  "typeName": {
				"id": 59,
				"name": "int256",
				"nodeType": "ElementaryTypeName",
				"src": "507:6:1",
				"typeDescriptions": {
				  "typeIdentifier": "t_int256",
				  "typeString": "int256"
				}
			  },
			  "value": {
				"hexValue": "30",
				"id": 60,
				"isConstant": false,
				"isLValue": false,
				"isPure": true,
				"kind": "number",
				"lValueRequested": false,
				"nodeType": "Literal",
				"src": "538:1:1",
				"typeDescriptions": {
				  "typeIdentifier": "t_rational_0_by_1",
				  "typeString": "int_const 0"
				},
				"value": "0"
			  },
			  "visibility": "public"
			},
			{
			  "constant": false,
			  "functionSelector": "06a4e7cb",
			  "id": 63,
			  "mutability": "mutable",
			  "name": "freelancerAddress",
			  "nodeType": "VariableDeclaration",
			  "scope": 479,
			  "src": "545:40:1",
			  "stateVariable": true,
			  "storageLocation": "default",
			  "typeDescriptions": {
				"typeIdentifier": "t_address_payable",
				"typeString": "address payable"
			  },
			  "typeName": {
				"id": 62,
				"name": "address",
				"nodeType": "ElementaryTypeName",
				"src": "545:15:1",
				"stateMutability": "payable",
				"typeDescriptions": {
				  "typeIdentifier": "t_address_payable",
				  "typeString": "address payable"
				}
			  },
			  "visibility": "public"
			},
			{
			  "constant": false,
			  "functionSelector": "2c2ab5ea",
			  "id": 65,
			  "mutability": "mutable",
			  "name": "clientAddress",
			  "nodeType": "VariableDeclaration",
			  "scope": 479,
			  "src": "591:28:1",
			  "stateVariable": true,
			  "storageLocation": "default",
			  "typeDescriptions": {
				"typeIdentifier": "t_address",
				"typeString": "address"
			  },
			  "typeName": {
				"id": 64,
				"name": "address",
				"nodeType": "ElementaryTypeName",
				"src": "591:7:1",
				"stateMutability": "nonpayable",
				"typeDescriptions": {
				  "typeIdentifier": "t_address",
				  "typeString": "address"
				}
			  },
			  "visibility": "public"
			},
			{
			  "constant": false,
			  "functionSelector": "748807ab",
			  "id": 68,
			  "mutability": "mutable",
			  "name": "projectState",
			  "nodeType": "VariableDeclaration",
			  "scope": 479,
			  "src": "625:32:1",
			  "stateVariable": true,
			  "storageLocation": "default",
			  "typeDescriptions": {
				"typeIdentifier": "t_enum$_ProjectState_$48",
				"typeString": "enum freelancer.ProjectState"
			  },
			  "typeName": {
				"id": 67,
				"nodeType": "UserDefinedTypeName",
				"pathNode": {
				  "id": 66,
				  "name": "ProjectState",
				  "nodeType": "IdentifierPath",
				  "referencedDeclaration": 48,
				  "src": "625:12:1"
				},
				"referencedDeclaration": 48,
				"src": "625:12:1",
				"typeDescriptions": {
				  "typeIdentifier": "t_enum$_ProjectState_$48",
				  "typeString": "enum freelancer.ProjectState"
				}
			  },
			  "visibility": "public"
			},
			{
			  "constant": false,
			  "functionSelector": "bab56910",
			  "id": 73,
			  "mutability": "mutable",
			  "name": "scheduleRegister",
			  "nodeType": "VariableDeclaration",
			  "scope": 479,
			  "src": "668:51:1",
			  "stateVariable": true,
			  "storageLocation": "default",
			  "typeDescriptions": {
				"typeIdentifier": "t_mapping$_t_int256_$_t_struct$_schedule_$58_storage_$",
				"typeString": "mapping(int256 => struct freelancer.schedule)"
			  },
			  "typeName": {
				"id": 72,
				"keyType": {
				  "id": 69,
				  "name": "int256",
				  "nodeType": "ElementaryTypeName",
				  "src": "676:6:1",
				  "typeDescriptions": {
					"typeIdentifier": "t_int256",
					"typeString": "int256"
				  }
				},
				"nodeType": "Mapping",
				"src": "668:27:1",
				"typeDescriptions": {
				  "typeIdentifier": "t_mapping$_t_int256_$_t_struct$_schedule_$58_storage_$",
				  "typeString": "mapping(int256 => struct freelancer.schedule)"
				},
				"valueType": {
				  "id": 71,
				  "nodeType": "UserDefinedTypeName",
				  "pathNode": {
					"id": 70,
					"name": "schedule",
					"nodeType": "IdentifierPath",
					"referencedDeclaration": 58,
					"src": "686:8:1"
				  },
				  "referencedDeclaration": 58,
				  "src": "686:8:1",
				  "typeDescriptions": {
					"typeIdentifier": "t_struct$_schedule_$58_storage_ptr",
					"typeString": "struct freelancer.schedule"
				  }
				}
			  },
			  "visibility": "public"
			},
			{
			  "body": {
				"id": 82,
				"nodeType": "Block",
				"src": "761:32:1",
				"statements": [
				  {
					"expression": {
					  "arguments": [
						{
						  "id": 78,
						  "name": "_condition",
						  "nodeType": "Identifier",
						  "overloadedDeclarations": [],
						  "referencedDeclaration": 75,
						  "src": "773:10:1",
						  "typeDescriptions": {
							"typeIdentifier": "t_bool",
							"typeString": "bool"
						  }
						}
					  ],
					  "expression": {
						"argumentTypes": [
						  {
							"typeIdentifier": "t_bool",
							"typeString": "bool"
						  }
						],
						"id": 77,
						"name": "require",
						"nodeType": "Identifier",
						"overloadedDeclarations": [
						  4294967278,
						  4294967278
						],
						"referencedDeclaration": 4294967278,
						"src": "765:7:1",
						"typeDescriptions": {
						  "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
						  "typeString": "function (bool) pure"
						}
					  },
					  "id": 79,
					  "isConstant": false,
					  "isLValue": false,
					  "isPure": false,
					  "kind": "functionCall",
					  "lValueRequested": false,
					  "names": [],
					  "nodeType": "FunctionCall",
					  "src": "765:19:1",
					  "tryCall": false,
					  "typeDescriptions": {
						"typeIdentifier": "t_tuple$__$",
						"typeString": "tuple()"
					  }
					},
					"id": 80,
					"nodeType": "ExpressionStatement",
					"src": "765:19:1"
				  },
				  {
					"id": 81,
					"nodeType": "PlaceholderStatement",
					"src": "788:1:1"
				  }
				]
			  },
			  "id": 83,
			  "name": "condition",
			  "nodeType": "ModifierDefinition",
			  "parameters": {
				"id": 76,
				"nodeType": "ParameterList",
				"parameters": [
				  {
					"constant": false,
					"id": 75,
					"mutability": "mutable",
					"name": "_condition",
					"nodeType": "VariableDeclaration",
					"scope": 83,
					"src": "744:15:1",
					"stateVariable": false,
					"storageLocation": "default",
					"typeDescriptions": {
					  "typeIdentifier": "t_bool",
					  "typeString": "bool"
					},
					"typeName": {
					  "id": 74,
					  "name": "bool",
					  "nodeType": "ElementaryTypeName",
					  "src": "744:4:1",
					  "typeDescriptions": {
						"typeIdentifier": "t_bool",
						"typeString": "bool"
					  }
					},
					"visibility": "internal"
				  }
				],
				"src": "743:17:1"
			  },
			  "src": "725:68:1",
			  "virtual": false,
			  "visibility": "internal"
			},
			{
			  "body": {
				"id": 93,
				"nodeType": "Block",
				"src": "822:53:1",
				"statements": [
				  {
					"expression": {
					  "arguments": [
						{
						  "commonType": {
							"typeIdentifier": "t_address",
							"typeString": "address"
						  },
						  "id": 89,
						  "isConstant": false,
						  "isLValue": false,
						  "isPure": false,
						  "lValueRequested": false,
						  "leftExpression": {
							"expression": {
							  "id": 86,
							  "name": "msg",
							  "nodeType": "Identifier",
							  "overloadedDeclarations": [],
							  "referencedDeclaration": 4294967281,
							  "src": "834:3:1",
							  "typeDescriptions": {
								"typeIdentifier": "t_magic_message",
								"typeString": "msg"
							  }
							},
							"id": 87,
							"isConstant": false,
							"isLValue": false,
							"isPure": false,
							"lValueRequested": false,
							"memberName": "sender",
							"nodeType": "MemberAccess",
							"src": "834:10:1",
							"typeDescriptions": {
							  "typeIdentifier": "t_address",
							  "typeString": "address"
							}
						  },
						  "nodeType": "BinaryOperation",
						  "operator": "==",
						  "rightExpression": {
							"id": 88,
							"name": "freelancerAddress",
							"nodeType": "Identifier",
							"overloadedDeclarations": [],
							"referencedDeclaration": 63,
							"src": "848:17:1",
							"typeDescriptions": {
							  "typeIdentifier": "t_address_payable",
							  "typeString": "address payable"
							}
						  },
						  "src": "834:31:1",
						  "typeDescriptions": {
							"typeIdentifier": "t_bool",
							"typeString": "bool"
						  }
						}
					  ],
					  "expression": {
						"argumentTypes": [
						  {
							"typeIdentifier": "t_bool",
							"typeString": "bool"
						  }
						],
						"id": 85,
						"name": "require",
						"nodeType": "Identifier",
						"overloadedDeclarations": [
						  4294967278,
						  4294967278
						],
						"referencedDeclaration": 4294967278,
						"src": "826:7:1",
						"typeDescriptions": {
						  "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
						  "typeString": "function (bool) pure"
						}
					  },
					  "id": 90,
					  "isConstant": false,
					  "isLValue": false,
					  "isPure": false,
					  "kind": "functionCall",
					  "lValueRequested": false,
					  "names": [],
					  "nodeType": "FunctionCall",
					  "src": "826:40:1",
					  "tryCall": false,
					  "typeDescriptions": {
						"typeIdentifier": "t_tuple$__$",
						"typeString": "tuple()"
					  }
					},
					"id": 91,
					"nodeType": "ExpressionStatement",
					"src": "826:40:1"
				  },
				  {
					"id": 92,
					"nodeType": "PlaceholderStatement",
					"src": "870:1:1"
				  }
				]
			  },
			  "id": 94,
			  "name": "onlyFreelancer",
			  "nodeType": "ModifierDefinition",
			  "parameters": {
				"id": 84,
				"nodeType": "ParameterList",
				"parameters": [],
				"src": "819:2:1"
			  },
			  "src": "796:79:1",
			  "virtual": false,
			  "visibility": "internal"
			},
			{
			  "body": {
				"id": 104,
				"nodeType": "Block",
				"src": "900:49:1",
				"statements": [
				  {
					"expression": {
					  "arguments": [
						{
						  "commonType": {
							"typeIdentifier": "t_address",
							"typeString": "address"
						  },
						  "id": 100,
						  "isConstant": false,
						  "isLValue": false,
						  "isPure": false,
						  "lValueRequested": false,
						  "leftExpression": {
							"expression": {
							  "id": 97,
							  "name": "msg",
							  "nodeType": "Identifier",
							  "overloadedDeclarations": [],
							  "referencedDeclaration": 4294967281,
							  "src": "912:3:1",
							  "typeDescriptions": {
								"typeIdentifier": "t_magic_message",
								"typeString": "msg"
							  }
							},
							"id": 98,
							"isConstant": false,
							"isLValue": false,
							"isPure": false,
							"lValueRequested": false,
							"memberName": "sender",
							"nodeType": "MemberAccess",
							"src": "912:10:1",
							"typeDescriptions": {
							  "typeIdentifier": "t_address",
							  "typeString": "address"
							}
						  },
						  "nodeType": "BinaryOperation",
						  "operator": "==",
						  "rightExpression": {
							"id": 99,
							"name": "clientAddress",
							"nodeType": "Identifier",
							"overloadedDeclarations": [],
							"referencedDeclaration": 65,
							"src": "926:13:1",
							"typeDescriptions": {
							  "typeIdentifier": "t_address",
							  "typeString": "address"
							}
						  },
						  "src": "912:27:1",
						  "typeDescriptions": {
							"typeIdentifier": "t_bool",
							"typeString": "bool"
						  }
						}
					  ],
					  "expression": {
						"argumentTypes": [
						  {
							"typeIdentifier": "t_bool",
							"typeString": "bool"
						  }
						],
						"id": 96,
						"name": "require",
						"nodeType": "Identifier",
						"overloadedDeclarations": [
						  4294967278,
						  4294967278
						],
						"referencedDeclaration": 4294967278,
						"src": "904:7:1",
						"typeDescriptions": {
						  "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
						  "typeString": "function (bool) pure"
						}
					  },
					  "id": 101,
					  "isConstant": false,
					  "isLValue": false,
					  "isPure": false,
					  "kind": "functionCall",
					  "lValueRequested": false,
					  "names": [],
					  "nodeType": "FunctionCall",
					  "src": "904:36:1",
					  "tryCall": false,
					  "typeDescriptions": {
						"typeIdentifier": "t_tuple$__$",
						"typeString": "tuple()"
					  }
					},
					"id": 102,
					"nodeType": "ExpressionStatement",
					"src": "904:36:1"
				  },
				  {
					"id": 103,
					"nodeType": "PlaceholderStatement",
					"src": "944:1:1"
				  }
				]
			  },
			  "id": 105,
			  "name": "onlyClient",
			  "nodeType": "ModifierDefinition",
			  "parameters": {
				"id": 95,
				"nodeType": "ParameterList",
				"parameters": [],
				"src": "897:2:1"
			  },
			  "src": "878:71:1",
			  "virtual": false,
			  "visibility": "internal"
			},
			{
			  "body": {
				"id": 120,
				"nodeType": "Block",
				"src": "984:89:1",
				"statements": [
				  {
					"expression": {
					  "arguments": [
						{
						  "commonType": {
							"typeIdentifier": "t_bool",
							"typeString": "bool"
						  },
						  "id": 116,
						  "isConstant": false,
						  "isLValue": false,
						  "isPure": false,
						  "lValueRequested": false,
						  "leftExpression": {
							"commonType": {
							  "typeIdentifier": "t_address",
							  "typeString": "address"
							},
							"id": 111,
							"isConstant": false,
							"isLValue": false,
							"isPure": false,
							"lValueRequested": false,
							"leftExpression": {
							  "expression": {
								"id": 108,
								"name": "msg",
								"nodeType": "Identifier",
								"overloadedDeclarations": [],
								"referencedDeclaration": 4294967281,
								"src": "996:3:1",
								"typeDescriptions": {
								  "typeIdentifier": "t_magic_message",
								  "typeString": "msg"
								}
							  },
							  "id": 109,
							  "isConstant": false,
							  "isLValue": false,
							  "isPure": false,
							  "lValueRequested": false,
							  "memberName": "sender",
							  "nodeType": "MemberAccess",
							  "src": "996:10:1",
							  "typeDescriptions": {
								"typeIdentifier": "t_address",
								"typeString": "address"
							  }
							},
							"nodeType": "BinaryOperation",
							"operator": "==",
							"rightExpression": {
							  "id": 110,
							  "name": "clientAddress",
							  "nodeType": "Identifier",
							  "overloadedDeclarations": [],
							  "referencedDeclaration": 65,
							  "src": "1010:13:1",
							  "typeDescriptions": {
								"typeIdentifier": "t_address",
								"typeString": "address"
							  }
							},
							"src": "996:27:1",
							"typeDescriptions": {
							  "typeIdentifier": "t_bool",
							  "typeString": "bool"
							}
						  },
						  "nodeType": "BinaryOperation",
						  "operator": "||",
						  "rightExpression": {
							"commonType": {
							  "typeIdentifier": "t_address",
							  "typeString": "address"
							},
							"id": 115,
							"isConstant": false,
							"isLValue": false,
							"isPure": false,
							"lValueRequested": false,
							"leftExpression": {
							  "expression": {
								"id": 112,
								"name": "msg",
								"nodeType": "Identifier",
								"overloadedDeclarations": [],
								"referencedDeclaration": 4294967281,
								"src": "1027:3:1",
								"typeDescriptions": {
								  "typeIdentifier": "t_magic_message",
								  "typeString": "msg"
								}
							  },
							  "id": 113,
							  "isConstant": false,
							  "isLValue": false,
							  "isPure": false,
							  "lValueRequested": false,
							  "memberName": "sender",
							  "nodeType": "MemberAccess",
							  "src": "1027:10:1",
							  "typeDescriptions": {
								"typeIdentifier": "t_address",
								"typeString": "address"
							  }
							},
							"nodeType": "BinaryOperation",
							"operator": "==",
							"rightExpression": {
							  "id": 114,
							  "name": "freelancerAddress",
							  "nodeType": "Identifier",
							  "overloadedDeclarations": [],
							  "referencedDeclaration": 63,
							  "src": "1041:17:1",
							  "typeDescriptions": {
								"typeIdentifier": "t_address_payable",
								"typeString": "address payable"
							  }
							},
							"src": "1027:31:1",
							"typeDescriptions": {
							  "typeIdentifier": "t_bool",
							  "typeString": "bool"
							}
						  },
						  "src": "996:62:1",
						  "typeDescriptions": {
							"typeIdentifier": "t_bool",
							"typeString": "bool"
						  }
						}
					  ],
					  "expression": {
						"argumentTypes": [
						  {
							"typeIdentifier": "t_bool",
							"typeString": "bool"
						  }
						],
						"id": 107,
						"name": "require",
						"nodeType": "Identifier",
						"overloadedDeclarations": [
						  4294967278,
						  4294967278
						],
						"referencedDeclaration": 4294967278,
						"src": "988:7:1",
						"typeDescriptions": {
						  "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
						  "typeString": "function (bool) pure"
						}
					  },
					  "id": 117,
					  "isConstant": false,
					  "isLValue": false,
					  "isPure": false,
					  "kind": "functionCall",
					  "lValueRequested": false,
					  "names": [],
					  "nodeType": "FunctionCall",
					  "src": "988:71:1",
					  "tryCall": false,
					  "typeDescriptions": {
						"typeIdentifier": "t_tuple$__$",
						"typeString": "tuple()"
					  }
					},
					"id": 118,
					"nodeType": "ExpressionStatement",
					"src": "988:71:1"
				  },
				  {
					"id": 119,
					"nodeType": "PlaceholderStatement",
					"src": "1063:1:1"
				  }
				]
			  },
			  "id": 121,
			  "name": "bothClientFreelancer",
			  "nodeType": "ModifierDefinition",
			  "parameters": {
				"id": 106,
				"nodeType": "ParameterList",
				"parameters": [],
				"src": "982:2:1"
			  },
			  "src": "953:120:1",
			  "virtual": false,
			  "visibility": "internal"
			},
			{
			  "body": {
				"id": 133,
				"nodeType": "Block",
				"src": "1121:44:1",
				"statements": [
				  {
					"expression": {
					  "arguments": [
						{
						  "commonType": {
							"typeIdentifier": "t_enum$_ProjectState_$48",
							"typeString": "enum freelancer.ProjectState"
						  },
						  "id": 129,
						  "isConstant": false,
						  "isLValue": false,
						  "isPure": false,
						  "lValueRequested": false,
						  "leftExpression": {
							"id": 127,
							"name": "projectState",
							"nodeType": "Identifier",
							"overloadedDeclarations": [],
							"referencedDeclaration": 68,
							"src": "1133:12:1",
							"typeDescriptions": {
							  "typeIdentifier": "t_enum$_ProjectState_$48",
							  "typeString": "enum freelancer.ProjectState"
							}
						  },
						  "nodeType": "BinaryOperation",
						  "operator": "==",
						  "rightExpression": {
							"id": 128,
							"name": "_state",
							"nodeType": "Identifier",
							"overloadedDeclarations": [],
							"referencedDeclaration": 124,
							"src": "1149:6:1",
							"typeDescriptions": {
							  "typeIdentifier": "t_enum$_ProjectState_$48",
							  "typeString": "enum freelancer.ProjectState"
							}
						  },
						  "src": "1133:22:1",
						  "typeDescriptions": {
							"typeIdentifier": "t_bool",
							"typeString": "bool"
						  }
						}
					  ],
					  "expression": {
						"argumentTypes": [
						  {
							"typeIdentifier": "t_bool",
							"typeString": "bool"
						  }
						],
						"id": 126,
						"name": "require",
						"nodeType": "Identifier",
						"overloadedDeclarations": [
						  4294967278,
						  4294967278
						],
						"referencedDeclaration": 4294967278,
						"src": "1125:7:1",
						"typeDescriptions": {
						  "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
						  "typeString": "function (bool) pure"
						}
					  },
					  "id": 130,
					  "isConstant": false,
					  "isLValue": false,
					  "isPure": false,
					  "kind": "functionCall",
					  "lValueRequested": false,
					  "names": [],
					  "nodeType": "FunctionCall",
					  "src": "1125:31:1",
					  "tryCall": false,
					  "typeDescriptions": {
						"typeIdentifier": "t_tuple$__$",
						"typeString": "tuple()"
					  }
					},
					"id": 131,
					"nodeType": "ExpressionStatement",
					"src": "1125:31:1"
				  },
				  {
					"id": 132,
					"nodeType": "PlaceholderStatement",
					"src": "1160:1:1"
				  }
				]
			  },
			  "id": 134,
			  "name": "inProjectState",
			  "nodeType": "ModifierDefinition",
			  "parameters": {
				"id": 125,
				"nodeType": "ParameterList",
				"parameters": [
				  {
					"constant": false,
					"id": 124,
					"mutability": "mutable",
					"name": "_state",
					"nodeType": "VariableDeclaration",
					"scope": 134,
					"src": "1100:19:1",
					"stateVariable": false,
					"storageLocation": "default",
					"typeDescriptions": {
					  "typeIdentifier": "t_enum$_ProjectState_$48",
					  "typeString": "enum freelancer.ProjectState"
					},
					"typeName": {
					  "id": 123,
					  "nodeType": "UserDefinedTypeName",
					  "pathNode": {
						"id": 122,
						"name": "ProjectState",
						"nodeType": "IdentifierPath",
						"referencedDeclaration": 48,
						"src": "1100:12:1"
					  },
					  "referencedDeclaration": 48,
					  "src": "1100:12:1",
					  "typeDescriptions": {
						"typeIdentifier": "t_enum$_ProjectState_$48",
						"typeString": "enum freelancer.ProjectState"
					  }
					},
					"visibility": "internal"
				  }
				],
				"src": "1099:21:1"
			  },
			  "src": "1076:89:1",
			  "virtual": false,
			  "visibility": "internal"
			},
			{
			  "body": {
				"id": 158,
				"nodeType": "Block",
				"src": "1237:129:1",
				"statements": [
				  {
					"expression": {
					  "arguments": [
						{
						  "commonType": {
							"typeIdentifier": "t_bool",
							"typeString": "bool"
						  },
						  "id": 154,
						  "isConstant": false,
						  "isLValue": false,
						  "isPure": false,
						  "lValueRequested": false,
						  "leftExpression": {
							"components": [
							  {
								"commonType": {
								  "typeIdentifier": "t_int256",
								  "typeString": "int256"
								},
								"id": 146,
								"isConstant": false,
								"isLValue": false,
								"isPure": false,
								"lValueRequested": false,
								"leftExpression": {
								  "id": 142,
								  "name": "_scheduleID",
								  "nodeType": "Identifier",
								  "overloadedDeclarations": [],
								  "referencedDeclaration": 136,
								  "src": "1256:11:1",
								  "typeDescriptions": {
									"typeIdentifier": "t_int256",
									"typeString": "int256"
								  }
								},
								"nodeType": "BinaryOperation",
								"operator": "<=",
								"rightExpression": {
								  "commonType": {
									"typeIdentifier": "t_int256",
									"typeString": "int256"
								  },
								  "id": 145,
								  "isConstant": false,
								  "isLValue": false,
								  "isPure": false,
								  "lValueRequested": false,
								  "leftExpression": {
									"id": 143,
									"name": "totalSchedules",
									"nodeType": "Identifier",
									"overloadedDeclarations": [],
									"referencedDeclaration": 61,
									"src": "1271:14:1",
									"typeDescriptions": {
									  "typeIdentifier": "t_int256",
									  "typeString": "int256"
									}
								  },
								  "nodeType": "BinaryOperation",
								  "operator": "-",
								  "rightExpression": {
									"hexValue": "31",
									"id": 144,
									"isConstant": false,
									"isLValue": false,
									"isPure": true,
									"kind": "number",
									"lValueRequested": false,
									"nodeType": "Literal",
									"src": "1288:1:1",
									"typeDescriptions": {
									  "typeIdentifier": "t_rational_1_by_1",
									  "typeString": "int_const 1"
									},
									"value": "1"
								  },
								  "src": "1271:18:1",
								  "typeDescriptions": {
									"typeIdentifier": "t_int256",
									"typeString": "int256"
								  }
								},
								"src": "1256:33:1",
								"typeDescriptions": {
								  "typeIdentifier": "t_bool",
								  "typeString": "bool"
								}
							  }
							],
							"id": 147,
							"isConstant": false,
							"isInlineArray": false,
							"isLValue": false,
							"isPure": false,
							"lValueRequested": false,
							"nodeType": "TupleExpression",
							"src": "1255:35:1",
							"typeDescriptions": {
							  "typeIdentifier": "t_bool",
							  "typeString": "bool"
							}
						  },
						  "nodeType": "BinaryOperation",
						  "operator": "&&",
						  "rightExpression": {
							"commonType": {
							  "typeIdentifier": "t_enum$_ScheduleState_$44",
							  "typeString": "enum freelancer.ScheduleState"
							},
							"id": 153,
							"isConstant": false,
							"isLValue": false,
							"isPure": false,
							"lValueRequested": false,
							"leftExpression": {
							  "expression": {
								"baseExpression": {
								  "id": 148,
								  "name": "scheduleRegister",
								  "nodeType": "Identifier",
								  "overloadedDeclarations": [],
								  "referencedDeclaration": 73,
								  "src": "1294:16:1",
								  "typeDescriptions": {
									"typeIdentifier": "t_mapping$_t_int256_$_t_struct$_schedule_$58_storage_$",
									"typeString": "mapping(int256 => struct freelancer.schedule storage ref)"
								  }
								},
								"id": 150,
								"indexExpression": {
								  "id": 149,
								  "name": "_scheduleID",
								  "nodeType": "Identifier",
								  "overloadedDeclarations": [],
								  "referencedDeclaration": 136,
								  "src": "1311:11:1",
								  "typeDescriptions": {
									"typeIdentifier": "t_int256",
									"typeString": "int256"
								  }
								},
								"isConstant": false,
								"isLValue": true,
								"isPure": false,
								"lValueRequested": false,
								"nodeType": "IndexAccess",
								"src": "1294:29:1",
								"typeDescriptions": {
								  "typeIdentifier": "t_struct$_schedule_$58_storage",
								  "typeString": "struct freelancer.schedule storage ref"
								}
							  },
							  "id": 151,
							  "isConstant": false,
							  "isLValue": true,
							  "isPure": false,
							  "lValueRequested": false,
							  "memberName": "scheduleState",
							  "nodeType": "MemberAccess",
							  "referencedDeclaration": 57,
							  "src": "1294:43:1",
							  "typeDescriptions": {
								"typeIdentifier": "t_enum$_ScheduleState_$44",
								"typeString": "enum freelancer.ScheduleState"
							  }
							},
							"nodeType": "BinaryOperation",
							"operator": "==",
							"rightExpression": {
							  "id": 152,
							  "name": "_state",
							  "nodeType": "Identifier",
							  "overloadedDeclarations": [],
							  "referencedDeclaration": 139,
							  "src": "1341:6:1",
							  "typeDescriptions": {
								"typeIdentifier": "t_enum$_ScheduleState_$44",
								"typeString": "enum freelancer.ScheduleState"
							  }
							},
							"src": "1294:53:1",
							"typeDescriptions": {
							  "typeIdentifier": "t_bool",
							  "typeString": "bool"
							}
						  },
						  "src": "1255:92:1",
						  "typeDescriptions": {
							"typeIdentifier": "t_bool",
							"typeString": "bool"
						  }
						}
					  ],
					  "expression": {
						"argumentTypes": [
						  {
							"typeIdentifier": "t_bool",
							"typeString": "bool"
						  }
						],
						"id": 141,
						"name": "require",
						"nodeType": "Identifier",
						"overloadedDeclarations": [
						  4294967278,
						  4294967278
						],
						"referencedDeclaration": 4294967278,
						"src": "1247:7:1",
						"typeDescriptions": {
						  "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
						  "typeString": "function (bool) pure"
						}
					  },
					  "id": 155,
					  "isConstant": false,
					  "isLValue": false,
					  "isPure": false,
					  "kind": "functionCall",
					  "lValueRequested": false,
					  "names": [],
					  "nodeType": "FunctionCall",
					  "src": "1247:101:1",
					  "tryCall": false,
					  "typeDescriptions": {
						"typeIdentifier": "t_tuple$__$",
						"typeString": "tuple()"
					  }
					},
					"id": 156,
					"nodeType": "ExpressionStatement",
					"src": "1247:101:1"
				  },
				  {
					"id": 157,
					"nodeType": "PlaceholderStatement",
					"src": "1358:1:1"
				  }
				]
			  },
			  "id": 159,
			  "name": "inScheduleState",
			  "nodeType": "ModifierDefinition",
			  "parameters": {
				"id": 140,
				"nodeType": "ParameterList",
				"parameters": [
				  {
					"constant": false,
					"id": 136,
					"mutability": "mutable",
					"name": "_scheduleID",
					"nodeType": "VariableDeclaration",
					"scope": 159,
					"src": "1196:18:1",
					"stateVariable": false,
					"storageLocation": "default",
					"typeDescriptions": {
					  "typeIdentifier": "t_int256",
					  "typeString": "int256"
					},
					"typeName": {
					  "id": 135,
					  "name": "int256",
					  "nodeType": "ElementaryTypeName",
					  "src": "1196:6:1",
					  "typeDescriptions": {
						"typeIdentifier": "t_int256",
						"typeString": "int256"
					  }
					},
					"visibility": "internal"
				  },
				  {
					"constant": false,
					"id": 139,
					"mutability": "mutable",
					"name": "_state",
					"nodeType": "VariableDeclaration",
					"scope": 159,
					"src": "1216:20:1",
					"stateVariable": false,
					"storageLocation": "default",
					"typeDescriptions": {
					  "typeIdentifier": "t_enum$_ScheduleState_$44",
					  "typeString": "enum freelancer.ScheduleState"
					},
					"typeName": {
					  "id": 138,
					  "nodeType": "UserDefinedTypeName",
					  "pathNode": {
						"id": 137,
						"name": "ScheduleState",
						"nodeType": "IdentifierPath",
						"referencedDeclaration": 44,
						"src": "1216:13:1"
					  },
					  "referencedDeclaration": 44,
					  "src": "1216:13:1",
					  "typeDescriptions": {
						"typeIdentifier": "t_enum$_ScheduleState_$44",
						"typeString": "enum freelancer.ScheduleState"
					  }
					},
					"visibility": "internal"
				  }
				],
				"src": "1195:42:1"
			  },
			  "src": "1171:195:1",
			  "virtual": false,
			  "visibility": "internal"
			},
			{
			  "body": {
				"id": 175,
				"nodeType": "Block",
				"src": "1431:84:1",
				"statements": [
				  {
					"expression": {
					  "arguments": [
						{
						  "commonType": {
							"typeIdentifier": "t_uint256",
							"typeString": "uint256"
						  },
						  "id": 171,
						  "isConstant": false,
						  "isLValue": false,
						  "isPure": false,
						  "lValueRequested": false,
						  "leftExpression": {
							"expression": {
							  "baseExpression": {
								"id": 166,
								"name": "scheduleRegister",
								"nodeType": "Identifier",
								"overloadedDeclarations": [],
								"referencedDeclaration": 73,
								"src": "1449:16:1",
								"typeDescriptions": {
								  "typeIdentifier": "t_mapping$_t_int256_$_t_struct$_schedule_$58_storage_$",
								  "typeString": "mapping(int256 => struct freelancer.schedule storage ref)"
								}
							  },
							  "id": 168,
							  "indexExpression": {
								"id": 167,
								"name": "_scheduleID",
								"nodeType": "Identifier",
								"overloadedDeclarations": [],
								"referencedDeclaration": 161,
								"src": "1466:11:1",
								"typeDescriptions": {
								  "typeIdentifier": "t_int256",
								  "typeString": "int256"
								}
							  },
							  "isConstant": false,
							  "isLValue": true,
							  "isPure": false,
							  "lValueRequested": false,
							  "nodeType": "IndexAccess",
							  "src": "1449:29:1",
							  "typeDescriptions": {
								"typeIdentifier": "t_struct$_schedule_$58_storage",
								"typeString": "struct freelancer.schedule storage ref"
							  }
							},
							"id": 169,
							"isConstant": false,
							"isLValue": true,
							"isPure": false,
							"lValueRequested": false,
							"memberName": "value",
							"nodeType": "MemberAccess",
							"referencedDeclaration": 54,
							"src": "1449:35:1",
							"typeDescriptions": {
							  "typeIdentifier": "t_uint256",
							  "typeString": "uint256"
							}
						  },
						  "nodeType": "BinaryOperation",
						  "operator": "==",
						  "rightExpression": {
							"id": 170,
							"name": "_funding",
							"nodeType": "Identifier",
							"overloadedDeclarations": [],
							"referencedDeclaration": 163,
							"src": "1488:8:1",
							"typeDescriptions": {
							  "typeIdentifier": "t_uint256",
							  "typeString": "uint256"
							}
						  },
						  "src": "1449:47:1",
						  "typeDescriptions": {
							"typeIdentifier": "t_bool",
							"typeString": "bool"
						  }
						}
					  ],
					  "expression": {
						"argumentTypes": [
						  {
							"typeIdentifier": "t_bool",
							"typeString": "bool"
						  }
						],
						"id": 165,
						"name": "require",
						"nodeType": "Identifier",
						"overloadedDeclarations": [
						  4294967278,
						  4294967278
						],
						"referencedDeclaration": 4294967278,
						"src": "1441:7:1",
						"typeDescriptions": {
						  "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
						  "typeString": "function (bool) pure"
						}
					  },
					  "id": 172,
					  "isConstant": false,
					  "isLValue": false,
					  "isPure": false,
					  "kind": "functionCall",
					  "lValueRequested": false,
					  "names": [],
					  "nodeType": "FunctionCall",
					  "src": "1441:56:1",
					  "tryCall": false,
					  "typeDescriptions": {
						"typeIdentifier": "t_tuple$__$",
						"typeString": "tuple()"
					  }
					},
					"id": 173,
					"nodeType": "ExpressionStatement",
					"src": "1441:56:1"
				  },
				  {
					"id": 174,
					"nodeType": "PlaceholderStatement",
					"src": "1507:1:1"
				  }
				]
			  },
			  "id": 176,
			  "name": "ampleFunding",
			  "nodeType": "ModifierDefinition",
			  "parameters": {
				"id": 164,
				"nodeType": "ParameterList",
				"parameters": [
				  {
					"constant": false,
					"id": 161,
					"mutability": "mutable",
					"name": "_scheduleID",
					"nodeType": "VariableDeclaration",
					"scope": 176,
					"src": "1394:18:1",
					"stateVariable": false,
					"storageLocation": "default",
					"typeDescriptions": {
					  "typeIdentifier": "t_int256",
					  "typeString": "int256"
					},
					"typeName": {
					  "id": 160,
					  "name": "int256",
					  "nodeType": "ElementaryTypeName",
					  "src": "1394:6:1",
					  "typeDescriptions": {
						"typeIdentifier": "t_int256",
						"typeString": "int256"
					  }
					},
					"visibility": "internal"
				  },
				  {
					"constant": false,
					"id": 163,
					"mutability": "mutable",
					"name": "_funding",
					"nodeType": "VariableDeclaration",
					"scope": 176,
					"src": "1414:16:1",
					"stateVariable": false,
					"storageLocation": "default",
					"typeDescriptions": {
					  "typeIdentifier": "t_uint256",
					  "typeString": "uint256"
					},
					"typeName": {
					  "id": 162,
					  "name": "uint256",
					  "nodeType": "ElementaryTypeName",
					  "src": "1414:7:1",
					  "typeDescriptions": {
						"typeIdentifier": "t_uint256",
						"typeString": "uint256"
					  }
					},
					"visibility": "internal"
				  }
				],
				"src": "1393:38:1"
			  },
			  "src": "1372:143:1",
			  "virtual": false,
			  "visibility": "internal"
			},
			{
			  "body": {
				"id": 189,
				"nodeType": "Block",
				"src": "1543:63:1",
				"statements": [
				  {
					"expression": {
					  "arguments": [
						{
						  "commonType": {
							"typeIdentifier": "t_uint256",
							"typeString": "uint256"
						  },
						  "id": 185,
						  "isConstant": false,
						  "isLValue": false,
						  "isPure": false,
						  "lValueRequested": false,
						  "leftExpression": {
							"expression": {
							  "arguments": [
								{
								  "id": 181,
								  "name": "this",
								  "nodeType": "Identifier",
								  "overloadedDeclarations": [],
								  "referencedDeclaration": 4294967268,
								  "src": "1569:4:1",
								  "typeDescriptions": {
									"typeIdentifier": "t_contract$_freelancer_$479",
									"typeString": "contract freelancer"
								  }
								}
							  ],
							  "expression": {
								"argumentTypes": [
								  {
									"typeIdentifier": "t_contract$_freelancer_$479",
									"typeString": "contract freelancer"
								  }
								],
								"id": 180,
								"isConstant": false,
								"isLValue": false,
								"isPure": true,
								"lValueRequested": false,
								"nodeType": "ElementaryTypeNameExpression",
								"src": "1561:7:1",
								"typeDescriptions": {
								  "typeIdentifier": "t_type$_t_address_$",
								  "typeString": "type(address)"
								},
								"typeName": {
								  "id": 179,
								  "name": "address",
								  "nodeType": "ElementaryTypeName",
								  "src": "1561:7:1",
								  "typeDescriptions": {}
								}
							  },
							  "id": 182,
							  "isConstant": false,
							  "isLValue": false,
							  "isPure": false,
							  "kind": "typeConversion",
							  "lValueRequested": false,
							  "names": [],
							  "nodeType": "FunctionCall",
							  "src": "1561:13:1",
							  "tryCall": false,
							  "typeDescriptions": {
								"typeIdentifier": "t_address",
								"typeString": "address"
							  }
							},
							"id": 183,
							"isConstant": false,
							"isLValue": false,
							"isPure": false,
							"lValueRequested": false,
							"memberName": "balance",
							"nodeType": "MemberAccess",
							"src": "1561:21:1",
							"typeDescriptions": {
							  "typeIdentifier": "t_uint256",
							  "typeString": "uint256"
							}
						  },
						  "nodeType": "BinaryOperation",
						  "operator": "==",
						  "rightExpression": {
							"hexValue": "30",
							"id": 184,
							"isConstant": false,
							"isLValue": false,
							"isPure": true,
							"kind": "number",
							"lValueRequested": false,
							"nodeType": "Literal",
							"src": "1586:1:1",
							"typeDescriptions": {
							  "typeIdentifier": "t_rational_0_by_1",
							  "typeString": "int_const 0"
							},
							"value": "0"
						  },
						  "src": "1561:26:1",
						  "typeDescriptions": {
							"typeIdentifier": "t_bool",
							"typeString": "bool"
						  }
						}
					  ],
					  "expression": {
						"argumentTypes": [
						  {
							"typeIdentifier": "t_bool",
							"typeString": "bool"
						  }
						],
						"id": 178,
						"name": "require",
						"nodeType": "Identifier",
						"overloadedDeclarations": [
						  4294967278,
						  4294967278
						],
						"referencedDeclaration": 4294967278,
						"src": "1553:7:1",
						"typeDescriptions": {
						  "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
						  "typeString": "function (bool) pure"
						}
					  },
					  "id": 186,
					  "isConstant": false,
					  "isLValue": false,
					  "isPure": false,
					  "kind": "functionCall",
					  "lValueRequested": false,
					  "names": [],
					  "nodeType": "FunctionCall",
					  "src": "1553:35:1",
					  "tryCall": false,
					  "typeDescriptions": {
						"typeIdentifier": "t_tuple$__$",
						"typeString": "tuple()"
					  }
					},
					"id": 187,
					"nodeType": "ExpressionStatement",
					"src": "1553:35:1"
				  },
				  {
					"id": 188,
					"nodeType": "PlaceholderStatement",
					"src": "1598:1:1"
				  }
				]
			  },
			  "id": 190,
			  "name": "noMoreFunds",
			  "nodeType": "ModifierDefinition",
			  "parameters": {
				"id": 177,
				"nodeType": "ParameterList",
				"parameters": [],
				"src": "1541:2:1"
			  },
			  "src": "1521:85:1",
			  "virtual": false,
			  "visibility": "internal"
			},
			{
			  "anonymous": false,
			  "id": 194,
			  "name": "scheduleAdded",
			  "nodeType": "EventDefinition",
			  "parameters": {
				"id": 193,
				"nodeType": "ParameterList",
				"parameters": [
				  {
					"constant": false,
					"id": 192,
					"indexed": false,
					"mutability": "mutable",
					"name": "shortCode",
					"nodeType": "VariableDeclaration",
					"scope": 194,
					"src": "1632:16:1",
					"stateVariable": false,
					"storageLocation": "default",
					"typeDescriptions": {
					  "typeIdentifier": "t_string_memory_ptr",
					  "typeString": "string"
					},
					"typeName": {
					  "id": 191,
					  "name": "string",
					  "nodeType": "ElementaryTypeName",
					  "src": "1632:6:1",
					  "typeDescriptions": {
						"typeIdentifier": "t_string_storage_ptr",
						"typeString": "string"
					  }
					},
					"visibility": "internal"
				  }
				],
				"src": "1631:18:1"
			  },
			  "src": "1612:38:1"
			},
			{
			  "anonymous": false,
			  "id": 198,
			  "name": "projectAccepted",
			  "nodeType": "EventDefinition",
			  "parameters": {
				"id": 197,
				"nodeType": "ParameterList",
				"parameters": [
				  {
					"constant": false,
					"id": 196,
					"indexed": false,
					"mutability": "mutable",
					"name": "clientAddress",
					"nodeType": "VariableDeclaration",
					"scope": 198,
					"src": "1677:21:1",
					"stateVariable": false,
					"storageLocation": "default",
					"typeDescriptions": {
					  "typeIdentifier": "t_address",
					  "typeString": "address"
					},
					"typeName": {
					  "id": 195,
					  "name": "address",
					  "nodeType": "ElementaryTypeName",
					  "src": "1677:7:1",
					  "stateMutability": "nonpayable",
					  "typeDescriptions": {
						"typeIdentifier": "t_address",
						"typeString": "address"
					  }
					},
					"visibility": "internal"
				  }
				],
				"src": "1676:23:1"
			  },
			  "src": "1655:45:1"
			},
			{
			  "anonymous": false,
			  "id": 202,
			  "name": "taskFunded",
			  "nodeType": "EventDefinition",
			  "parameters": {
				"id": 201,
				"nodeType": "ParameterList",
				"parameters": [
				  {
					"constant": false,
					"id": 200,
					"indexed": false,
					"mutability": "mutable",
					"name": "scheduleID",
					"nodeType": "VariableDeclaration",
					"scope": 202,
					"src": "1722:17:1",
					"stateVariable": false,
					"storageLocation": "default",
					"typeDescriptions": {
					  "typeIdentifier": "t_int256",
					  "typeString": "int256"
					},
					"typeName": {
					  "id": 199,
					  "name": "int256",
					  "nodeType": "ElementaryTypeName",
					  "src": "1722:6:1",
					  "typeDescriptions": {
						"typeIdentifier": "t_int256",
						"typeString": "int256"
					  }
					},
					"visibility": "internal"
				  }
				],
				"src": "1721:19:1"
			  },
			  "src": "1705:36:1"
			},
			{
			  "anonymous": false,
			  "id": 206,
			  "name": "taskStarted",
			  "nodeType": "EventDefinition",
			  "parameters": {
				"id": 205,
				"nodeType": "ParameterList",
				"parameters": [
				  {
					"constant": false,
					"id": 204,
					"indexed": false,
					"mutability": "mutable",
					"name": "scheduleID",
					"nodeType": "VariableDeclaration",
					"scope": 206,
					"src": "1764:17:1",
					"stateVariable": false,
					"storageLocation": "default",
					"typeDescriptions": {
					  "typeIdentifier": "t_int256",
					  "typeString": "int256"
					},
					"typeName": {
					  "id": 203,
					  "name": "int256",
					  "nodeType": "ElementaryTypeName",
					  "src": "1764:6:1",
					  "typeDescriptions": {
						"typeIdentifier": "t_int256",
						"typeString": "int256"
					  }
					},
					"visibility": "internal"
				  }
				],
				"src": "1763:19:1"
			  },
			  "src": "1746:37:1"
			},
			{
			  "anonymous": false,
			  "id": 210,
			  "name": "taskApproved",
			  "nodeType": "EventDefinition",
			  "parameters": {
				"id": 209,
				"nodeType": "ParameterList",
				"parameters": [
				  {
					"constant": false,
					"id": 208,
					"indexed": false,
					"mutability": "mutable",
					"name": "scheduleID",
					"nodeType": "VariableDeclaration",
					"scope": 210,
					"src": "1807:17:1",
					"stateVariable": false,
					"storageLocation": "default",
					"typeDescriptions": {
					  "typeIdentifier": "t_int256",
					  "typeString": "int256"
					},
					"typeName": {
					  "id": 207,
					  "name": "int256",
					  "nodeType": "ElementaryTypeName",
					  "src": "1807:6:1",
					  "typeDescriptions": {
						"typeIdentifier": "t_int256",
						"typeString": "int256"
					  }
					},
					"visibility": "internal"
				  }
				],
				"src": "1806:19:1"
			  },
			  "src": "1788:38:1"
			},
			{
			  "anonymous": false,
			  "id": 216,
			  "name": "fundsReleased",
			  "nodeType": "EventDefinition",
			  "parameters": {
				"id": 215,
				"nodeType": "ParameterList",
				"parameters": [
				  {
					"constant": false,
					"id": 212,
					"indexed": false,
					"mutability": "mutable",
					"name": "scheduleID",
					"nodeType": "VariableDeclaration",
					"scope": 216,
					"src": "1851:17:1",
					"stateVariable": false,
					"storageLocation": "default",
					"typeDescriptions": {
					  "typeIdentifier": "t_int256",
					  "typeString": "int256"
					},
					"typeName": {
					  "id": 211,
					  "name": "int256",
					  "nodeType": "ElementaryTypeName",
					  "src": "1851:6:1",
					  "typeDescriptions": {
						"typeIdentifier": "t_int256",
						"typeString": "int256"
					  }
					},
					"visibility": "internal"
				  },
				  {
					"constant": false,
					"id": 214,
					"indexed": false,
					"mutability": "mutable",
					"name": "valueReleased",
					"nodeType": "VariableDeclaration",
					"scope": 216,
					"src": "1870:21:1",
					"stateVariable": false,
					"storageLocation": "default",
					"typeDescriptions": {
					  "typeIdentifier": "t_uint256",
					  "typeString": "uint256"
					},
					"typeName": {
					  "id": 213,
					  "name": "uint256",
					  "nodeType": "ElementaryTypeName",
					  "src": "1870:7:1",
					  "typeDescriptions": {
						"typeIdentifier": "t_uint256",
						"typeString": "uint256"
					  }
					},
					"visibility": "internal"
				  }
				],
				"src": "1850:42:1"
			  },
			  "src": "1831:62:1"
			},
			{
			  "anonymous": false,
			  "id": 218,
			  "name": "projectEnded",
			  "nodeType": "EventDefinition",
			  "parameters": {
				"id": 217,
				"nodeType": "ParameterList",
				"parameters": [],
				"src": "1916:2:1"
			  },
			  "src": "1898:21:1"
			},
			{
			  "body": {
				"id": 234,
				"nodeType": "Block",
				"src": "1947:103:1",
				"statements": [
				  {
					"expression": {
					  "id": 227,
					  "isConstant": false,
					  "isLValue": false,
					  "isPure": false,
					  "lValueRequested": false,
					  "leftHandSide": {
						"id": 221,
						"name": "freelancerAddress",
						"nodeType": "Identifier",
						"overloadedDeclarations": [],
						"referencedDeclaration": 63,
						"src": "1957:17:1",
						"typeDescriptions": {
						  "typeIdentifier": "t_address_payable",
						  "typeString": "address payable"
						}
					  },
					  "nodeType": "Assignment",
					  "operator": "=",
					  "rightHandSide": {
						"arguments": [
						  {
							"expression": {
							  "id": 224,
							  "name": "msg",
							  "nodeType": "Identifier",
							  "overloadedDeclarations": [],
							  "referencedDeclaration": 4294967281,
							  "src": "1985:3:1",
							  "typeDescriptions": {
								"typeIdentifier": "t_magic_message",
								"typeString": "msg"
							  }
							},
							"id": 225,
							"isConstant": false,
							"isLValue": false,
							"isPure": false,
							"lValueRequested": false,
							"memberName": "sender",
							"nodeType": "MemberAccess",
							"src": "1985:10:1",
							"typeDescriptions": {
							  "typeIdentifier": "t_address",
							  "typeString": "address"
							}
						  }
						],
						"expression": {
						  "argumentTypes": [
							{
							  "typeIdentifier": "t_address",
							  "typeString": "address"
							}
						  ],
						  "id": 223,
						  "isConstant": false,
						  "isLValue": false,
						  "isPure": true,
						  "lValueRequested": false,
						  "nodeType": "ElementaryTypeNameExpression",
						  "src": "1977:8:1",
						  "typeDescriptions": {
							"typeIdentifier": "t_type$_t_address_payable_$",
							"typeString": "type(address payable)"
						  },
						  "typeName": {
							"id": 222,
							"name": "address",
							"nodeType": "ElementaryTypeName",
							"src": "1977:8:1",
							"stateMutability": "payable",
							"typeDescriptions": {}
						  }
						},
						"id": 226,
						"isConstant": false,
						"isLValue": false,
						"isPure": false,
						"kind": "typeConversion",
						"lValueRequested": false,
						"names": [],
						"nodeType": "FunctionCall",
						"src": "1977:19:1",
						"tryCall": false,
						"typeDescriptions": {
						  "typeIdentifier": "t_address_payable",
						  "typeString": "address payable"
						}
					  },
					  "src": "1957:39:1",
					  "typeDescriptions": {
						"typeIdentifier": "t_address_payable",
						"typeString": "address payable"
					  }
					},
					"id": 228,
					"nodeType": "ExpressionStatement",
					"src": "1957:39:1"
				  },
				  {
					"expression": {
					  "id": 232,
					  "isConstant": false,
					  "isLValue": false,
					  "isPure": false,
					  "lValueRequested": false,
					  "leftHandSide": {
						"id": 229,
						"name": "projectState",
						"nodeType": "Identifier",
						"overloadedDeclarations": [],
						"referencedDeclaration": 68,
						"src": "2006:12:1",
						"typeDescriptions": {
						  "typeIdentifier": "t_enum$_ProjectState_$48",
						  "typeString": "enum freelancer.ProjectState"
						}
					  },
					  "nodeType": "Assignment",
					  "operator": "=",
					  "rightHandSide": {
						"expression": {
						  "id": 230,
						  "name": "ProjectState",
						  "nodeType": "Identifier",
						  "overloadedDeclarations": [],
						  "referencedDeclaration": 48,
						  "src": "2021:12:1",
						  "typeDescriptions": {
							"typeIdentifier": "t_type$_t_enum$_ProjectState_$48_$",
							"typeString": "type(enum freelancer.ProjectState)"
						  }
						},
						"id": 231,
						"isConstant": false,
						"isLValue": false,
						"isPure": true,
						"lValueRequested": false,
						"memberName": "initiated",
						"nodeType": "MemberAccess",
						"src": "2021:22:1",
						"typeDescriptions": {
						  "typeIdentifier": "t_enum$_ProjectState_$48",
						  "typeString": "enum freelancer.ProjectState"
						}
					  },
					  "src": "2006:37:1",
					  "typeDescriptions": {
						"typeIdentifier": "t_enum$_ProjectState_$48",
						"typeString": "enum freelancer.ProjectState"
					  }
					},
					"id": 233,
					"nodeType": "ExpressionStatement",
					"src": "2006:37:1"
				  }
				]
			  },
			  "id": 235,
			  "implemented": true,
			  "kind": "constructor",
			  "modifiers": [],
			  "name": "",
			  "nodeType": "FunctionDefinition",
			  "parameters": {
				"id": 219,
				"nodeType": "ParameterList",
				"parameters": [],
				"src": "1940:2:1"
			  },
			  "returnParameters": {
				"id": 220,
				"nodeType": "ParameterList",
				"parameters": [],
				"src": "1947:0:1"
			  },
			  "scope": 479,
			  "src": "1929:121:1",
			  "stateMutability": "nonpayable",
			  "virtual": false,
			  "visibility": "public"
			},
			{
			  "body": {
				"id": 292,
				"nodeType": "Block",
				"src": "2240:293:1",
				"statements": [
				  {
					"assignments": [
					  252
					],
					"declarations": [
					  {
						"constant": false,
						"id": 252,
						"mutability": "mutable",
						"name": "s",
						"nodeType": "VariableDeclaration",
						"scope": 292,
						"src": "2250:17:1",
						"stateVariable": false,
						"storageLocation": "memory",
						"typeDescriptions": {
						  "typeIdentifier": "t_struct$_schedule_$58_memory_ptr",
						  "typeString": "struct freelancer.schedule"
						},
						"typeName": {
						  "id": 251,
						  "nodeType": "UserDefinedTypeName",
						  "pathNode": {
							"id": 250,
							"name": "schedule",
							"nodeType": "IdentifierPath",
							"referencedDeclaration": 58,
							"src": "2250:8:1"
						  },
						  "referencedDeclaration": 58,
						  "src": "2250:8:1",
						  "typeDescriptions": {
							"typeIdentifier": "t_struct$_schedule_$58_storage_ptr",
							"typeString": "struct freelancer.schedule"
						  }
						},
						"visibility": "internal"
					  }
					],
					"id": 253,
					"nodeType": "VariableDeclarationStatement",
					"src": "2250:17:1"
				  },
				  {
					"expression": {
					  "id": 258,
					  "isConstant": false,
					  "isLValue": false,
					  "isPure": false,
					  "lValueRequested": false,
					  "leftHandSide": {
						"expression": {
						  "id": 254,
						  "name": "s",
						  "nodeType": "Identifier",
						  "overloadedDeclarations": [],
						  "referencedDeclaration": 252,
						  "src": "2277:1:1",
						  "typeDescriptions": {
							"typeIdentifier": "t_struct$_schedule_$58_memory_ptr",
							"typeString": "struct freelancer.schedule memory"
						  }
						},
						"id": 256,
						"isConstant": false,
						"isLValue": true,
						"isPure": false,
						"lValueRequested": true,
						"memberName": "shortCode",
						"nodeType": "MemberAccess",
						"referencedDeclaration": 50,
						"src": "2277:11:1",
						"typeDescriptions": {
						  "typeIdentifier": "t_string_memory_ptr",
						  "typeString": "string memory"
						}
					  },
					  "nodeType": "Assignment",
					  "operator": "=",
					  "rightHandSide": {
						"id": 257,
						"name": "_shortCode",
						"nodeType": "Identifier",
						"overloadedDeclarations": [],
						"referencedDeclaration": 237,
						"src": "2291:10:1",
						"typeDescriptions": {
						  "typeIdentifier": "t_string_memory_ptr",
						  "typeString": "string memory"
						}
					  },
					  "src": "2277:24:1",
					  "typeDescriptions": {
						"typeIdentifier": "t_string_memory_ptr",
						"typeString": "string memory"
					  }
					},
					"id": 259,
					"nodeType": "ExpressionStatement",
					"src": "2277:24:1"
				  },
				  {
					"expression": {
					  "id": 264,
					  "isConstant": false,
					  "isLValue": false,
					  "isPure": false,
					  "lValueRequested": false,
					  "leftHandSide": {
						"expression": {
						  "id": 260,
						  "name": "s",
						  "nodeType": "Identifier",
						  "overloadedDeclarations": [],
						  "referencedDeclaration": 252,
						  "src": "2311:1:1",
						  "typeDescriptions": {
							"typeIdentifier": "t_struct$_schedule_$58_memory_ptr",
							"typeString": "struct freelancer.schedule memory"
						  }
						},
						"id": 262,
						"isConstant": false,
						"isLValue": true,
						"isPure": false,
						"lValueRequested": true,
						"memberName": "description",
						"nodeType": "MemberAccess",
						"referencedDeclaration": 52,
						"src": "2311:13:1",
						"typeDescriptions": {
						  "typeIdentifier": "t_string_memory_ptr",
						  "typeString": "string memory"
						}
					  },
					  "nodeType": "Assignment",
					  "operator": "=",
					  "rightHandSide": {
						"id": 263,
						"name": "_description",
						"nodeType": "Identifier",
						"overloadedDeclarations": [],
						"referencedDeclaration": 239,
						"src": "2327:12:1",
						"typeDescriptions": {
						  "typeIdentifier": "t_string_memory_ptr",
						  "typeString": "string memory"
						}
					  },
					  "src": "2311:28:1",
					  "typeDescriptions": {
						"typeIdentifier": "t_string_memory_ptr",
						"typeString": "string memory"
					  }
					},
					"id": 265,
					"nodeType": "ExpressionStatement",
					"src": "2311:28:1"
				  },
				  {
					"expression": {
					  "id": 271,
					  "isConstant": false,
					  "isLValue": false,
					  "isPure": false,
					  "lValueRequested": false,
					  "leftHandSide": {
						"expression": {
						  "id": 266,
						  "name": "s",
						  "nodeType": "Identifier",
						  "overloadedDeclarations": [],
						  "referencedDeclaration": 252,
						  "src": "2349:1:1",
						  "typeDescriptions": {
							"typeIdentifier": "t_struct$_schedule_$58_memory_ptr",
							"typeString": "struct freelancer.schedule memory"
						  }
						},
						"id": 268,
						"isConstant": false,
						"isLValue": true,
						"isPure": false,
						"lValueRequested": true,
						"memberName": "scheduleState",
						"nodeType": "MemberAccess",
						"referencedDeclaration": 57,
						"src": "2349:15:1",
						"typeDescriptions": {
						  "typeIdentifier": "t_enum$_ScheduleState_$44",
						  "typeString": "enum freelancer.ScheduleState"
						}
					  },
					  "nodeType": "Assignment",
					  "operator": "=",
					  "rightHandSide": {
						"expression": {
						  "id": 269,
						  "name": "ScheduleState",
						  "nodeType": "Identifier",
						  "overloadedDeclarations": [],
						  "referencedDeclaration": 44,
						  "src": "2367:13:1",
						  "typeDescriptions": {
							"typeIdentifier": "t_type$_t_enum$_ScheduleState_$44_$",
							"typeString": "type(enum freelancer.ScheduleState)"
						  }
						},
						"id": 270,
						"isConstant": false,
						"isLValue": false,
						"isPure": true,
						"lValueRequested": false,
						"memberName": "planned",
						"nodeType": "MemberAccess",
						"src": "2367:21:1",
						"typeDescriptions": {
						  "typeIdentifier": "t_enum$_ScheduleState_$44",
						  "typeString": "enum freelancer.ScheduleState"
						}
					  },
					  "src": "2349:39:1",
					  "typeDescriptions": {
						"typeIdentifier": "t_enum$_ScheduleState_$44",
						"typeString": "enum freelancer.ScheduleState"
					  }
					},
					"id": 272,
					"nodeType": "ExpressionStatement",
					"src": "2349:39:1"
				  },
				  {
					"expression": {
					  "id": 277,
					  "isConstant": false,
					  "isLValue": false,
					  "isPure": false,
					  "lValueRequested": false,
					  "leftHandSide": {
						"expression": {
						  "id": 273,
						  "name": "s",
						  "nodeType": "Identifier",
						  "overloadedDeclarations": [],
						  "referencedDeclaration": 252,
						  "src": "2398:1:1",
						  "typeDescriptions": {
							"typeIdentifier": "t_struct$_schedule_$58_memory_ptr",
							"typeString": "struct freelancer.schedule memory"
						  }
						},
						"id": 275,
						"isConstant": false,
						"isLValue": true,
						"isPure": false,
						"lValueRequested": true,
						"memberName": "value",
						"nodeType": "MemberAccess",
						"referencedDeclaration": 54,
						"src": "2398:7:1",
						"typeDescriptions": {
						  "typeIdentifier": "t_uint256",
						  "typeString": "uint256"
						}
					  },
					  "nodeType": "Assignment",
					  "operator": "=",
					  "rightHandSide": {
						"id": 276,
						"name": "_value",
						"nodeType": "Identifier",
						"overloadedDeclarations": [],
						"referencedDeclaration": 241,
						"src": "2408:6:1",
						"typeDescriptions": {
						  "typeIdentifier": "t_uint256",
						  "typeString": "uint256"
						}
					  },
					  "src": "2398:16:1",
					  "typeDescriptions": {
						"typeIdentifier": "t_uint256",
						"typeString": "uint256"
					  }
					},
					"id": 278,
					"nodeType": "ExpressionStatement",
					"src": "2398:16:1"
				  },
				  {
					"expression": {
					  "id": 283,
					  "isConstant": false,
					  "isLValue": false,
					  "isPure": false,
					  "lValueRequested": false,
					  "leftHandSide": {
						"baseExpression": {
						  "id": 279,
						  "name": "scheduleRegister",
						  "nodeType": "Identifier",
						  "overloadedDeclarations": [],
						  "referencedDeclaration": 73,
						  "src": "2424:16:1",
						  "typeDescriptions": {
							"typeIdentifier": "t_mapping$_t_int256_$_t_struct$_schedule_$58_storage_$",
							"typeString": "mapping(int256 => struct freelancer.schedule storage ref)"
						  }
						},
						"id": 281,
						"indexExpression": {
						  "id": 280,
						  "name": "totalSchedules",
						  "nodeType": "Identifier",
						  "overloadedDeclarations": [],
						  "referencedDeclaration": 61,
						  "src": "2441:14:1",
						  "typeDescriptions": {
							"typeIdentifier": "t_int256",
							"typeString": "int256"
						  }
						},
						"isConstant": false,
						"isLValue": true,
						"isPure": false,
						"lValueRequested": true,
						"nodeType": "IndexAccess",
						"src": "2424:32:1",
						"typeDescriptions": {
						  "typeIdentifier": "t_struct$_schedule_$58_storage",
						  "typeString": "struct freelancer.schedule storage ref"
						}
					  },
					  "nodeType": "Assignment",
					  "operator": "=",
					  "rightHandSide": {
						"id": 282,
						"name": "s",
						"nodeType": "Identifier",
						"overloadedDeclarations": [],
						"referencedDeclaration": 252,
						"src": "2459:1:1",
						"typeDescriptions": {
						  "typeIdentifier": "t_struct$_schedule_$58_memory_ptr",
						  "typeString": "struct freelancer.schedule memory"
						}
					  },
					  "src": "2424:36:1",
					  "typeDescriptions": {
						"typeIdentifier": "t_struct$_schedule_$58_storage",
						"typeString": "struct freelancer.schedule storage ref"
					  }
					},
					"id": 284,
					"nodeType": "ExpressionStatement",
					"src": "2424:36:1"
				  },
				  {
					"expression": {
					  "id": 286,
					  "isConstant": false,
					  "isLValue": false,
					  "isPure": false,
					  "lValueRequested": false,
					  "nodeType": "UnaryOperation",
					  "operator": "++",
					  "prefix": false,
					  "src": "2470:16:1",
					  "subExpression": {
						"id": 285,
						"name": "totalSchedules",
						"nodeType": "Identifier",
						"overloadedDeclarations": [],
						"referencedDeclaration": 61,
						"src": "2470:14:1",
						"typeDescriptions": {
						  "typeIdentifier": "t_int256",
						  "typeString": "int256"
						}
					  },
					  "typeDescriptions": {
						"typeIdentifier": "t_int256",
						"typeString": "int256"
					  }
					},
					"id": 287,
					"nodeType": "ExpressionStatement",
					"src": "2470:16:1"
				  },
				  {
					"eventCall": {
					  "arguments": [
						{
						  "id": 289,
						  "name": "_shortCode",
						  "nodeType": "Identifier",
						  "overloadedDeclarations": [],
						  "referencedDeclaration": 237,
						  "src": "2515:10:1",
						  "typeDescriptions": {
							"typeIdentifier": "t_string_memory_ptr",
							"typeString": "string memory"
						  }
						}
					  ],
					  "expression": {
						"argumentTypes": [
						  {
							"typeIdentifier": "t_string_memory_ptr",
							"typeString": "string memory"
						  }
						],
						"id": 288,
						"name": "scheduleAdded",
						"nodeType": "Identifier",
						"overloadedDeclarations": [],
						"referencedDeclaration": 194,
						"src": "2501:13:1",
						"typeDescriptions": {
						  "typeIdentifier": "t_function_event_nonpayable$_t_string_memory_ptr_$returns$__$",
						  "typeString": "function (string memory)"
						}
					  },
					  "id": 290,
					  "isConstant": false,
					  "isLValue": false,
					  "isPure": false,
					  "kind": "functionCall",
					  "lValueRequested": false,
					  "names": [],
					  "nodeType": "FunctionCall",
					  "src": "2501:25:1",
					  "tryCall": false,
					  "typeDescriptions": {
						"typeIdentifier": "t_tuple$__$",
						"typeString": "tuple()"
					  }
					},
					"id": 291,
					"nodeType": "EmitStatement",
					"src": "2496:30:1"
				  }
				]
			  },
			  "functionSelector": "84bf66ac",
			  "id": 293,
			  "implemented": true,
			  "kind": "function",
			  "modifiers": [
				{
				  "arguments": [
					{
					  "expression": {
						"id": 244,
						"name": "ProjectState",
						"nodeType": "Identifier",
						"overloadedDeclarations": [],
						"referencedDeclaration": 48,
						"src": "2189:12:1",
						"typeDescriptions": {
						  "typeIdentifier": "t_type$_t_enum$_ProjectState_$48_$",
						  "typeString": "type(enum freelancer.ProjectState)"
						}
					  },
					  "id": 245,
					  "isConstant": false,
					  "isLValue": false,
					  "isPure": true,
					  "lValueRequested": false,
					  "memberName": "initiated",
					  "nodeType": "MemberAccess",
					  "src": "2189:22:1",
					  "typeDescriptions": {
						"typeIdentifier": "t_enum$_ProjectState_$48",
						"typeString": "enum freelancer.ProjectState"
					  }
					}
				  ],
				  "id": 246,
				  "modifierName": {
					"id": 243,
					"name": "inProjectState",
					"nodeType": "IdentifierPath",
					"referencedDeclaration": 134,
					"src": "2174:14:1"
				  },
				  "nodeType": "ModifierInvocation",
				  "src": "2174:38:1"
				},
				{
				  "id": 248,
				  "modifierName": {
					"id": 247,
					"name": "onlyFreelancer",
					"nodeType": "IdentifierPath",
					"referencedDeclaration": 94,
					"src": "2221:14:1"
				  },
				  "nodeType": "ModifierInvocation",
				  "src": "2221:14:1"
				}
			  ],
			  "name": "addSchedule",
			  "nodeType": "FunctionDefinition",
			  "parameters": {
				"id": 242,
				"nodeType": "ParameterList",
				"parameters": [
				  {
					"constant": false,
					"id": 237,
					"mutability": "mutable",
					"name": "_shortCode",
					"nodeType": "VariableDeclaration",
					"scope": 293,
					"src": "2081:24:1",
					"stateVariable": false,
					"storageLocation": "memory",
					"typeDescriptions": {
					  "typeIdentifier": "t_string_memory_ptr",
					  "typeString": "string"
					},
					"typeName": {
					  "id": 236,
					  "name": "string",
					  "nodeType": "ElementaryTypeName",
					  "src": "2081:6:1",
					  "typeDescriptions": {
						"typeIdentifier": "t_string_storage_ptr",
						"typeString": "string"
					  }
					},
					"visibility": "internal"
				  },
				  {
					"constant": false,
					"id": 239,
					"mutability": "mutable",
					"name": "_description",
					"nodeType": "VariableDeclaration",
					"scope": 293,
					"src": "2107:26:1",
					"stateVariable": false,
					"storageLocation": "memory",
					"typeDescriptions": {
					  "typeIdentifier": "t_string_memory_ptr",
					  "typeString": "string"
					},
					"typeName": {
					  "id": 238,
					  "name": "string",
					  "nodeType": "ElementaryTypeName",
					  "src": "2107:6:1",
					  "typeDescriptions": {
						"typeIdentifier": "t_string_storage_ptr",
						"typeString": "string"
					  }
					},
					"visibility": "internal"
				  },
				  {
					"constant": false,
					"id": 241,
					"mutability": "mutable",
					"name": "_value",
					"nodeType": "VariableDeclaration",
					"scope": 293,
					"src": "2135:14:1",
					"stateVariable": false,
					"storageLocation": "default",
					"typeDescriptions": {
					  "typeIdentifier": "t_uint256",
					  "typeString": "uint256"
					},
					"typeName": {
					  "id": 240,
					  "name": "uint256",
					  "nodeType": "ElementaryTypeName",
					  "src": "2135:7:1",
					  "typeDescriptions": {
						"typeIdentifier": "t_uint256",
						"typeString": "uint256"
					  }
					},
					"visibility": "internal"
				  }
				],
				"src": "2080:70:1"
			  },
			  "returnParameters": {
				"id": 249,
				"nodeType": "ParameterList",
				"parameters": [],
				"src": "2240:0:1"
			  },
			  "scope": 479,
			  "src": "2060:473:1",
			  "stateMutability": "nonpayable",
			  "virtual": false,
			  "visibility": "public"
			},
			{
			  "body": {
				"id": 315,
				"nodeType": "Block",
				"src": "2634:131:1",
				"statements": [
				  {
					"expression": {
					  "id": 303,
					  "isConstant": false,
					  "isLValue": false,
					  "isPure": false,
					  "lValueRequested": false,
					  "leftHandSide": {
						"id": 300,
						"name": "clientAddress",
						"nodeType": "Identifier",
						"overloadedDeclarations": [],
						"referencedDeclaration": 65,
						"src": "2644:13:1",
						"typeDescriptions": {
						  "typeIdentifier": "t_address",
						  "typeString": "address"
						}
					  },
					  "nodeType": "Assignment",
					  "operator": "=",
					  "rightHandSide": {
						"expression": {
						  "id": 301,
						  "name": "msg",
						  "nodeType": "Identifier",
						  "overloadedDeclarations": [],
						  "referencedDeclaration": 4294967281,
						  "src": "2660:3:1",
						  "typeDescriptions": {
							"typeIdentifier": "t_magic_message",
							"typeString": "msg"
						  }
						},
						"id": 302,
						"isConstant": false,
						"isLValue": false,
						"isPure": false,
						"lValueRequested": false,
						"memberName": "sender",
						"nodeType": "MemberAccess",
						"src": "2660:10:1",
						"typeDescriptions": {
						  "typeIdentifier": "t_address",
						  "typeString": "address"
						}
					  },
					  "src": "2644:26:1",
					  "typeDescriptions": {
						"typeIdentifier": "t_address",
						"typeString": "address"
					  }
					},
					"id": 304,
					"nodeType": "ExpressionStatement",
					"src": "2644:26:1"
				  },
				  {
					"expression": {
					  "id": 308,
					  "isConstant": false,
					  "isLValue": false,
					  "isPure": false,
					  "lValueRequested": false,
					  "leftHandSide": {
						"id": 305,
						"name": "projectState",
						"nodeType": "Identifier",
						"overloadedDeclarations": [],
						"referencedDeclaration": 68,
						"src": "2680:12:1",
						"typeDescriptions": {
						  "typeIdentifier": "t_enum$_ProjectState_$48",
						  "typeString": "enum freelancer.ProjectState"
						}
					  },
					  "nodeType": "Assignment",
					  "operator": "=",
					  "rightHandSide": {
						"expression": {
						  "id": 306,
						  "name": "ProjectState",
						  "nodeType": "Identifier",
						  "overloadedDeclarations": [],
						  "referencedDeclaration": 48,
						  "src": "2695:12:1",
						  "typeDescriptions": {
							"typeIdentifier": "t_type$_t_enum$_ProjectState_$48_$",
							"typeString": "type(enum freelancer.ProjectState)"
						  }
						},
						"id": 307,
						"isConstant": false,
						"isLValue": false,
						"isPure": true,
						"lValueRequested": false,
						"memberName": "accepted",
						"nodeType": "MemberAccess",
						"src": "2695:21:1",
						"typeDescriptions": {
						  "typeIdentifier": "t_enum$_ProjectState_$48",
						  "typeString": "enum freelancer.ProjectState"
						}
					  },
					  "src": "2680:36:1",
					  "typeDescriptions": {
						"typeIdentifier": "t_enum$_ProjectState_$48",
						"typeString": "enum freelancer.ProjectState"
					  }
					},
					"id": 309,
					"nodeType": "ExpressionStatement",
					"src": "2680:36:1"
				  },
				  {
					"eventCall": {
					  "arguments": [
						{
						  "expression": {
							"id": 311,
							"name": "msg",
							"nodeType": "Identifier",
							"overloadedDeclarations": [],
							"referencedDeclaration": 4294967281,
							"src": "2747:3:1",
							"typeDescriptions": {
							  "typeIdentifier": "t_magic_message",
							  "typeString": "msg"
							}
						  },
						  "id": 312,
						  "isConstant": false,
						  "isLValue": false,
						  "isPure": false,
						  "lValueRequested": false,
						  "memberName": "sender",
						  "nodeType": "MemberAccess",
						  "src": "2747:10:1",
						  "typeDescriptions": {
							"typeIdentifier": "t_address",
							"typeString": "address"
						  }
						}
					  ],
					  "expression": {
						"argumentTypes": [
						  {
							"typeIdentifier": "t_address",
							"typeString": "address"
						  }
						],
						"id": 310,
						"name": "projectAccepted",
						"nodeType": "Identifier",
						"overloadedDeclarations": [],
						"referencedDeclaration": 198,
						"src": "2731:15:1",
						"typeDescriptions": {
						  "typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
						  "typeString": "function (address)"
						}
					  },
					  "id": 313,
					  "isConstant": false,
					  "isLValue": false,
					  "isPure": false,
					  "kind": "functionCall",
					  "lValueRequested": false,
					  "names": [],
					  "nodeType": "FunctionCall",
					  "src": "2731:27:1",
					  "tryCall": false,
					  "typeDescriptions": {
						"typeIdentifier": "t_tuple$__$",
						"typeString": "tuple()"
					  }
					},
					"id": 314,
					"nodeType": "EmitStatement",
					"src": "2726:32:1"
				  }
				]
			  },
			  "functionSelector": "c916b6de",
			  "id": 316,
			  "implemented": true,
			  "kind": "function",
			  "modifiers": [
				{
				  "arguments": [
					{
					  "expression": {
						"id": 296,
						"name": "ProjectState",
						"nodeType": "Identifier",
						"overloadedDeclarations": [],
						"referencedDeclaration": 48,
						"src": "2606:12:1",
						"typeDescriptions": {
						  "typeIdentifier": "t_type$_t_enum$_ProjectState_$48_$",
						  "typeString": "type(enum freelancer.ProjectState)"
						}
					  },
					  "id": 297,
					  "isConstant": false,
					  "isLValue": false,
					  "isPure": true,
					  "lValueRequested": false,
					  "memberName": "initiated",
					  "nodeType": "MemberAccess",
					  "src": "2606:22:1",
					  "typeDescriptions": {
						"typeIdentifier": "t_enum$_ProjectState_$48",
						"typeString": "enum freelancer.ProjectState"
					  }
					}
				  ],
				  "id": 298,
				  "modifierName": {
					"id": 295,
					"name": "inProjectState",
					"nodeType": "IdentifierPath",
					"referencedDeclaration": 134,
					"src": "2591:14:1"
				  },
				  "nodeType": "ModifierInvocation",
				  "src": "2591:38:1"
				}
			  ],
			  "name": "acceptProject",
			  "nodeType": "FunctionDefinition",
			  "parameters": {
				"id": 294,
				"nodeType": "ParameterList",
				"parameters": [],
				"src": "2565:2:1"
			  },
			  "returnParameters": {
				"id": 299,
				"nodeType": "ParameterList",
				"parameters": [],
				"src": "2634:0:1"
			  },
			  "scope": 479,
			  "src": "2543:222:1",
			  "stateMutability": "nonpayable",
			  "virtual": false,
			  "visibility": "public"
			},
			{
			  "body": {
				"id": 349,
				"nodeType": "Block",
				"src": "3018:121:1",
				"statements": [
				  {
					"expression": {
					  "id": 343,
					  "isConstant": false,
					  "isLValue": false,
					  "isPure": false,
					  "lValueRequested": false,
					  "leftHandSide": {
						"expression": {
						  "baseExpression": {
							"id": 337,
							"name": "scheduleRegister",
							"nodeType": "Identifier",
							"overloadedDeclarations": [],
							"referencedDeclaration": 73,
							"src": "3028:16:1",
							"typeDescriptions": {
							  "typeIdentifier": "t_mapping$_t_int256_$_t_struct$_schedule_$58_storage_$",
							  "typeString": "mapping(int256 => struct freelancer.schedule storage ref)"
							}
						  },
						  "id": 339,
						  "indexExpression": {
							"id": 338,
							"name": "_scheduleID",
							"nodeType": "Identifier",
							"overloadedDeclarations": [],
							"referencedDeclaration": 318,
							"src": "3045:11:1",
							"typeDescriptions": {
							  "typeIdentifier": "t_int256",
							  "typeString": "int256"
							}
						  },
						  "isConstant": false,
						  "isLValue": true,
						  "isPure": false,
						  "lValueRequested": false,
						  "nodeType": "IndexAccess",
						  "src": "3028:29:1",
						  "typeDescriptions": {
							"typeIdentifier": "t_struct$_schedule_$58_storage",
							"typeString": "struct freelancer.schedule storage ref"
						  }
						},
						"id": 340,
						"isConstant": false,
						"isLValue": true,
						"isPure": false,
						"lValueRequested": true,
						"memberName": "scheduleState",
						"nodeType": "MemberAccess",
						"referencedDeclaration": 57,
						"src": "3028:43:1",
						"typeDescriptions": {
						  "typeIdentifier": "t_enum$_ScheduleState_$44",
						  "typeString": "enum freelancer.ScheduleState"
						}
					  },
					  "nodeType": "Assignment",
					  "operator": "=",
					  "rightHandSide": {
						"expression": {
						  "id": 341,
						  "name": "ScheduleState",
						  "nodeType": "Identifier",
						  "overloadedDeclarations": [],
						  "referencedDeclaration": 44,
						  "src": "3074:13:1",
						  "typeDescriptions": {
							"typeIdentifier": "t_type$_t_enum$_ScheduleState_$44_$",
							"typeString": "type(enum freelancer.ScheduleState)"
						  }
						},
						"id": 342,
						"isConstant": false,
						"isLValue": false,
						"isPure": true,
						"lValueRequested": false,
						"memberName": "funded",
						"nodeType": "MemberAccess",
						"src": "3074:20:1",
						"typeDescriptions": {
						  "typeIdentifier": "t_enum$_ScheduleState_$44",
						  "typeString": "enum freelancer.ScheduleState"
						}
					  },
					  "src": "3028:66:1",
					  "typeDescriptions": {
						"typeIdentifier": "t_enum$_ScheduleState_$44",
						"typeString": "enum freelancer.ScheduleState"
					  }
					},
					"id": 344,
					"nodeType": "ExpressionStatement",
					"src": "3028:66:1"
				  },
				  {
					"eventCall": {
					  "arguments": [
						{
						  "id": 346,
						  "name": "_scheduleID",
						  "nodeType": "Identifier",
						  "overloadedDeclarations": [],
						  "referencedDeclaration": 318,
						  "src": "3120:11:1",
						  "typeDescriptions": {
							"typeIdentifier": "t_int256",
							"typeString": "int256"
						  }
						}
					  ],
					  "expression": {
						"argumentTypes": [
						  {
							"typeIdentifier": "t_int256",
							"typeString": "int256"
						  }
						],
						"id": 345,
						"name": "taskFunded",
						"nodeType": "Identifier",
						"overloadedDeclarations": [],
						"referencedDeclaration": 202,
						"src": "3109:10:1",
						"typeDescriptions": {
						  "typeIdentifier": "t_function_event_nonpayable$_t_int256_$returns$__$",
						  "typeString": "function (int256)"
						}
					  },
					  "id": 347,
					  "isConstant": false,
					  "isLValue": false,
					  "isPure": false,
					  "kind": "functionCall",
					  "lValueRequested": false,
					  "names": [],
					  "nodeType": "FunctionCall",
					  "src": "3109:23:1",
					  "tryCall": false,
					  "typeDescriptions": {
						"typeIdentifier": "t_tuple$__$",
						"typeString": "tuple()"
					  }
					},
					"id": 348,
					"nodeType": "EmitStatement",
					"src": "3104:28:1"
				  }
				]
			  },
			  "functionSelector": "054f84ed",
			  "id": 350,
			  "implemented": true,
			  "kind": "function",
			  "modifiers": [
				{
				  "arguments": [
					{
					  "expression": {
						"id": 321,
						"name": "ProjectState",
						"nodeType": "Identifier",
						"overloadedDeclarations": [],
						"referencedDeclaration": 48,
						"src": "2867:12:1",
						"typeDescriptions": {
						  "typeIdentifier": "t_type$_t_enum$_ProjectState_$48_$",
						  "typeString": "type(enum freelancer.ProjectState)"
						}
					  },
					  "id": 322,
					  "isConstant": false,
					  "isLValue": false,
					  "isPure": true,
					  "lValueRequested": false,
					  "memberName": "accepted",
					  "nodeType": "MemberAccess",
					  "src": "2867:21:1",
					  "typeDescriptions": {
						"typeIdentifier": "t_enum$_ProjectState_$48",
						"typeString": "enum freelancer.ProjectState"
					  }
					}
				  ],
				  "id": 323,
				  "modifierName": {
					"id": 320,
					"name": "inProjectState",
					"nodeType": "IdentifierPath",
					"referencedDeclaration": 134,
					"src": "2852:14:1"
				  },
				  "nodeType": "ModifierInvocation",
				  "src": "2852:37:1"
				},
				{
				  "arguments": [
					{
					  "id": 325,
					  "name": "_scheduleID",
					  "nodeType": "Identifier",
					  "overloadedDeclarations": [],
					  "referencedDeclaration": 318,
					  "src": "2914:11:1",
					  "typeDescriptions": {
						"typeIdentifier": "t_int256",
						"typeString": "int256"
					  }
					},
					{
					  "expression": {
						"id": 326,
						"name": "ScheduleState",
						"nodeType": "Identifier",
						"overloadedDeclarations": [],
						"referencedDeclaration": 44,
						"src": "2927:13:1",
						"typeDescriptions": {
						  "typeIdentifier": "t_type$_t_enum$_ScheduleState_$44_$",
						  "typeString": "type(enum freelancer.ScheduleState)"
						}
					  },
					  "id": 327,
					  "isConstant": false,
					  "isLValue": false,
					  "isPure": true,
					  "lValueRequested": false,
					  "memberName": "planned",
					  "nodeType": "MemberAccess",
					  "src": "2927:21:1",
					  "typeDescriptions": {
						"typeIdentifier": "t_enum$_ScheduleState_$44",
						"typeString": "enum freelancer.ScheduleState"
					  }
					}
				  ],
				  "id": 328,
				  "modifierName": {
					"id": 324,
					"name": "inScheduleState",
					"nodeType": "IdentifierPath",
					"referencedDeclaration": 159,
					"src": "2898:15:1"
				  },
				  "nodeType": "ModifierInvocation",
				  "src": "2898:51:1"
				},
				{
				  "arguments": [
					{
					  "id": 330,
					  "name": "_scheduleID",
					  "nodeType": "Identifier",
					  "overloadedDeclarations": [],
					  "referencedDeclaration": 318,
					  "src": "2971:11:1",
					  "typeDescriptions": {
						"typeIdentifier": "t_int256",
						"typeString": "int256"
					  }
					},
					{
					  "expression": {
						"id": 331,
						"name": "msg",
						"nodeType": "Identifier",
						"overloadedDeclarations": [],
						"referencedDeclaration": 4294967281,
						"src": "2984:3:1",
						"typeDescriptions": {
						  "typeIdentifier": "t_magic_message",
						  "typeString": "msg"
						}
					  },
					  "id": 332,
					  "isConstant": false,
					  "isLValue": false,
					  "isPure": false,
					  "lValueRequested": false,
					  "memberName": "value",
					  "nodeType": "MemberAccess",
					  "src": "2984:9:1",
					  "typeDescriptions": {
						"typeIdentifier": "t_uint256",
						"typeString": "uint256"
					  }
					}
				  ],
				  "id": 333,
				  "modifierName": {
					"id": 329,
					"name": "ampleFunding",
					"nodeType": "IdentifierPath",
					"referencedDeclaration": 176,
					"src": "2958:12:1"
				  },
				  "nodeType": "ModifierInvocation",
				  "src": "2958:36:1"
				},
				{
				  "id": 335,
				  "modifierName": {
					"id": 334,
					"name": "onlyClient",
					"nodeType": "IdentifierPath",
					"referencedDeclaration": 105,
					"src": "3003:10:1"
				  },
				  "nodeType": "ModifierInvocation",
				  "src": "3003:10:1"
				}
			  ],
			  "name": "fundTask",
			  "nodeType": "FunctionDefinition",
			  "parameters": {
				"id": 319,
				"nodeType": "ParameterList",
				"parameters": [
				  {
					"constant": false,
					"id": 318,
					"mutability": "mutable",
					"name": "_scheduleID",
					"nodeType": "VariableDeclaration",
					"scope": 350,
					"src": "2793:18:1",
					"stateVariable": false,
					"storageLocation": "default",
					"typeDescriptions": {
					  "typeIdentifier": "t_int256",
					  "typeString": "int256"
					},
					"typeName": {
					  "id": 317,
					  "name": "int256",
					  "nodeType": "ElementaryTypeName",
					  "src": "2793:6:1",
					  "typeDescriptions": {
						"typeIdentifier": "t_int256",
						"typeString": "int256"
					  }
					},
					"visibility": "internal"
				  }
				],
				"src": "2792:20:1"
			  },
			  "returnParameters": {
				"id": 336,
				"nodeType": "ParameterList",
				"parameters": [],
				"src": "3018:0:1"
			  },
			  "scope": 479,
			  "src": "2775:364:1",
			  "stateMutability": "payable",
			  "virtual": false,
			  "visibility": "public"
			},
			{
			  "body": {
				"id": 378,
				"nodeType": "Block",
				"src": "3335:123:1",
				"statements": [
				  {
					"expression": {
					  "id": 372,
					  "isConstant": false,
					  "isLValue": false,
					  "isPure": false,
					  "lValueRequested": false,
					  "leftHandSide": {
						"expression": {
						  "baseExpression": {
							"id": 366,
							"name": "scheduleRegister",
							"nodeType": "Identifier",
							"overloadedDeclarations": [],
							"referencedDeclaration": 73,
							"src": "3345:16:1",
							"typeDescriptions": {
							  "typeIdentifier": "t_mapping$_t_int256_$_t_struct$_schedule_$58_storage_$",
							  "typeString": "mapping(int256 => struct freelancer.schedule storage ref)"
							}
						  },
						  "id": 368,
						  "indexExpression": {
							"id": 367,
							"name": "_scheduleID",
							"nodeType": "Identifier",
							"overloadedDeclarations": [],
							"referencedDeclaration": 352,
							"src": "3362:11:1",
							"typeDescriptions": {
							  "typeIdentifier": "t_int256",
							  "typeString": "int256"
							}
						  },
						  "isConstant": false,
						  "isLValue": true,
						  "isPure": false,
						  "lValueRequested": false,
						  "nodeType": "IndexAccess",
						  "src": "3345:29:1",
						  "typeDescriptions": {
							"typeIdentifier": "t_struct$_schedule_$58_storage",
							"typeString": "struct freelancer.schedule storage ref"
						  }
						},
						"id": 369,
						"isConstant": false,
						"isLValue": true,
						"isPure": false,
						"lValueRequested": true,
						"memberName": "scheduleState",
						"nodeType": "MemberAccess",
						"referencedDeclaration": 57,
						"src": "3345:43:1",
						"typeDescriptions": {
						  "typeIdentifier": "t_enum$_ScheduleState_$44",
						  "typeString": "enum freelancer.ScheduleState"
						}
					  },
					  "nodeType": "Assignment",
					  "operator": "=",
					  "rightHandSide": {
						"expression": {
						  "id": 370,
						  "name": "ScheduleState",
						  "nodeType": "Identifier",
						  "overloadedDeclarations": [],
						  "referencedDeclaration": 44,
						  "src": "3391:13:1",
						  "typeDescriptions": {
							"typeIdentifier": "t_type$_t_enum$_ScheduleState_$44_$",
							"typeString": "type(enum freelancer.ScheduleState)"
						  }
						},
						"id": 371,
						"isConstant": false,
						"isLValue": false,
						"isPure": true,
						"lValueRequested": false,
						"memberName": "started",
						"nodeType": "MemberAccess",
						"src": "3391:21:1",
						"typeDescriptions": {
						  "typeIdentifier": "t_enum$_ScheduleState_$44",
						  "typeString": "enum freelancer.ScheduleState"
						}
					  },
					  "src": "3345:67:1",
					  "typeDescriptions": {
						"typeIdentifier": "t_enum$_ScheduleState_$44",
						"typeString": "enum freelancer.ScheduleState"
					  }
					},
					"id": 373,
					"nodeType": "ExpressionStatement",
					"src": "3345:67:1"
				  },
				  {
					"eventCall": {
					  "arguments": [
						{
						  "id": 375,
						  "name": "_scheduleID",
						  "nodeType": "Identifier",
						  "overloadedDeclarations": [],
						  "referencedDeclaration": 352,
						  "src": "3439:11:1",
						  "typeDescriptions": {
							"typeIdentifier": "t_int256",
							"typeString": "int256"
						  }
						}
					  ],
					  "expression": {
						"argumentTypes": [
						  {
							"typeIdentifier": "t_int256",
							"typeString": "int256"
						  }
						],
						"id": 374,
						"name": "taskStarted",
						"nodeType": "Identifier",
						"overloadedDeclarations": [],
						"referencedDeclaration": 206,
						"src": "3427:11:1",
						"typeDescriptions": {
						  "typeIdentifier": "t_function_event_nonpayable$_t_int256_$returns$__$",
						  "typeString": "function (int256)"
						}
					  },
					  "id": 376,
					  "isConstant": false,
					  "isLValue": false,
					  "isPure": false,
					  "kind": "functionCall",
					  "lValueRequested": false,
					  "names": [],
					  "nodeType": "FunctionCall",
					  "src": "3427:24:1",
					  "tryCall": false,
					  "typeDescriptions": {
						"typeIdentifier": "t_tuple$__$",
						"typeString": "tuple()"
					  }
					},
					"id": 377,
					"nodeType": "EmitStatement",
					"src": "3422:29:1"
				  }
				]
			  },
			  "functionSelector": "b7896a30",
			  "id": 379,
			  "implemented": true,
			  "kind": "function",
			  "modifiers": [
				{
				  "arguments": [
					{
					  "expression": {
						"id": 355,
						"name": "ProjectState",
						"nodeType": "Identifier",
						"overloadedDeclarations": [],
						"referencedDeclaration": 48,
						"src": "3226:12:1",
						"typeDescriptions": {
						  "typeIdentifier": "t_type$_t_enum$_ProjectState_$48_$",
						  "typeString": "type(enum freelancer.ProjectState)"
						}
					  },
					  "id": 356,
					  "isConstant": false,
					  "isLValue": false,
					  "isPure": true,
					  "lValueRequested": false,
					  "memberName": "accepted",
					  "nodeType": "MemberAccess",
					  "src": "3226:21:1",
					  "typeDescriptions": {
						"typeIdentifier": "t_enum$_ProjectState_$48",
						"typeString": "enum freelancer.ProjectState"
					  }
					}
				  ],
				  "id": 357,
				  "modifierName": {
					"id": 354,
					"name": "inProjectState",
					"nodeType": "IdentifierPath",
					"referencedDeclaration": 134,
					"src": "3211:14:1"
				  },
				  "nodeType": "ModifierInvocation",
				  "src": "3211:37:1"
				},
				{
				  "arguments": [
					{
					  "id": 359,
					  "name": "_scheduleID",
					  "nodeType": "Identifier",
					  "overloadedDeclarations": [],
					  "referencedDeclaration": 352,
					  "src": "3273:11:1",
					  "typeDescriptions": {
						"typeIdentifier": "t_int256",
						"typeString": "int256"
					  }
					},
					{
					  "expression": {
						"id": 360,
						"name": "ScheduleState",
						"nodeType": "Identifier",
						"overloadedDeclarations": [],
						"referencedDeclaration": 44,
						"src": "3286:13:1",
						"typeDescriptions": {
						  "typeIdentifier": "t_type$_t_enum$_ScheduleState_$44_$",
						  "typeString": "type(enum freelancer.ScheduleState)"
						}
					  },
					  "id": 361,
					  "isConstant": false,
					  "isLValue": false,
					  "isPure": true,
					  "lValueRequested": false,
					  "memberName": "funded",
					  "nodeType": "MemberAccess",
					  "src": "3286:20:1",
					  "typeDescriptions": {
						"typeIdentifier": "t_enum$_ScheduleState_$44",
						"typeString": "enum freelancer.ScheduleState"
					  }
					}
				  ],
				  "id": 362,
				  "modifierName": {
					"id": 358,
					"name": "inScheduleState",
					"nodeType": "IdentifierPath",
					"referencedDeclaration": 159,
					"src": "3257:15:1"
				  },
				  "nodeType": "ModifierInvocation",
				  "src": "3257:50:1"
				},
				{
				  "id": 364,
				  "modifierName": {
					"id": 363,
					"name": "onlyFreelancer",
					"nodeType": "IdentifierPath",
					"referencedDeclaration": 94,
					"src": "3316:14:1"
				  },
				  "nodeType": "ModifierInvocation",
				  "src": "3316:14:1"
				}
			  ],
			  "name": "startTask",
			  "nodeType": "FunctionDefinition",
			  "parameters": {
				"id": 353,
				"nodeType": "ParameterList",
				"parameters": [
				  {
					"constant": false,
					"id": 352,
					"mutability": "mutable",
					"name": "_scheduleID",
					"nodeType": "VariableDeclaration",
					"scope": 379,
					"src": "3168:18:1",
					"stateVariable": false,
					"storageLocation": "default",
					"typeDescriptions": {
					  "typeIdentifier": "t_int256",
					  "typeString": "int256"
					},
					"typeName": {
					  "id": 351,
					  "name": "int256",
					  "nodeType": "ElementaryTypeName",
					  "src": "3168:6:1",
					  "typeDescriptions": {
						"typeIdentifier": "t_int256",
						"typeString": "int256"
					  }
					},
					"visibility": "internal"
				  }
				],
				"src": "3167:20:1"
			  },
			  "returnParameters": {
				"id": 365,
				"nodeType": "ParameterList",
				"parameters": [],
				"src": "3335:0:1"
			  },
			  "scope": 479,
			  "src": "3149:309:1",
			  "stateMutability": "nonpayable",
			  "virtual": false,
			  "visibility": "public"
			},
			{
			  "body": {
				"id": 407,
				"nodeType": "Block",
				"src": "3649:125:1",
				"statements": [
				  {
					"expression": {
					  "id": 401,
					  "isConstant": false,
					  "isLValue": false,
					  "isPure": false,
					  "lValueRequested": false,
					  "leftHandSide": {
						"expression": {
						  "baseExpression": {
							"id": 395,
							"name": "scheduleRegister",
							"nodeType": "Identifier",
							"overloadedDeclarations": [],
							"referencedDeclaration": 73,
							"src": "3659:16:1",
							"typeDescriptions": {
							  "typeIdentifier": "t_mapping$_t_int256_$_t_struct$_schedule_$58_storage_$",
							  "typeString": "mapping(int256 => struct freelancer.schedule storage ref)"
							}
						  },
						  "id": 397,
						  "indexExpression": {
							"id": 396,
							"name": "_scheduleID",
							"nodeType": "Identifier",
							"overloadedDeclarations": [],
							"referencedDeclaration": 381,
							"src": "3676:11:1",
							"typeDescriptions": {
							  "typeIdentifier": "t_int256",
							  "typeString": "int256"
							}
						  },
						  "isConstant": false,
						  "isLValue": true,
						  "isPure": false,
						  "lValueRequested": false,
						  "nodeType": "IndexAccess",
						  "src": "3659:29:1",
						  "typeDescriptions": {
							"typeIdentifier": "t_struct$_schedule_$58_storage",
							"typeString": "struct freelancer.schedule storage ref"
						  }
						},
						"id": 398,
						"isConstant": false,
						"isLValue": true,
						"isPure": false,
						"lValueRequested": true,
						"memberName": "scheduleState",
						"nodeType": "MemberAccess",
						"referencedDeclaration": 57,
						"src": "3659:43:1",
						"typeDescriptions": {
						  "typeIdentifier": "t_enum$_ScheduleState_$44",
						  "typeString": "enum freelancer.ScheduleState"
						}
					  },
					  "nodeType": "Assignment",
					  "operator": "=",
					  "rightHandSide": {
						"expression": {
						  "id": 399,
						  "name": "ScheduleState",
						  "nodeType": "Identifier",
						  "overloadedDeclarations": [],
						  "referencedDeclaration": 44,
						  "src": "3705:13:1",
						  "typeDescriptions": {
							"typeIdentifier": "t_type$_t_enum$_ScheduleState_$44_$",
							"typeString": "type(enum freelancer.ScheduleState)"
						  }
						},
						"id": 400,
						"isConstant": false,
						"isLValue": false,
						"isPure": true,
						"lValueRequested": false,
						"memberName": "approved",
						"nodeType": "MemberAccess",
						"src": "3705:22:1",
						"typeDescriptions": {
						  "typeIdentifier": "t_enum$_ScheduleState_$44",
						  "typeString": "enum freelancer.ScheduleState"
						}
					  },
					  "src": "3659:68:1",
					  "typeDescriptions": {
						"typeIdentifier": "t_enum$_ScheduleState_$44",
						"typeString": "enum freelancer.ScheduleState"
					  }
					},
					"id": 402,
					"nodeType": "ExpressionStatement",
					"src": "3659:68:1"
				  },
				  {
					"eventCall": {
					  "arguments": [
						{
						  "id": 404,
						  "name": "_scheduleID",
						  "nodeType": "Identifier",
						  "overloadedDeclarations": [],
						  "referencedDeclaration": 381,
						  "src": "3755:11:1",
						  "typeDescriptions": {
							"typeIdentifier": "t_int256",
							"typeString": "int256"
						  }
						}
					  ],
					  "expression": {
						"argumentTypes": [
						  {
							"typeIdentifier": "t_int256",
							"typeString": "int256"
						  }
						],
						"id": 403,
						"name": "taskApproved",
						"nodeType": "Identifier",
						"overloadedDeclarations": [],
						"referencedDeclaration": 210,
						"src": "3742:12:1",
						"typeDescriptions": {
						  "typeIdentifier": "t_function_event_nonpayable$_t_int256_$returns$__$",
						  "typeString": "function (int256)"
						}
					  },
					  "id": 405,
					  "isConstant": false,
					  "isLValue": false,
					  "isPure": false,
					  "kind": "functionCall",
					  "lValueRequested": false,
					  "names": [],
					  "nodeType": "FunctionCall",
					  "src": "3742:25:1",
					  "tryCall": false,
					  "typeDescriptions": {
						"typeIdentifier": "t_tuple$__$",
						"typeString": "tuple()"
					  }
					},
					"id": 406,
					"nodeType": "EmitStatement",
					"src": "3737:30:1"
				  }
				]
			  },
			  "functionSelector": "6dc5434c",
			  "id": 408,
			  "implemented": true,
			  "kind": "function",
			  "modifiers": [
				{
				  "arguments": [
					{
					  "expression": {
						"id": 384,
						"name": "ProjectState",
						"nodeType": "Identifier",
						"overloadedDeclarations": [],
						"referencedDeclaration": 48,
						"src": "3543:12:1",
						"typeDescriptions": {
						  "typeIdentifier": "t_type$_t_enum$_ProjectState_$48_$",
						  "typeString": "type(enum freelancer.ProjectState)"
						}
					  },
					  "id": 385,
					  "isConstant": false,
					  "isLValue": false,
					  "isPure": true,
					  "lValueRequested": false,
					  "memberName": "accepted",
					  "nodeType": "MemberAccess",
					  "src": "3543:21:1",
					  "typeDescriptions": {
						"typeIdentifier": "t_enum$_ProjectState_$48",
						"typeString": "enum freelancer.ProjectState"
					  }
					}
				  ],
				  "id": 386,
				  "modifierName": {
					"id": 383,
					"name": "inProjectState",
					"nodeType": "IdentifierPath",
					"referencedDeclaration": 134,
					"src": "3528:14:1"
				  },
				  "nodeType": "ModifierInvocation",
				  "src": "3528:37:1"
				},
				{
				  "arguments": [
					{
					  "id": 388,
					  "name": "_scheduleID",
					  "nodeType": "Identifier",
					  "overloadedDeclarations": [],
					  "referencedDeclaration": 381,
					  "src": "3590:11:1",
					  "typeDescriptions": {
						"typeIdentifier": "t_int256",
						"typeString": "int256"
					  }
					},
					{
					  "expression": {
						"id": 389,
						"name": "ScheduleState",
						"nodeType": "Identifier",
						"overloadedDeclarations": [],
						"referencedDeclaration": 44,
						"src": "3603:13:1",
						"typeDescriptions": {
						  "typeIdentifier": "t_type$_t_enum$_ScheduleState_$44_$",
						  "typeString": "type(enum freelancer.ScheduleState)"
						}
					  },
					  "id": 390,
					  "isConstant": false,
					  "isLValue": false,
					  "isPure": true,
					  "lValueRequested": false,
					  "memberName": "started",
					  "nodeType": "MemberAccess",
					  "src": "3603:21:1",
					  "typeDescriptions": {
						"typeIdentifier": "t_enum$_ScheduleState_$44",
						"typeString": "enum freelancer.ScheduleState"
					  }
					}
				  ],
				  "id": 391,
				  "modifierName": {
					"id": 387,
					"name": "inScheduleState",
					"nodeType": "IdentifierPath",
					"referencedDeclaration": 159,
					"src": "3574:15:1"
				  },
				  "nodeType": "ModifierInvocation",
				  "src": "3574:51:1"
				},
				{
				  "id": 393,
				  "modifierName": {
					"id": 392,
					"name": "onlyClient",
					"nodeType": "IdentifierPath",
					"referencedDeclaration": 105,
					"src": "3634:10:1"
				  },
				  "nodeType": "ModifierInvocation",
				  "src": "3634:10:1"
				}
			  ],
			  "name": "approveTask",
			  "nodeType": "FunctionDefinition",
			  "parameters": {
				"id": 382,
				"nodeType": "ParameterList",
				"parameters": [
				  {
					"constant": false,
					"id": 381,
					"mutability": "mutable",
					"name": "_scheduleID",
					"nodeType": "VariableDeclaration",
					"scope": 408,
					"src": "3485:18:1",
					"stateVariable": false,
					"storageLocation": "default",
					"typeDescriptions": {
					  "typeIdentifier": "t_int256",
					  "typeString": "int256"
					},
					"typeName": {
					  "id": 380,
					  "name": "int256",
					  "nodeType": "ElementaryTypeName",
					  "src": "3485:6:1",
					  "typeDescriptions": {
						"typeIdentifier": "t_int256",
						"typeString": "int256"
					  }
					},
					"visibility": "internal"
				  }
				],
				"src": "3484:20:1"
			  },
			  "returnParameters": {
				"id": 394,
				"nodeType": "ParameterList",
				"parameters": [],
				"src": "3649:0:1"
			  },
			  "scope": 479,
			  "src": "3464:310:1",
			  "stateMutability": "nonpayable",
			  "virtual": false,
			  "visibility": "public"
			},
			{
			  "body": {
				"id": 449,
				"nodeType": "Block",
				"src": "3991:236:1",
				"statements": [
				  {
					"expression": {
					  "arguments": [
						{
						  "expression": {
							"baseExpression": {
							  "id": 427,
							  "name": "scheduleRegister",
							  "nodeType": "Identifier",
							  "overloadedDeclarations": [],
							  "referencedDeclaration": 73,
							  "src": "4028:16:1",
							  "typeDescriptions": {
								"typeIdentifier": "t_mapping$_t_int256_$_t_struct$_schedule_$58_storage_$",
								"typeString": "mapping(int256 => struct freelancer.schedule storage ref)"
							  }
							},
							"id": 429,
							"indexExpression": {
							  "id": 428,
							  "name": "_scheduleID",
							  "nodeType": "Identifier",
							  "overloadedDeclarations": [],
							  "referencedDeclaration": 410,
							  "src": "4045:11:1",
							  "typeDescriptions": {
								"typeIdentifier": "t_int256",
								"typeString": "int256"
							  }
							},
							"isConstant": false,
							"isLValue": true,
							"isPure": false,
							"lValueRequested": false,
							"nodeType": "IndexAccess",
							"src": "4028:29:1",
							"typeDescriptions": {
							  "typeIdentifier": "t_struct$_schedule_$58_storage",
							  "typeString": "struct freelancer.schedule storage ref"
							}
						  },
						  "id": 430,
						  "isConstant": false,
						  "isLValue": true,
						  "isPure": false,
						  "lValueRequested": false,
						  "memberName": "value",
						  "nodeType": "MemberAccess",
						  "referencedDeclaration": 54,
						  "src": "4028:35:1",
						  "typeDescriptions": {
							"typeIdentifier": "t_uint256",
							"typeString": "uint256"
						  }
						}
					  ],
					  "expression": {
						"argumentTypes": [
						  {
							"typeIdentifier": "t_uint256",
							"typeString": "uint256"
						  }
						],
						"expression": {
						  "id": 424,
						  "name": "freelancerAddress",
						  "nodeType": "Identifier",
						  "overloadedDeclarations": [],
						  "referencedDeclaration": 63,
						  "src": "4001:17:1",
						  "typeDescriptions": {
							"typeIdentifier": "t_address_payable",
							"typeString": "address payable"
						  }
						},
						"id": 426,
						"isConstant": false,
						"isLValue": false,
						"isPure": false,
						"lValueRequested": false,
						"memberName": "transfer",
						"nodeType": "MemberAccess",
						"src": "4001:26:1",
						"typeDescriptions": {
						  "typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
						  "typeString": "function (uint256)"
						}
					  },
					  "id": 431,
					  "isConstant": false,
					  "isLValue": false,
					  "isPure": false,
					  "kind": "functionCall",
					  "lValueRequested": false,
					  "names": [],
					  "nodeType": "FunctionCall",
					  "src": "4001:63:1",
					  "tryCall": false,
					  "typeDescriptions": {
						"typeIdentifier": "t_tuple$__$",
						"typeString": "tuple()"
					  }
					},
					"id": 432,
					"nodeType": "ExpressionStatement",
					"src": "4001:63:1"
				  },
				  {
					"expression": {
					  "id": 439,
					  "isConstant": false,
					  "isLValue": false,
					  "isPure": false,
					  "lValueRequested": false,
					  "leftHandSide": {
						"expression": {
						  "baseExpression": {
							"id": 433,
							"name": "scheduleRegister",
							"nodeType": "Identifier",
							"overloadedDeclarations": [],
							"referencedDeclaration": 73,
							"src": "4074:16:1",
							"typeDescriptions": {
							  "typeIdentifier": "t_mapping$_t_int256_$_t_struct$_schedule_$58_storage_$",
							  "typeString": "mapping(int256 => struct freelancer.schedule storage ref)"
							}
						  },
						  "id": 435,
						  "indexExpression": {
							"id": 434,
							"name": "_scheduleID",
							"nodeType": "Identifier",
							"overloadedDeclarations": [],
							"referencedDeclaration": 410,
							"src": "4091:11:1",
							"typeDescriptions": {
							  "typeIdentifier": "t_int256",
							  "typeString": "int256"
							}
						  },
						  "isConstant": false,
						  "isLValue": true,
						  "isPure": false,
						  "lValueRequested": false,
						  "nodeType": "IndexAccess",
						  "src": "4074:29:1",
						  "typeDescriptions": {
							"typeIdentifier": "t_struct$_schedule_$58_storage",
							"typeString": "struct freelancer.schedule storage ref"
						  }
						},
						"id": 436,
						"isConstant": false,
						"isLValue": true,
						"isPure": false,
						"lValueRequested": true,
						"memberName": "scheduleState",
						"nodeType": "MemberAccess",
						"referencedDeclaration": 57,
						"src": "4074:43:1",
						"typeDescriptions": {
						  "typeIdentifier": "t_enum$_ScheduleState_$44",
						  "typeString": "enum freelancer.ScheduleState"
						}
					  },
					  "nodeType": "Assignment",
					  "operator": "=",
					  "rightHandSide": {
						"expression": {
						  "id": 437,
						  "name": "ScheduleState",
						  "nodeType": "Identifier",
						  "overloadedDeclarations": [],
						  "referencedDeclaration": 44,
						  "src": "4120:13:1",
						  "typeDescriptions": {
							"typeIdentifier": "t_type$_t_enum$_ScheduleState_$44_$",
							"typeString": "type(enum freelancer.ScheduleState)"
						  }
						},
						"id": 438,
						"isConstant": false,
						"isLValue": false,
						"isPure": true,
						"lValueRequested": false,
						"memberName": "released",
						"nodeType": "MemberAccess",
						"src": "4120:22:1",
						"typeDescriptions": {
						  "typeIdentifier": "t_enum$_ScheduleState_$44",
						  "typeString": "enum freelancer.ScheduleState"
						}
					  },
					  "src": "4074:68:1",
					  "typeDescriptions": {
						"typeIdentifier": "t_enum$_ScheduleState_$44",
						"typeString": "enum freelancer.ScheduleState"
					  }
					},
					"id": 440,
					"nodeType": "ExpressionStatement",
					"src": "4074:68:1"
				  },
				  {
					"eventCall": {
					  "arguments": [
						{
						  "id": 442,
						  "name": "_scheduleID",
						  "nodeType": "Identifier",
						  "overloadedDeclarations": [],
						  "referencedDeclaration": 410,
						  "src": "4171:11:1",
						  "typeDescriptions": {
							"typeIdentifier": "t_int256",
							"typeString": "int256"
						  }
						},
						{
						  "expression": {
							"baseExpression": {
							  "id": 443,
							  "name": "scheduleRegister",
							  "nodeType": "Identifier",
							  "overloadedDeclarations": [],
							  "referencedDeclaration": 73,
							  "src": "4184:16:1",
							  "typeDescriptions": {
								"typeIdentifier": "t_mapping$_t_int256_$_t_struct$_schedule_$58_storage_$",
								"typeString": "mapping(int256 => struct freelancer.schedule storage ref)"
							  }
							},
							"id": 445,
							"indexExpression": {
							  "id": 444,
							  "name": "_scheduleID",
							  "nodeType": "Identifier",
							  "overloadedDeclarations": [],
							  "referencedDeclaration": 410,
							  "src": "4201:11:1",
							  "typeDescriptions": {
								"typeIdentifier": "t_int256",
								"typeString": "int256"
							  }
							},
							"isConstant": false,
							"isLValue": true,
							"isPure": false,
							"lValueRequested": false,
							"nodeType": "IndexAccess",
							"src": "4184:29:1",
							"typeDescriptions": {
							  "typeIdentifier": "t_struct$_schedule_$58_storage",
							  "typeString": "struct freelancer.schedule storage ref"
							}
						  },
						  "id": 446,
						  "isConstant": false,
						  "isLValue": true,
						  "isPure": false,
						  "lValueRequested": false,
						  "memberName": "value",
						  "nodeType": "MemberAccess",
						  "referencedDeclaration": 54,
						  "src": "4184:35:1",
						  "typeDescriptions": {
							"typeIdentifier": "t_uint256",
							"typeString": "uint256"
						  }
						}
					  ],
					  "expression": {
						"argumentTypes": [
						  {
							"typeIdentifier": "t_int256",
							"typeString": "int256"
						  },
						  {
							"typeIdentifier": "t_uint256",
							"typeString": "uint256"
						  }
						],
						"id": 441,
						"name": "fundsReleased",
						"nodeType": "Identifier",
						"overloadedDeclarations": [],
						"referencedDeclaration": 216,
						"src": "4157:13:1",
						"typeDescriptions": {
						  "typeIdentifier": "t_function_event_nonpayable$_t_int256_$_t_uint256_$returns$__$",
						  "typeString": "function (int256,uint256)"
						}
					  },
					  "id": 447,
					  "isConstant": false,
					  "isLValue": false,
					  "isPure": false,
					  "kind": "functionCall",
					  "lValueRequested": false,
					  "names": [],
					  "nodeType": "FunctionCall",
					  "src": "4157:63:1",
					  "tryCall": false,
					  "typeDescriptions": {
						"typeIdentifier": "t_tuple$__$",
						"typeString": "tuple()"
					  }
					},
					"id": 448,
					"nodeType": "EmitStatement",
					"src": "4152:68:1"
				  }
				]
			  },
			  "functionSelector": "bb6fc950",
			  "id": 450,
			  "implemented": true,
			  "kind": "function",
			  "modifiers": [
				{
				  "arguments": [
					{
					  "expression": {
						"id": 413,
						"name": "ProjectState",
						"nodeType": "Identifier",
						"overloadedDeclarations": [],
						"referencedDeclaration": 48,
						"src": "3880:12:1",
						"typeDescriptions": {
						  "typeIdentifier": "t_type$_t_enum$_ProjectState_$48_$",
						  "typeString": "type(enum freelancer.ProjectState)"
						}
					  },
					  "id": 414,
					  "isConstant": false,
					  "isLValue": false,
					  "isPure": true,
					  "lValueRequested": false,
					  "memberName": "accepted",
					  "nodeType": "MemberAccess",
					  "src": "3880:21:1",
					  "typeDescriptions": {
						"typeIdentifier": "t_enum$_ProjectState_$48",
						"typeString": "enum freelancer.ProjectState"
					  }
					}
				  ],
				  "id": 415,
				  "modifierName": {
					"id": 412,
					"name": "inProjectState",
					"nodeType": "IdentifierPath",
					"referencedDeclaration": 134,
					"src": "3865:14:1"
				  },
				  "nodeType": "ModifierInvocation",
				  "src": "3865:37:1"
				},
				{
				  "arguments": [
					{
					  "id": 417,
					  "name": "_scheduleID",
					  "nodeType": "Identifier",
					  "overloadedDeclarations": [],
					  "referencedDeclaration": 410,
					  "src": "3927:11:1",
					  "typeDescriptions": {
						"typeIdentifier": "t_int256",
						"typeString": "int256"
					  }
					},
					{
					  "expression": {
						"id": 418,
						"name": "ScheduleState",
						"nodeType": "Identifier",
						"overloadedDeclarations": [],
						"referencedDeclaration": 44,
						"src": "3940:13:1",
						"typeDescriptions": {
						  "typeIdentifier": "t_type$_t_enum$_ScheduleState_$44_$",
						  "typeString": "type(enum freelancer.ScheduleState)"
						}
					  },
					  "id": 419,
					  "isConstant": false,
					  "isLValue": false,
					  "isPure": true,
					  "lValueRequested": false,
					  "memberName": "approved",
					  "nodeType": "MemberAccess",
					  "src": "3940:22:1",
					  "typeDescriptions": {
						"typeIdentifier": "t_enum$_ScheduleState_$44",
						"typeString": "enum freelancer.ScheduleState"
					  }
					}
				  ],
				  "id": 420,
				  "modifierName": {
					"id": 416,
					"name": "inScheduleState",
					"nodeType": "IdentifierPath",
					"referencedDeclaration": 159,
					"src": "3911:15:1"
				  },
				  "nodeType": "ModifierInvocation",
				  "src": "3911:52:1"
				},
				{
				  "id": 422,
				  "modifierName": {
					"id": 421,
					"name": "onlyFreelancer",
					"nodeType": "IdentifierPath",
					"referencedDeclaration": 94,
					"src": "3972:14:1"
				  },
				  "nodeType": "ModifierInvocation",
				  "src": "3972:14:1"
				}
			  ],
			  "name": "releaseFunds",
			  "nodeType": "FunctionDefinition",
			  "parameters": {
				"id": 411,
				"nodeType": "ParameterList",
				"parameters": [
				  {
					"constant": false,
					"id": 410,
					"mutability": "mutable",
					"name": "_scheduleID",
					"nodeType": "VariableDeclaration",
					"scope": 450,
					"src": "3806:18:1",
					"stateVariable": false,
					"storageLocation": "default",
					"typeDescriptions": {
					  "typeIdentifier": "t_int256",
					  "typeString": "int256"
					},
					"typeName": {
					  "id": 409,
					  "name": "int256",
					  "nodeType": "ElementaryTypeName",
					  "src": "3806:6:1",
					  "typeDescriptions": {
						"typeIdentifier": "t_int256",
						"typeString": "int256"
					  }
					},
					"visibility": "internal"
				  }
				],
				"src": "3805:20:1"
			  },
			  "returnParameters": {
				"id": 423,
				"nodeType": "ParameterList",
				"parameters": [],
				"src": "3991:0:1"
			  },
			  "scope": 479,
			  "src": "3784:443:1",
			  "stateMutability": "payable",
			  "virtual": false,
			  "visibility": "public"
			},
			{
			  "body": {
				"id": 465,
				"nodeType": "Block",
				"src": "4327:80:1",
				"statements": [
				  {
					"expression": {
					  "id": 460,
					  "isConstant": false,
					  "isLValue": false,
					  "isPure": false,
					  "lValueRequested": false,
					  "leftHandSide": {
						"id": 457,
						"name": "projectState",
						"nodeType": "Identifier",
						"overloadedDeclarations": [],
						"referencedDeclaration": 68,
						"src": "4337:12:1",
						"typeDescriptions": {
						  "typeIdentifier": "t_enum$_ProjectState_$48",
						  "typeString": "enum freelancer.ProjectState"
						}
					  },
					  "nodeType": "Assignment",
					  "operator": "=",
					  "rightHandSide": {
						"expression": {
						  "id": 458,
						  "name": "ProjectState",
						  "nodeType": "Identifier",
						  "overloadedDeclarations": [],
						  "referencedDeclaration": 48,
						  "src": "4352:12:1",
						  "typeDescriptions": {
							"typeIdentifier": "t_type$_t_enum$_ProjectState_$48_$",
							"typeString": "type(enum freelancer.ProjectState)"
						  }
						},
						"id": 459,
						"isConstant": false,
						"isLValue": false,
						"isPure": true,
						"lValueRequested": false,
						"memberName": "closed",
						"nodeType": "MemberAccess",
						"src": "4352:19:1",
						"typeDescriptions": {
						  "typeIdentifier": "t_enum$_ProjectState_$48",
						  "typeString": "enum freelancer.ProjectState"
						}
					  },
					  "src": "4337:34:1",
					  "typeDescriptions": {
						"typeIdentifier": "t_enum$_ProjectState_$48",
						"typeString": "enum freelancer.ProjectState"
					  }
					},
					"id": 461,
					"nodeType": "ExpressionStatement",
					"src": "4337:34:1"
				  },
				  {
					"eventCall": {
					  "arguments": [],
					  "expression": {
						"argumentTypes": [],
						"id": 462,
						"name": "projectEnded",
						"nodeType": "Identifier",
						"overloadedDeclarations": [],
						"referencedDeclaration": 218,
						"src": "4386:12:1",
						"typeDescriptions": {
						  "typeIdentifier": "t_function_event_nonpayable$__$returns$__$",
						  "typeString": "function ()"
						}
					  },
					  "id": 463,
					  "isConstant": false,
					  "isLValue": false,
					  "isPure": false,
					  "kind": "functionCall",
					  "lValueRequested": false,
					  "names": [],
					  "nodeType": "FunctionCall",
					  "src": "4386:14:1",
					  "tryCall": false,
					  "typeDescriptions": {
						"typeIdentifier": "t_tuple$__$",
						"typeString": "tuple()"
					  }
					},
					"id": 464,
					"nodeType": "EmitStatement",
					"src": "4381:19:1"
				  }
				]
			  },
			  "functionSelector": "c3966409",
			  "id": 466,
			  "implemented": true,
			  "kind": "function",
			  "modifiers": [
				{
				  "id": 453,
				  "modifierName": {
					"id": 452,
					"name": "bothClientFreelancer",
					"nodeType": "IdentifierPath",
					"referencedDeclaration": 121,
					"src": "4282:20:1"
				  },
				  "nodeType": "ModifierInvocation",
				  "src": "4282:20:1"
				},
				{
				  "id": 455,
				  "modifierName": {
					"id": 454,
					"name": "noMoreFunds",
					"nodeType": "IdentifierPath",
					"referencedDeclaration": 190,
					"src": "4311:11:1"
				  },
				  "nodeType": "ModifierInvocation",
				  "src": "4311:11:1"
				}
			  ],
			  "name": "endProject",
			  "nodeType": "FunctionDefinition",
			  "parameters": {
				"id": 451,
				"nodeType": "ParameterList",
				"parameters": [],
				"src": "4256:2:1"
			  },
			  "returnParameters": {
				"id": 456,
				"nodeType": "ParameterList",
				"parameters": [],
				"src": "4327:0:1"
			  },
			  "scope": 479,
			  "src": "4237:170:1",
			  "stateMutability": "nonpayable",
			  "virtual": false,
			  "visibility": "public"
			},
			{
			  "body": {
				"id": 477,
				"nodeType": "Block",
				"src": "4505:45:1",
				"statements": [
				  {
					"expression": {
					  "expression": {
						"arguments": [
						  {
							"id": 473,
							"name": "this",
							"nodeType": "Identifier",
							"overloadedDeclarations": [],
							"referencedDeclaration": 4294967268,
							"src": "4530:4:1",
							"typeDescriptions": {
							  "typeIdentifier": "t_contract$_freelancer_$479",
							  "typeString": "contract freelancer"
							}
						  }
						],
						"expression": {
						  "argumentTypes": [
							{
							  "typeIdentifier": "t_contract$_freelancer_$479",
							  "typeString": "contract freelancer"
							}
						  ],
						  "id": 472,
						  "isConstant": false,
						  "isLValue": false,
						  "isPure": true,
						  "lValueRequested": false,
						  "nodeType": "ElementaryTypeNameExpression",
						  "src": "4522:7:1",
						  "typeDescriptions": {
							"typeIdentifier": "t_type$_t_address_$",
							"typeString": "type(address)"
						  },
						  "typeName": {
							"id": 471,
							"name": "address",
							"nodeType": "ElementaryTypeName",
							"src": "4522:7:1",
							"typeDescriptions": {}
						  }
						},
						"id": 474,
						"isConstant": false,
						"isLValue": false,
						"isPure": false,
						"kind": "typeConversion",
						"lValueRequested": false,
						"names": [],
						"nodeType": "FunctionCall",
						"src": "4522:13:1",
						"tryCall": false,
						"typeDescriptions": {
						  "typeIdentifier": "t_address",
						  "typeString": "address"
						}
					  },
					  "id": 475,
					  "isConstant": false,
					  "isLValue": false,
					  "isPure": false,
					  "lValueRequested": false,
					  "memberName": "balance",
					  "nodeType": "MemberAccess",
					  "src": "4522:21:1",
					  "typeDescriptions": {
						"typeIdentifier": "t_uint256",
						"typeString": "uint256"
					  }
					},
					"functionReturnParameters": 470,
					"id": 476,
					"nodeType": "Return",
					"src": "4515:28:1"
				  }
				]
			  },
			  "functionSelector": "12065fe0",
			  "id": 478,
			  "implemented": true,
			  "kind": "function",
			  "modifiers": [],
			  "name": "getBalance",
			  "nodeType": "FunctionDefinition",
			  "parameters": {
				"id": 467,
				"nodeType": "ParameterList",
				"parameters": [],
				"src": "4436:2:1"
			  },
			  "returnParameters": {
				"id": 470,
				"nodeType": "ParameterList",
				"parameters": [
				  {
					"constant": false,
					"id": 469,
					"mutability": "mutable",
					"name": "balance",
					"nodeType": "VariableDeclaration",
					"scope": 478,
					"src": "4484:15:1",
					"stateVariable": false,
					"storageLocation": "default",
					"typeDescriptions": {
					  "typeIdentifier": "t_uint256",
					  "typeString": "uint256"
					},
					"typeName": {
					  "id": 468,
					  "name": "uint256",
					  "nodeType": "ElementaryTypeName",
					  "src": "4484:7:1",
					  "typeDescriptions": {
						"typeIdentifier": "t_uint256",
						"typeString": "uint256"
					  }
					},
					"visibility": "internal"
				  }
				],
				"src": "4483:17:1"
			  },
			  "scope": 479,
			  "src": "4417:133:1",
			  "stateMutability": "view",
			  "virtual": false,
			  "visibility": "public"
			}
		  ],
		  "scope": 480,
		  "src": "204:4348:1"
		}
	  ],
	  "src": "179:4374:1"
	},
	"compiler": {
	  "name": "solc",
	  "version": "0.8.0+commit.c7dfd78e.Emscripten.clang"
	},
	"networks": {},
	"schemaVersion": "3.4.4",
	"updatedAt": "2022-02-06T05:42:25.999Z",
	"devdoc": {
	  "kind": "dev",
	  "methods": {},
	  "version": 1
	},
	"userdoc": {
	  "kind": "user",
	  "methods": {},
	  "version": 1
	}
  }